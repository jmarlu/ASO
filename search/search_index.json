{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Administraci\u00f3n de Sistemas Operativos","text":"<p>Aqu\u00ed puedes encontrar los apuntes del m\u00f3dulo de Administraci\u00f3n de Sistemas Operativos, que se imparte en el segundo curso del ciclo formativo de grado superior de Administraci\u00f3n de Sistemas Inform\u00e1ticos en Red.</p> <ul> <li>La duraci\u00f3n del m\u00f3dulo es de 85 horas lectivas, a raz\u00f3n de 4 horas semanales. Estas horas son totales que cubren las pr\u00e1cticas. </li> </ul>"},{"location":"#que-voy-a-aprender","title":"\u00bfQu\u00e9 voy a aprender?","text":"<ul> <li>Administrar sistemas operativos de servidor, instalando y configurando el software, en condiciones de calidad para asegurar el funcionamiento del sistema.</li> <li>Administrar servicios de recursos compartidos (acceso a directorios, impresi\u00f3n, accesos remotos, entre otros) instalando y configurando el software, en condiciones de calidad.</li> <li>Administrar usuarios de acuerdo a las especificaciones de explotaci\u00f3n para garantizar los accesos y la disponibilidad de los recursos del sistema.</li> <li>Gestionar los recursos de diferentes sistemas operativos (programando y verificando su cumplimiento).</li> </ul>"},{"location":"#resultados-de-aprendizaje","title":"Resultados de aprendizaje","text":"<p>Un Resultado de Aprendizaje \"es una declaraci\u00f3n de lo que el estudiante se espera que conozca, comprenda y sea capaz de hacer al finalizar un periodo de aprendizaje\". Los resultados de aprendizaje de ASO vienen definidos en el RD 1629/2009.</p> <p>Los Resultados de Aprendizaje de ASO son:</p> <ol> <li>Administra el servicio de directorio interpretando especificaciones e integr\u00e1ndolo en una red.</li> <li>Administra procesos del sistema describi\u00e9ndolos y aplicando criterios de seguridad y eficiencia.</li> <li>Gestiona la automatizaci\u00f3n de tareas del sistema, aplicando criterios de eficiencia y utilizando comandos y herramientas gr\u00e1ficas.</li> <li>Administra de forma remota el sistema operativo en red valorando su importancia y aplicando criterios de seguridad.</li> <li>Administra servidores de impresi\u00f3n describiendo sus funciones e integr\u00e1ndolos en una red.</li> <li>Integra sistemas operativos libres y propietarios, justificando y garantizando su interoperabilidad.</li> <li>Utiliza lenguajes de guiones en sistemas operativos, describiendo su aplicaci\u00f3n y administrando servicios del sistema operativo.</li> </ol>"},{"location":"#unidades-didacticas-temporalizacion","title":"Unidades did\u00e1cticas / Temporalizaci\u00f3n","text":"<p>A continuaci\u00f3n se muestran las unidades did\u00e1cticas y una estimaci\u00f3n temporal de cada una de ellas, ajustadas al calendario escolar y repartidas en cada evaluaci\u00f3n con una duraci\u00f3n aproximada de 32 sesiones.</p>"},{"location":"#primera-evaluacion","title":"Primera evaluaci\u00f3n","text":"<ol> <li>ShellScripting Linux y Powershell. (4 sesiones, 8 horas)<ul> <li>Fechas: 8-sep-2025 al 24-sep-2025.</li> <li>ShellScripting, creaci\u00f3n scripts, variables, par\u00e1metros, operadores.</li> <li>ShellScripting, Re-direcciones, tuber\u00edas.</li> <li>Control de flujo en Shell, vectores.</li> </ul> </li> <li>Administraci\u00f3n de Procesos del Sistema. (4 sesiones, 8 horas)<ul> <li>Fechas: 29-sep-2025 al 15-oct-2025 (excepto festivo 10-oct-2025).</li> <li>Procesos. Tipos. Estados. Estructura. Transiciones, Hilos.</li> <li>Planificador, Tipos de algoritmos de planificaci\u00f3n, Sincronizaci\u00f3n e interrupciones entre procesos.</li> <li>Gesti\u00f3n de procesos, demonios/servicios con Shell y Powershell.</li> </ul> </li> <li>Servicios de Directorio (4 sesiones, 8 horas)<ul> <li>Fechas: 20-oct-2025 al 5-nov-2025.</li> <li>Libres: LDAP (No tiene que ser ese obligatorio).</li> <li>Propietarios: Active Directory </li> </ul> </li> </ol>"},{"location":"#segunda-evaluacion","title":"Segunda evaluaci\u00f3n","text":"<ol> <li>Integraci\u00f3n de sistemas operativos en red. (8 sesiones, 16 horas).<ul> <li>Fechas: 10-nov-2025 al 10-dic-2025.</li> <li>Escenarios heterog\u00e9neos, Protocolos para redes heterog\u00e9neas, servicios de recursos compartidos.</li> <li>NFS, Instalaci\u00f3n, Permisos, Montaje autom\u00e1tico de un cliente NFS, configuraci\u00f3n de ficheros.</li> <li>NextCloud, Instalaci\u00f3n, configuraci\u00f3n de ficheros y permisos de usuario.</li> <li>SAMBA, fichero configuraci\u00f3n, Creaci\u00f3n directorio compartido, Integraci\u00f3n de permisos.</li> <li>SAMBA, Administraci\u00f3n de servicios con RSAT, perfiles de usuario y carpetas personales, cuotas.</li> </ul> </li> <li>Informaci\u00f3n del sistema operativo (4 sesiones, 8 horas).<ul> <li>Fechas: 15-ene-2026 al 3-feb-2026 (excepto festivo 16-feb-2026).</li> <li>Estructura directorios. B\u00fasqueda de informaci\u00f3n del sistema. Rendimiento. Estad\u00edsticas.</li> <li>Planificaci\u00f3n de Tareas, Programador de tareas, <code>crontab</code>.</li> <li>Servicio Monitorizaci\u00f3n, Nagios, PRTG, OpenNMS.</li> </ul> </li> <li>Servicios de acceso y administraci\u00f3n remota (4 sesiones, 8 horas). <ul> <li>Fechas: 8-feb-2026 al 24-feb-2026.</li> <li>Acceso remoto en modo texto <code>SSH</code>. Tunelizaci\u00f3n.</li> <li>Escritorio Remoto:  RDP y xRDP. Acceso remoto de equipos en el AD con PWSH.</li> <li>Herramientas gr\u00e1ficas externas, TeamViewer, AnyDesk y Apache Guacamole.</li> </ul> </li> <li>Administraci\u00f3n de Servidores de Impresi\u00f3n (4 sesiones, 8 horas).<ul> <li>Fechas: 1-mar-2026 al 16-mar-2026 (excepto festivo 20-mar-2026).</li> <li>Sistemas de Impresi\u00f3n, Puertos y protocolos de impresi\u00f3n.</li> <li>Servidor de impresi\u00f3n en GNU/Linux, <code>CUPS</code>. \u00d3rdenes para la gesti\u00f3n de impresoras y trabajos.</li> <li>Administraci\u00f3n de los Servicios de Impresi\u00f3n en Windows Server.</li> </ul> </li> </ol>"},{"location":"#diagrama-de-gantt","title":"Diagrama de Gantt","text":"<p>A continuaci\u00f3n se presenta un diagrama de Gantt que ilustra la temporalizaci\u00f3n de las unidades did\u00e1cticas y sus fechas:</p> <pre><code>gantt\n    title Temporalizaci\u00f3n de las Unidades Did\u00e1cticas\n    dateFormat  YYYY-MM-DD\n    section Primera Evaluaci\u00f3n\n    ShellScripting Linux y Powershell      :done, 2025-09-08, 2025-09-24\n    Administraci\u00f3n de Procesos del Sistema:done, 2025-09-29, 2025-10-15\n    Servicios de Directorio               :done, 2025-10-20, 2025-11-05\n    section Segunda Evaluaci\u00f3n\n    Integraci\u00f3n de sistemas operativos en red :active, 2025-11-10, 2025-12-10\n    Informaci\u00f3n del sistema operativo         :2026-01-15, 2026-02-03\n    Servicios de acceso y administraci\u00f3n remota :2026-02-08, 2026-02-24\n    Administraci\u00f3n de Servidores de Impresi\u00f3n  :2026-03-01, 2026-03-16</code></pre> <p>Este diagrama proporciona una visi\u00f3n general de las fechas y duraci\u00f3n de cada unidad did\u00e1ctica, incluyendo los festivos relevantes.</p>"},{"location":"#evaluacion","title":"Evaluaci\u00f3n","text":""},{"location":"#instrumentos-de-calificacion","title":"Instrumentos de calificaci\u00f3n","text":"<ol> <li> <p>Instrumento de calificaci\u00f3n 1 (IC1):: escala de valores comprendidas entre 0 y 3 puntos calificados de la siguiente forma:</p> <ul> <li>0: No realizada.</li> <li>1: Realizada pero soluci\u00f3n err\u00f3nea o incompleta.</li> <li>2: Realizada y soluci\u00f3n aceptable, aunque tiene alg\u00fan apartado incompleto.</li> <li>3: Realizada y soluci\u00f3n correcta.</li> </ul> </li> <li> <p>Instrumento de calificaci\u00f3n 2 (IC2): escala de valores comprendidas entre 0 y 7 puntos calificados de la siguiente forma:</p> <ul> <li>0: No realizada.</li> <li>1-3: Realizada pero soluci\u00f3n err\u00f3nea o incompleta.</li> <li>3-6: Realizada y soluci\u00f3n aceptable, aunque tiene alg\u00fan apartado incompleto.</li> <li>7: Realizada y soluci\u00f3n correcta.</li> </ul> </li> </ol>"},{"location":"#instrumentos-de-evaluacion","title":"Instrumentos de Evaluaci\u00f3n","text":"<p>La nota de cada Resultado de Aprendizaje se calcula mediante la media ponderada de los puntos obtenidos, de los siguientes instrumentos de evaluaci\u00f3n.</p> <ol> <li> <p>Instrumento de Evaluaci\u00f3n 1 (IE1). Trabajo en Clase/Actividades.</p> <ol> <li>Se eval\u00faan todas las actividades realizadas en clase.</li> <li>Las actividades se eval\u00faan mediante observaci\u00f3n directa del docente y aplicando el IC1.</li> </ol> </li> <li> <p>Instrumentos de Evaluaci\u00f3n 2 (IE2). Pruebas de Auditor\u00eda.     Pueden conterner:</p> <ol> <li>Cuestionario multi-opci\u00f3n (test) de 20 preguntas sobre la teor\u00eda de la unidad.</li> <li>Ejercicios pr\u00e1cticos sobre las actividades realizadas de la unidad.</li> </ol> </li> </ol> <p>Nota:</p> <p>Esta prueba se califica entre 0 y 30 puntos siguiendo las siguientes premisas:</p> <ul> <li>0-10 puntos. Donde Cada dos contestaciones incorrectas contestadas resta una bien.</li> <li>0-6 puntos: dos ejercicios de nivel medio-bajo, 3 puntos cada uno de ellos aplicando IC1.</li> <li>0-14 puntos: dos ejercicios de nivel medio-alto aplicando IC2.</li> </ul>"},{"location":"Examenes/Examen%20de%20comandos/","title":"Examen de comandos","text":""},{"location":"Examenes/Examen%20de%20comandos/#instrucciones","title":"Instrucciones","text":"<ul> <li>Tiempo disponible: 2 horas</li> <li>Cada comando debe ejecutarse en una \u00fanica l\u00ednea</li> <li>Se pueden utilizar pipes (|), redirecciones (&gt;, &gt;&gt;) y operadores</li> <li>Los comandos deben funcionar en cualquier distribuci\u00f3n Linux</li> <li>La puntuaci\u00f3n total es de 10 puntos</li> </ul>"},{"location":"Examenes/Examen%20de%20comandos/#ejercicios","title":"Ejercicios","text":""},{"location":"Examenes/Examen%20de%20comandos/#1-gestion-de-usuarios-25-puntos","title":"1. Gesti\u00f3n de Usuarios (2.5 puntos)","text":"<p>Crea un comando que muestre \u00daNICAMENTE el UID y nombre del usuario en el sistema.</p> <p>Requisitos: - Solo debe mostrar dos columnas: UID y nombre de usuario - Debe estar ordenado por UID de menor a mayor - No debe mostrar cabeceras ni informaci\u00f3n adicional</p> <p>Comandos \u00fatiles: - <code>cut</code> - Extrae secciones de cada l\u00ednea de un archivo - <code>sort</code> - Ordena l\u00edneas de texto - <code>tr</code> - Traduce o elimina caracteres</p> <p>!!! Note:</p> <pre><code>  No se puede utilizar ni awk ni sed\n</code></pre> <p>Ejemplo de salida esperada: <pre><code>1000 julio\n1001 maria\n1002 pedro\n</code></pre></p>"},{"location":"Examenes/Examen%20de%20comandos/#2-busqueda-de-correos-electronicos-25-puntos","title":"2. B\u00fasqueda de Correos Electr\u00f3nicos (2.5 puntos)","text":"<p>Desarrolla un comando que busque todos los correos electr\u00f3nicos en el sistema de ficheros.</p> <p>Requisitos: 1. Crear un fichero de prueba:    - Nombre: <code>emails.txt</code>    - Contenido: A\u00f1adir al menos un correo electr\u00f3nico v\u00e1lido    - Ubicaci\u00f3n: Directorio home del usuario</p> <ol> <li>Comando de b\u00fasqueda:</li> <li>Debe buscar el patr\u00f3n usuario@dominio.extension</li> <li>La b\u00fasqueda debe realizarse en todo el sistema</li> <li>Ignorar errores de permisos</li> <li>Mostrar solo las rutas de los archivos que contienen correos</li> </ol> <p>Comandos \u00fatiles: - <code>find</code> - <code>egrep</code></p> <p>Ejemplo de salida esperada: <pre><code>/home/usuario/emails.txt\n/etc/config/mail.conf\n</code></pre></p>"},{"location":"Examenes/Examen%20de%20comandos/#3-gestion-de-ficheros-y-permisos-25-puntos","title":"3. Gesti\u00f3n de Ficheros y Permisos (2.5 puntos)","text":"<p>Crea un comando que cuente ficheros espec\u00edficos del sistema seg\u00fan varios criterios.</p> <p>Requisitos: - Buscar ficheros que cumplan TODAS estas condiciones:   * Pertenezcan a tu usuario actual   * Tama\u00f1o superior a 200KB   * Tengas permiso de escritura sobre ellos</p> <ul> <li>Gesti\u00f3n de salida:</li> <li>El n\u00famero total de ficheros \u2192 fichero <code>res3</code></li> <li>Mensajes de error \u2192 fichero <code>err3</code></li> <li>No mostrar nada por pantalla</li> <li>Ambos ficheros deben crearse en el directorio actual</li> </ul> <p>Comandos \u00fatiles: - <code>find</code> - Busca archivos en una jerarqu\u00eda de directorios - <code>wc</code> - Imprime el n\u00famero de l\u00edneas, palabras y bytes</p> <p>Ejemplo del contenido esperado en res3: <pre><code>42\n</code></pre></p>"},{"location":"Examenes/Examen%20de%20comandos/#4-monitorizacion-de-procesos-25-puntos","title":"4. Monitorizaci\u00f3n de Procesos (2.5 puntos)","text":"<p>Crea un comando que muestre los 5 procesos que m\u00e1s memoria RAM est\u00e1n consumiendo.</p> <p>Requisitos: - Mostrar solo: PID, usuario, %RAM y nombre del proceso - Ordenar por uso de RAM (de mayor a menor) - Excluir procesos del sistema (root)</p> <p>Comandos \u00fatiles: - <code>ps</code> - Reporta el estado de los procesos - <code>head</code> - Muestra las primeras l\u00edneas</p> <p>Ejemplo de salida esperada: <pre><code>  PID USER     %MEM COMMAND\n 3721 julio    4.2  firefox\n 2514 julio    3.1  chrome\n 1852 julio    2.8  code\n 4012 julio    2.1  thunderbird\n 3301 julio    1.9  nautilus\n</code></pre></p>"},{"location":"Examenes/Examen%20de%20comandos/#ayudas-generales","title":"Ayudas generales:","text":"<ol> <li> <p>Herramientas de ayuda:</p> <ul> <li><code>man comando</code> - Manual del comando</li> <li><code>comando --help</code> - Ayuda r\u00e1pida</li> <li><code>info comando</code> - Informaci\u00f3n detallada</li> </ul> </li> <li> <p>Consejos de ejecuci\u00f3n:</p> <ul> <li>Prueba primero en directorios peque\u00f1os</li> <li>Usa Control+C para detener un comando</li> </ul> </li> <li> <p>T\u00e9cnicas \u00fatiles:</p> <ul> <li>Redirecci\u00f3n de salida: <code>&gt;</code>, <code>&gt;&gt;</code></li> <li>Redirecci\u00f3n de error: <code>2&gt;</code></li> <li>Tuber\u00edas: <code>|</code></li> <li>Variables de entorno: <code>$USER</code>, <code>$HOME</code></li> </ul> </li> </ol>"},{"location":"Examenes/Examen%20de%20comandos/#criterios-de-evaluacion","title":"Criterios de Evaluaci\u00f3n","text":"<ul> <li>Precisi\u00f3n del comando (40%)</li> <li>Eficiencia de la soluci\u00f3n (30%)</li> <li>Gesti\u00f3n correcta de errores (20%)</li> <li>Formato de salida correcto (10%)</li> </ul>"},{"location":"UD1/linux/Actividades/","title":"Actividades de Script de Linux","text":""},{"location":"UD1/linux/Actividades/#introduccion","title":"Introducci\u00f3n","text":"<ol> <li> <p>CLI personal <code>micomando</code></p> <ul> <li>Crea el directorio <code>~/misScripts</code> (si no existe) y guarda all\u00ed un script llamado <code>micomando</code> con el contenido <code>echo \"Ejecuci\u00f3n de micomando\"</code>.</li> <li>Concede permisos de ejecuci\u00f3n (<code>chmod u+x ~/misScripts/micomando</code>).</li> <li>A\u00f1ade <code>export PATH=\"$HOME/misScripts:$PATH\"</code> al final de tu <code>~/.bashrc</code> y vuelve a cargar la sesi\u00f3n (<code>source ~/.bashrc</code>).</li> <li>Comprueba que el comando funciona escribiendo <code>micomando</code> desde cualquier directorio; debe mostrar el texto del script.</li> </ul> </li> <li> <p>Saludo personalizado</p> <ul> <li>Crea <code>Script1_1.sh</code>, que pida por teclado el nombre completo y muestre <code>Que tengas un pr\u00f3spero d\u00eda &lt;nombre introducido&gt;</code>.</li> <li>Duplica el archivo como <code>Script1_1_2.sh</code> y modifica la l\u00f3gica para solicitar nombre y apellido por separado. Muestra ambos valores en la misma frase siguiendo el ejemplo del enunciado.</li> </ul> </li> <li> <p>Creaci\u00f3n de usuarios con variables (<code>Script1_2.sh</code>)</p> <ul> <li>El script debe solicitar nombre de usuario, ruta del directorio home a crear y shell predeterminado.</li> <li>Usa <code>useradd -m -d &lt;ruta&gt; -s &lt;shell&gt; &lt;usuario&gt;</code> (se requiere ejecutar con privilegios de administraci\u00f3n).</li> <li>Muestra un mensaje de \u00e9xito o un error significativo si el usuario ya existe o si el comando falla.</li> </ul> </li> <li> <p>Comportamiento de comodines y expansi\u00f3n de variables</p> <ul> <li>Crea un directorio de pruebas con ficheros <code>f1</code>, <code>f2</code> y <code>f3</code> y sit\u00faate en \u00e9l.</li> <li>Eval\u00faa y explica qu\u00e9 muestran los siguientes comandos:</li> </ul> Comando Pista <code>echo *</code> Se expande el comod\u00edn al contenido del directorio. <code>echo \\*</code> El car\u00e1cter <code>\\</code> evita la expansi\u00f3n del comod\u00edn. <code>echo \"*\"</code> Las comillas dobles bloquean la expansi\u00f3n de comodines. <code>echo '\\*'</code> Las comillas simples imprimen el texto literal, incluido el <code>\\</code>. <code>edad=20</code> Asigna un valor a la variable <code>edad</code>. <code>echo $edad</code> Expande la variable. <code>echo \\$edad</code> Escapa el s\u00edmbolo <code>$</code> para mostrarlo literal. <code>echo \"$edad\"</code> Se eval\u00faa la variable dentro de comillas dobles. <code>echo '$edad'</code> Con comillas simples no se expande la variable. <code>echo \"T\u00fa eres $(logname) y tienes -&gt; $edad a\u00f1os\"</code> Combina sustituci\u00f3n de comandos y expansi\u00f3n de variables. <code>echo T\u00fa eres $(logname) y tienes -&gt; $edad a\u00f1os</code> Resultado equivalente mientras no existan espacios problem\u00e1ticos. </li> <li> <p>Comparaciones de cadenas</p> <ul> <li>Define <code>s1=si</code>, <code>s2=no</code>, <code>vacia=\"\"</code> y <code>arch1=informe.pdf</code>.</li> <li>Comprueba con <code>[[ ... ]]</code>:         a) Si <code>s1</code> es igual a <code>s2</code>.         b) Si <code>s1</code> es diferente de <code>s2</code>.         c) Si <code>vacia</code> est\u00e1 vac\u00eda (<code>-z</code>).         d) Si <code>vacia</code> no est\u00e1 vac\u00eda (<code>-n</code>).  </li> <li>Anota cada resultado con un mensaje claro por pantalla.</li> </ul> </li> <li> <p>Comparaciones num\u00e9ricas</p> <ul> <li>Declara <code>num1=2</code> y <code>num2=100</code>.</li> <li>Verifica si <code>num1</code> es mayor que <code>num2</code> usando las tres sintaxis: <code>[ ]</code>, <code>[[ ]]</code> y <code>(( ))</code>.</li> <li>Indica el resultado en cada caso con un mensaje descriptivo.</li> </ul> </li> <li> <p>Permisos sobre ficheros (<code>arch</code>)</p> <ul> <li>Crea un fichero vac\u00edo <code>arch</code> (<code>&gt; arch</code>) y ajusta permisos a solo lectura (<code>chmod 444 arch</code>).</li> <li>Programa un script que:   a) Muestre <code>Permiso x no indicado</code> si el fichero no es ejecutable.   b) Muestre <code>Permisos wx no indicados</code> cuando adem\u00e1s tampoco sea escribible.</li> </ul> </li> </ol>"},{"location":"UD1/linux/Actividades/#estructura-if","title":"Estructura IF","text":"<ol> <li> <p>Paridad de un n\u00famero (<code>Script_IF_1.sh</code>)    Solicita un n\u00famero entero por teclado y muestra si es par o impar. Aprovecha el operador <code>%</code> para obtener el resto de la divisi\u00f3n entre 2 y valida que el dato sea realmente num\u00e9rico antes de operar.</p> </li> <li> <p>Calculadora b\u00e1sica (<code>Script_IF_2.sh</code>)    Pide dos n\u00fameros y el s\u00edmbolo de la operaci\u00f3n (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>). Calcula y muestra el resultado. Controla posibles errores (operador desconocido, divisi\u00f3n por cero) antes de usar <code>bc -l</code> o aritm\u00e9tica integrada.</p> </li> <li> <p>Calculadora con formato (<code>Script_IF_3.sh</code>)    Parte del script anterior y a\u00f1ade una pregunta adicional: <code>\u00bfQuieres decimales (s/n)?</code>.  </p> <ul> <li>Respuesta <code>s</code>: muestra el resultado con decimales.  </li> <li>Respuesta <code>n</code>: muestra el n\u00famero redondeado (usa <code>printf</code>).  </li> <li>Cualquier otra opci\u00f3n debe generar el mensaje <code>No has seleccionado ninguna opci\u00f3n</code> y finalizar con error.</li> </ul> </li> <li> <p>Men\u00fa de utilidades de red (<code>Script_IF_4.sh</code>) </p> <ul> <li>Solicita una IP o dominio.  </li> <li>Muestra un men\u00fa con tres opciones: <code>ping</code>, <code>traceroute</code> y <code>whois</code>.  </li> <li>Ejecuta la opci\u00f3n elegida validando previamente que el comando est\u00e9 instalado (<code>command -v</code>).  </li> <li>Ante una opci\u00f3n no v\u00e1lida, indica <code>No has seleccionado ninguna opci\u00f3n v\u00e1lida</code> y termina.  </li> <li>Nota: en Debian/Ubuntu puedes instalar herramientas extra con <code>sudo apt install inetutils-ping traceroute whois</code>.</li> </ul> </li> <li> <p>Informaci\u00f3n de rutas (<code>Script_IF_5.sh</code>) </p> <ul> <li>Pide una ruta absoluta.  </li> <li>Si es un directorio, informa de ello.  </li> <li>Si es un fichero, comprueba permisos de lectura, escritura y ejecuci\u00f3n imprimiendo los que correspondan.  </li> <li>Si no existe, muestra <code>no existe</code>.  </li> <li>Recuerda que puedes anidar condicionales <code>if</code> para estructurar la l\u00f3gica.</li> </ul> </li> </ol>"},{"location":"UD1/linux/Actividades/#argumentos","title":"Argumentos","text":"<ol> <li> <p>Propietario y permisos (<code>scriptArgs_2.sh</code>) </p> <ul> <li>Debe recibir exactamente un argumento.  </li> <li>Si no recibe ninguno o recibe m\u00e1s de uno, mostrar <code>ERROR N\u00daMERO DE ARGUMENTOS INCORRECTO</code>.  </li> <li>Si el argumento no es un fichero regular, mostrar <code>EL ARGUMENTO DEBE SER UN FICHERO</code>.  </li> <li>En caso correcto, obtener el propietario y los permisos de \u201cotros\u201d usando <code>stat</code>.</li> </ul> </li> <li> <p>Datos de usuario (<code>scriptArgs_3.sh</code>) </p> <ul> <li>Recibe un \u00fanico argumento: nombre de usuario.  </li> <li>Si falta el argumento muestra <code>ERROR, N\u00daMERO DE ARGUMENTOS INCORRECTOS</code>.  </li> <li>Con <code>getent passwd &lt;usuario&gt;</code> recupera UID y shell, y mu\u00e9stralos en pantalla.</li> </ul> </li> <li> <p>Lista negra (<code>blacklist.sh</code>) </p> <ul> <li>Recibe exactamente un nombre de usuario.  </li> <li>Muestra un men\u00fa con dos opciones:  </li> <li>Agregar usuario a la lista y bloquearlo (<code>usermod -L</code>). Evita duplicados.  </li> <li>Eliminar usuario de la lista y desbloquearlo (<code>usermod -U</code>).  </li> <li>La lista se guarda en <code>blacklist.txt</code> y debe conservarse entre ejecuciones.</li> </ul> </li> </ol>"},{"location":"UD1/linux/Actividades/#case-y-while","title":"Case y While","text":"<ol> <li> <p>Men\u00fa interactivo de red </p> <ul> <li>El script recibe una IP/dominio como argumento.  </li> <li>Dentro de un bucle <code>while</code> ofrece las opciones: <code>ping</code>, <code>tracepath</code>, <code>nslookup</code>, <code>whois</code> y <code>salir</code>.  </li> <li>Usa <code>case</code> para despachar cada opci\u00f3n y vuelve al men\u00fa salvo que el usuario elija salir.  </li> <li>Ante opciones no contempladas muestra <code>OPCI\u00d3N DESCONOCIDA</code>.</li> </ul> </li> <li> <p>Control de accesos con <code>usuarios.log</code> </p> <ul> <li>El fichero <code>usuarios.log</code> contiene pares <code>usuario&lt;TAB&gt;contrase\u00f1a</code>.  </li> <li>Permite introducir usuario y contrase\u00f1a con un m\u00e1ximo de tres intentos.  </li> <li>Si alguno de los campos est\u00e1 vac\u00edo o no coincide, incrementa el contador y vuelve a pedir credenciales.  </li> <li>Mensaje final: <code>Bienvenido &lt;usuario&gt;</code> si acierta; <code>Usuario Incorrecto</code> si agota los intentos. </li> </ul> </li> <li> <p>Registro y autenticaci\u00f3n (<code>CrearUsuarios.sh</code>) </p> <ul> <li>Men\u00fa principal con opciones: <code>a) Log in</code>, <code>b) Registrarse</code>, <code>c) Salir</code>.  </li> <li>Registro: solicita usuario, contrase\u00f1a y confirmaci\u00f3n. Si coinciden, guarda <code>usuario contrase\u00f1a</code> en <code>cuentas.log</code>.  </li> <li>Inicio de sesi\u00f3n: permite hasta tres intentos comprobando contra <code>cuentas.log</code>.  </li> <li>Maneja errores (usuario existente, contrase\u00f1as distintas, opci\u00f3n inv\u00e1lida).</li> </ul> </li> </ol>"},{"location":"UD1/linux/Actividades/#for","title":"For","text":"<ol> <li> <p>Traza de <code>ejemploContinue.sh</code> </p> <ul> <li>Ejecuta <code>bash ./ejemploContinue.sh 3</code>.  </li> <li>Completa la tabla con las columnas <code>Iteraci\u00f3n</code>, <code>i</code>, <code>resto</code> (<code>i % 3</code>) y la acci\u00f3n tomada (<code>continue</code> o impresi\u00f3n por pantalla).  </li> <li>Observa que solo se muestran los valores de <code>i</code> divisible por el par\u00e1metro recibido.</li> </ul> </li> <li> <p>Expiraci\u00f3n de contrase\u00f1as (<code>expira.log</code>) </p> <ul> <li>El script recibe un n\u00famero de d\u00edas y un fichero <code>expira.log</code> con usuarios (uno por l\u00ednea).  </li> <li>Valida el argumento, comprueba que el fichero existe y usa <code>chage -M &lt;d\u00edas&gt; &lt;usuario&gt;</code> para cada entrada.  </li> <li>Informa de usuarios inexistentes o de posibles errores de ejecuci\u00f3n.</li> </ul> </li> <li> <p>Tablero de asteriscos </p> <ul> <li>Usa obligatoriamente la sintaxis <code>for (( ... ))</code>.  </li> <li>Recibe dos enteros positivos: n\u00famero de filas y columnas.  </li> <li>Imprime una tabla rectangular rellenando cada celda con <code>*</code> separado por espacios.</li> </ul> </li> </ol>"},{"location":"UD1/linux/Actividades/#for-in","title":"For-in","text":"<ol> <li> <p>Permisos de ejecuci\u00f3n para el grupo </p> <ul> <li>Recibe un directorio como argumento.  </li> <li>Recorre sus elementos con un bucle <code>for</code> (solo ficheros) y a\u00f1ade permiso de ejecuci\u00f3n al grupo (<code>chmod g+x</code>).  </li> <li>Al finalizar, muestra <code>ls -l</code> del directorio para comprobar los cambios.</li> </ul> </li> <li> <p>Mover o copiar por extensi\u00f3n </p> <ul> <li>Argumentos: extensi\u00f3n (sin punto), directorio origen y directorio destino.  </li> <li>Verifica que existan los directorios.  </li> <li>Pregunta si se desea <code>mover</code> o <code>copiar</code> y realiza la operaci\u00f3n solo con los ficheros que coincidan con la extensi\u00f3n.</li> </ul> </li> <li> <p>Alerta de capacidad con <code>equipos.txt</code> </p> <ul> <li>El fichero contiene: IP, nombre, espacio libre y RAM (en GB) separados por espacios.  </li> <li>El script recibe un \u00fanico argumento (<code>capacidad m\u00ednima</code>).  </li> <li>Recorre el fichero y muestra una alerta por cada equipo cuya capacidad libre sea inferior a la indicada.</li> </ul> </li> <li> <p>Creaci\u00f3n masiva de usuarios remotos (<code>creaUsuarios.sh</code>) </p> <ul> <li>Requiere que est\u00e9n instalados <code>openssh-server</code>, <code>ssh</code> y <code>sshpass</code> en la m\u00e1quina que ejecuta el script.  </li> <li>Archivos de entrada: <code>hosts.txt</code> (un host por l\u00ednea) y <code>usuarios.txt</code> (un usuario por l\u00ednea).  </li> <li>Para cada host:  </li> <li>Conecta como root usando <code>sshpass</code> (solo para entornos de laboratorio).  </li> <li>Elimina el usuario si existe (<code>userdel -rf</code>).  </li> <li>Crea de nuevo el usuario con <code>useradd -m</code>.  </li> <li>Recuerda que en entornos reales se recomienda autenticaci\u00f3n por claves, contrase\u00f1as robustas y control detallado de errores.</li> </ul> </li> </ol> <p>Warning</p> <p>Todas las actividades son obligatorias. Cuando un ejercicio solicite un script, entrega el fichero <code>.sh</code>. En el resto de casos documenta la resoluci\u00f3n con capturas (PDF). Aunque solo entregues un archivo, compr\u00edmelo antes de subirlo.</p>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/","title":"Soluciones - Actividades R\u00e1pidas (UD1 Linux)","text":"<p>Este documento recoge posibles soluciones para las actividades r\u00e1pidas incluidas al final de cada ficha te\u00f3rica. Las propuestas son orientativas; puedes adaptarlas seg\u00fan tus necesidades o las de tus alumnos.</p>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#condicionales-if","title":"Condicionales <code>if</code>","text":""},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#1-comprobar-usuario-y-mostrar-home","title":"1. Comprobar usuario y mostrar <code>HOME</code>","text":"<pre><code>#!/usr/bin/env bash\n\nread -rp \"Usuario a consultar: \" usuario\nif getent passwd \"$usuario\" &gt;/dev/null\nthen\n    home_dir=$(getent passwd \"$usuario\" | cut -d: -f6)\n    echo \"El directorio personal de $usuario es $home_dir\"\nelse\n    echo \"El usuario $usuario no existe en el sistema.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#2-mensaje-segun-la-hora","title":"2. Mensaje seg\u00fan la hora","text":"<pre><code>#!/usr/bin/env bash\n\nhora=$(date +%H)\nif (( hora &gt;= 11 &amp;&amp; hora &lt;= 12 ))\nthen\n    echo \"Descanso\"\nelif (( hora == 14 ))\nthen\n    echo \"Comida\"\nelse\n    echo \"Clase\"\nfi\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#3-verificar-disponibilidad-http","title":"3. Verificar disponibilidad HTTP","text":"<pre><code>#!/usr/bin/env bash\n\nread -rp \"Introduce la URL (ej. https://example.com): \" url\ncodigo=$(curl -Is \"$url\" | head -n1 | cut -d' ' -f2)\n\ncase $codigo in\n    200) echo \"Servicio OK (200).\" ;;\n    3*) echo \"Redirecci\u00f3n (c\u00f3digo $codigo).\" ;;\n    4*) echo \"Error del cliente (c\u00f3digo $codigo).\" ;;\n    5*) echo \"Error del servidor (c\u00f3digo $codigo).\" ;;\n    *)  echo \"No se pudo determinar el estado.\" ;;\nesac\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#bucles-for","title":"Bucles <code>for</code>","text":""},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#1-listar-usuarios-normales","title":"1. Listar usuarios normales","text":"<pre><code>#!/usr/bin/env bash\n\nwhile IFS=: read -r usuario _ uid _ _ _ home _\ndo\n    if (( uid &gt;= 1000 &amp;&amp; uid &lt; 65534 ))\n    then\n        echo \"$usuario \u2192 UID: $uid, HOME: $home\"\n    fi\ndone &lt; &lt;(getent passwd)\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#2-tabla-de-multiplicar-configurable","title":"2. Tabla de multiplicar configurable","text":"<pre><code>#!/usr/bin/env bash\n\nread -rp \"N\u00famero a multiplicar: \" numero\nread -rp \"Hasta qu\u00e9 factor: \" limite\n\nfor (( i = 1; i &lt;= limite; i++ ))\ndo\n    resultado=$(( numero * i ))\n    printf \"%d x %d = %d\\n\" \"$numero\" \"$i\" \"$resultado\"\ndone\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#3-monitorizar-hosts-y-registrar-resultado","title":"3. Monitorizar hosts y registrar resultado","text":"<pre><code>#!/usr/bin/env bash\n\nhosts=(server1.example.com 192.168.1.10 localhost)\nlog=\"monitor.log\"\ntimestamp=$(date '+%F %T')\n\nfor host in \"${hosts[@]}\"\ndo\n    if ping -c1 -W1 \"$host\" &gt;/dev/null 2&gt;&amp;1\n    then\n        estado=\"OK\"\n    else\n        estado=\"FALLO\"\n    fi\n    echo \"$timestamp;$host;$estado\" &gt;&gt; \"$log\"\ndone\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#bucles-while-until","title":"Bucles <code>while</code> / <code>until</code>","text":""},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#1-ping-a-lista-de-ips","title":"1. Ping a lista de IPs","text":"<pre><code>#!/usr/bin/env bash\n\nwhile read -r ip\ndo\n    [[ -z $ip ]] &amp;&amp; continue\n    if ping -c1 -W1 \"$ip\" &gt;/dev/null 2&gt;&amp;1\n    then\n        echo \"$ip responde.\"\n    else\n        echo \"$ip no responde.\"\n    fi\ndone &lt; ips.txt\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#2-reintentar-montaje-nfs-con-until","title":"2. Reintentar montaje NFS con <code>until</code>","text":"<pre><code>#!/usr/bin/env bash\n\ndestino=\"/mnt/nfs\"\ntry=0\nuntil mountpoint -q \"$destino\" || (( try == 5 ))\ndo\n    echo \"Intento $((try + 1)) de montar $destino...\"\n    mount \"$destino\" 2&gt;/dev/null || sleep 5\n    (( try++ ))\ndone\n\nif mountpoint -q \"$destino\"\nthen\n    echo \"Montaje completado.\"\nelse\n    echo \"No fue posible montar $destino tras varios intentos.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#3-menu-interactivo-con-while","title":"3. Men\u00fa interactivo con <code>while</code>","text":"<pre><code>#!/usr/bin/env bash\n\nopcion=\"\"\nwhile [[ $opcion != \"4\" ]]\ndo\n    cat &lt;&lt;EOF\n1) Mostrar fecha\n2) Uso de disco\n3) Usuario actual\n4) Salir\nEOF\n    read -rp \"Elige una opci\u00f3n: \" opcion\n\n    case $opcion in\n        1) date ;;\n        2) df -h / ;;\n        3) whoami ;;\n        4) echo \"Hasta luego.\" ;;\n        *) echo \"Opci\u00f3n no v\u00e1lida.\" ;;\n    esac\ndone\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#break-continue-exit","title":"<code>break</code>, <code>continue</code>, <code>exit</code>","text":""},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#1-detener-lectura-al-encontrar-fin","title":"1. Detener lectura al encontrar <code>FIN</code>","text":"<pre><code>#!/usr/bin/env bash\n\nwhile IFS= read -r linea\ndo\n    if [[ $linea == \"FIN\" ]]\n    then\n        echo \"Fin encontrado. Saliendo del bucle.\"\n        break\n    fi\n    echo \"$linea\"\ndone &lt; entrada.txt\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#2-salir-si-varbackups-no-es-escribible","title":"2. Salir si <code>/var/backups</code> no es escribible","text":"<pre><code>#!/usr/bin/env bash\n\nif [[ ! -w /var/backups ]]\nthen\n    echo \"No se puede escribir en /var/backups.\"\n    exit 2\nfi\n\necho \"Directorio accesible. Continuar con el script...\"\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#3-ignorar-nombres-que-empiecen-por-test","title":"3. Ignorar nombres que empiecen por <code>test</code>","text":"<pre><code>#!/usr/bin/env bash\n\nnombres=(test01 alpha beta testDemo gamma)\nfor nombre in \"${nombres[@]}\"\ndo\n    if [[ $nombre == test* ]]\n    then\n        continue\n    fi\n    echo \"Procesando $nombre\"\ndone\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#argumentos","title":"Argumentos","text":""},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#1-validar-fichero-directorio-y-numero","title":"1. Validar fichero, directorio y n\u00famero","text":"<pre><code>#!/usr/bin/env bash\n\nif [[ $# -ne 3 ]]\nthen\n    echo \"Uso: $0 fichero directorio numero\"\n    exit 1\nfi\n\narchivo=$1\ndirectorio=$2\nnumero=$3\n\n[[ -f $archivo ]]     || { echo \"$archivo no es un fichero v\u00e1lido\"; exit 1; }\n[[ -d $directorio ]]  || { echo \"$directorio no es un directorio\"; exit 1; }\n[[ $numero =~ ^[0-9]+$ ]] || { echo \"$numero no es un n\u00famero\"; exit 1; }\n\necho \"Par\u00e1metros correctos.\"\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#2-cuenta-atras-con-n","title":"2. Cuenta atr\u00e1s con <code>-n</code>","text":"<pre><code>#!/usr/bin/env bash\n\nwhile [[ $# -gt 0 ]]\ndo\n    case $1 in\n        -n)\n            objetivo=$2\n            shift 2\n            ;;\n        *)\n            echo \"Opci\u00f3n desconocida: $1\"\n            exit 1\n            ;;\n    esac\ndone\n\nif [[ -z $objetivo || ! $objetivo =~ ^[0-9]+$ ]]\nthen\n    echo \"Uso: $0 -n &lt;numero&gt;\"\n    exit 1\nfi\n\nfor (( i = objetivo; i &gt;= 0; i-- ))\ndo\n    echo \"$i\"\n    sleep 1\ndone\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#3-copiar-rutas-a-backup","title":"3. Copiar rutas a <code>backup/</code>","text":"<pre><code>#!/usr/bin/env bash\n\ndestino=\"backup\"\nmkdir -p \"$destino\"\n\nfor ruta in \"$@\"\ndo\n    if [[ -f $ruta ]]\n    then\n        cp \"$ruta\" \"$destino/\"\n        echo \"Copiado $ruta a $destino/\"\n    else\n        echo \"Se ignora $ruta (no es un fichero).\"\n    fi\ndone\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#operadores-logicos","title":"Operadores l\u00f3gicos","text":""},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#1-validar-fichero-existente-y-con-contenido","title":"1. Validar fichero existente y con contenido","text":"<pre><code>#!/usr/bin/env bash\n\nread -rp \"Fichero a revisar: \" fichero\nif [[ -f $fichero &amp;&amp; -s $fichero ]]\nthen\n    echo \"$fichero existe y no est\u00e1 vac\u00edo.\"\nelse\n    echo \"$fichero no existe o est\u00e1 vac\u00edo.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#2-servicio-activo-o-puerto-escuchando","title":"2. Servicio activo o puerto escuchando","text":"<pre><code>#!/usr/bin/env bash\n\nservicio=\"sshd\"\npuerto=\"22\"\n\nif systemctl is-active --quiet \"$servicio\" || ss -ltn | grep -q \":$puerto \"\nthen\n    echo \"El servicio $servicio est\u00e1 disponible.\"\nelse\n    echo \"Servicio $servicio ca\u00eddo y puerto $puerto sin escucha.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Actividades_Rapidas_Soluciones/#3-evaluar-numero-par-y-multiplo-de-3","title":"3. Evaluar n\u00famero par y m\u00faltiplo de 3","text":"<pre><code>#!/usr/bin/env bash\n\nread -rp \"Introduce un n\u00famero: \" numero\n\nif (( numero % 2 == 0 &amp;&amp; numero % 3 == 0 ))\nthen\n    echo \"$numero es par y m\u00faltiplo de 3.\"\nelse\n    echo \"$numero no cumple ambas condiciones.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Argumentos/","title":"Argumentos de scripts en Bash","text":""},{"location":"UD1/linux/Argumentos/#1-descripcion","title":"1. Descripci\u00f3n","text":"<p>Los argumentos permiten pasar informaci\u00f3n a un script desde la l\u00ednea de comandos. Se numeran empezando en <code>$1</code> y ofrecen flexibilidad para reutilizar el mismo script con datos diferentes.</p>"},{"location":"UD1/linux/Argumentos/#2-sintaxis-con-anotaciones","title":"2. Sintaxis con anotaciones","text":"<pre><code>./script.sh arg1 arg2 arg3 ...\n</code></pre> <p>Dentro del script, dispones de variables especiales:</p> Variable Significado <code>$0</code> Nombre del script <code>$1</code>\u2026<code>$9</code> Argumentos posicionados <code>$#</code> N\u00famero total de argumentos <code>$*</code> Todos los argumentos como una sola palabra <code>$@</code> Todos los argumentos preservando espacios <code>shift</code> Desplaza los argumentos: <code>$2</code> pasa a <code>$1</code>, etc. <p>Usa <code>\"$@\"</code> cuando necesites mantener los argumentos exactamente como se passaron.</p>"},{"location":"UD1/linux/Argumentos/#3-ejemplos-escalados","title":"3. Ejemplos escalados","text":""},{"location":"UD1/linux/Argumentos/#ejemplo-basico-validar-numero-de-argumentos","title":"Ejemplo b\u00e1sico: validar n\u00famero de argumentos","text":"<pre><code>if [[ $# -ne 2 ]]\nthen\n    echo \"Uso: $0 origen destino\"\n    exit 1\nfi\n\necho \"Origen: $1\"\necho \"Destino: $2\"\n</code></pre>"},{"location":"UD1/linux/Argumentos/#ejemplo-intermedio-recorrer-todos-los-argumentos","title":"Ejemplo intermedio: recorrer todos los argumentos","text":"<pre><code>for fichero in \"$@\"\ndo\n    if [[ -e $fichero ]]\n    then\n        echo \"$fichero existe.\"\n    else\n        echo \"$fichero no encontrado.\"\n    fi\ndone\n</code></pre>"},{"location":"UD1/linux/Argumentos/#ejemplo-aplicado-consumir-argumentos-con-shift","title":"Ejemplo aplicado: consumir argumentos con <code>shift</code>","text":"<pre><code>while [[ $# -gt 0 ]]\ndo\n    case $1 in\n        --usuario)\n            usuario=$2\n            shift 2\n            ;;\n        --grupo)\n            grupo=$2\n            shift 2\n            ;;\n        *)\n            echo \"Opci\u00f3n desconocida: $1\"\n            exit 2\n            ;;\n    esac\ndone\n\necho \"Crear usuario $usuario dentro del grupo $grupo\"\n</code></pre> <p>Prueba t\u00fa</p> <p>Completa las actividades Propietario y permisos y Datos de usuario del apartado de Argumentos: te ayudar\u00e1n a practicar el uso de <code>\"$@\"</code>, validaciones y mensajes de uso.</p>"},{"location":"UD1/linux/Argumentos/#4-buenas-practicas","title":"4. Buenas pr\u00e1cticas","text":"<ul> <li>Cita siempre los argumentos (<code>\"$1\"</code>, <code>\"$@\"</code>) para preservar espacios y caracteres especiales.</li> <li>Comprueba <code>\"$#\"</code> al inicio del script y ofrece un mensaje de uso claro cuando falten argumentos.</li> <li>Emplea <code>case</code> para manejar opciones con nombres largos (<code>--option</code>).</li> <li>Documenta los argumentos aceptados en la cabecera del script.</li> </ul>"},{"location":"UD1/linux/Argumentos/#5-actividades-rapidas","title":"5. Actividades r\u00e1pidas","text":"<ul> <li>Actividad 1: Crea un script que reciba tres argumentos y verifique si el primero es un fichero, el segundo un directorio y el tercero un n\u00famero.</li> <li>Actividad 2: Implementa un contador que acepte <code>-n</code> con un n\u00famero y muestre una cuenta atr\u00e1s desde ese valor.</li> <li>Actividad 3: Construye un script que acepte cualquier cantidad de rutas y copie cada fichero existente a un directorio <code>backup/</code> creado en la ejecuci\u00f3n.</li> </ul>"},{"location":"UD1/linux/Aritmetica/","title":"Operaciones Matem\u00e1ticas","text":""},{"location":"UD1/linux/Aritmetica/#operaciones-basicas","title":"Operaciones b\u00e1sicas","text":"S\u00edmbolo Significado <code>*</code> Multiplicaci\u00f3n <code>/</code> Divisi\u00f3n <code>-</code> Resta <code>+</code> Suma <code>%</code> Resto (5 % 2 = 1)"},{"location":"UD1/linux/Aritmetica/#metodos-aritmeticos-en-bash","title":"M\u00e9todos aritm\u00e9ticos en Bash","text":"M\u00e9todo Uso recomendado \u00bfSoporta decimales? Sintaxis b\u00e1sica <code>(( ))</code> Operaciones entre enteros y l\u00f3gica habitual de programaci\u00f3n No <code>resultado=$(( a + b ))</code> <code>let</code> Incrementos/decrementos sobre variables ya declaradas No <code>let \"contador+=1\"</code> <code>expr</code> Compatibilidad POSIX y utilidades con cadenas Parcial (<code>length</code>) <code>expr 2 \\* 3</code>, <code>expr length \"$cadena\"</code> <code>bc</code> C\u00e1lculos con decimales o funciones avanzadas S\u00ed <code>resultado=$(echo \"scale=2; 5/3\" \\| bc)</code>"},{"location":"UD1/linux/Aritmetica/#expresiones-aritmeticas","title":"<code>(( ))</code> \u2014 Expresiones aritm\u00e9ticas","text":"<p>Acepta la sintaxis habitual de los lenguajes de programaci\u00f3n para enteros. Dentro del doble par\u00e9ntesis no es necesario anteponer <code>$</code> a las variables.</p> <pre><code>total=$(( aciertos + fallos ))\nporcentaje=$(( aciertos * 100 / intentos ))\n</code></pre>"},{"location":"UD1/linux/Aritmetica/#let-incrementos-rapidos","title":"<code>let</code> \u2014 Incrementos r\u00e1pidos","text":"<p>Permite modificar variables existentes de forma compacta, \u00fatil para contadores.</p> <pre><code>let \"mult = cantidad * precio_unitario\"\nlet \"mult *= 3\"\nlet mult++\nlet mult--\n</code></pre>"},{"location":"UD1/linux/Aritmetica/#expr-herencia-posix-y-cadenas","title":"<code>expr</code> \u2014 Herencia POSIX y cadenas","text":"<p>Ofrece aritm\u00e9tica b\u00e1sica y funciones sobre cadenas. Necesita escapar los caracteres especiales (<code>*</code>, <code>(</code>, <code>)</code>, <code>&lt;</code>, <code>&gt;</code>).</p> <pre><code>expr 2 \\* 3\nexpr \\( 2 + 2 \\) \\* 3\n\nexpr length \"Hola Mundo\"     # Devuelve 10\nexpr substr \"Hola Mundo\" 6 5 # Devuelve Mundo\n</code></pre>"},{"location":"UD1/linux/Aritmetica/#bc-calculadora-con-decimales","title":"<code>bc</code> \u2014 Calculadora con decimales","text":"<p><code>bc</code> es una calculadora de precisi\u00f3n arbitraria. Lee expresiones desde la entrada est\u00e1ndar, por lo que suele combinarse con <code>echo</code> o con un heredoc.</p> <pre><code>importe=$(echo \"scale=2; $kg * $precio\" | bc)\nmedia=$(echo \"scale=3; $total / $muestras\" | bc -l)\n</code></pre> <p>La opci\u00f3n <code>scale</code> fija los decimales deseados y <code>-l</code> habilita funciones matem\u00e1ticas avanzadas.</p> <p>Recuerda</p> <ul> <li><code>expr</code> requiere escapar los caracteres <code>*</code>, <code>(</code>, <code>)</code> y <code>&lt;</code>, <code>&gt;</code>: <code>expr 3 \\* \\( 2 + 1 \\)</code>.</li> <li>En <code>echo \"...\" | bc</code> usa comillas rectas (<code>\"</code>) o simples (<code>'</code>); evita las comillas tipogr\u00e1ficas.</li> <li>Prefiere la sustituci\u00f3n de comandos <code>$( ... )</code> al estilo antiguo con comillas invertidas.</li> </ul>"},{"location":"UD1/linux/Aritmetica/#ejemplos-en-contexto","title":"Ejemplos en contexto","text":""},{"location":"UD1/linux/Aritmetica/#calcular-espacio-usado-por-un-directorio","title":"Calcular espacio usado por un directorio","text":"<pre><code>bytes=$(du -sb /var/log | cut -f1)\ngb=$(echo \"scale=2; $bytes / 1024 / 1024 / 1024\" | bc)\necho \"Uso de /var/log: $gb GB\"\n</code></pre> <p>Combinamos <code>du</code> con <code>bc</code> para convertir bytes a gigabytes con dos decimales.</p>"},{"location":"UD1/linux/Aritmetica/#generar-identificadores-consecutivos","title":"Generar identificadores consecutivos","text":"<pre><code>contador=1000\nwhile read -r nombre\ndo\n    id=$(( contador++ ))\n    echo \"$id;$nombre\"\ndone &lt; alumnos.txt\n</code></pre> <p>El doble par\u00e9ntesis permite incrementar el contador sin convertirlo a cadena. Cada iteraci\u00f3n genera un ID \u00fanico para el alumno.</p>"},{"location":"UD1/linux/Break/","title":"Control del flujo: <code>exit</code>, <code>break</code> y <code>continue</code>","text":""},{"location":"UD1/linux/Break/#1-descripcion","title":"1. Descripci\u00f3n","text":"<p>Estas instrucciones permiten salir de scripts o modificar el recorrido de los bucles:</p> <ul> <li><code>exit</code> finaliza el script devolviendo un c\u00f3digo al sistema.</li> <li><code>break</code> termina la iteraci\u00f3n actual y sale del bucle.</li> <li><code>continue</code> salta a la siguiente iteraci\u00f3n sin ejecutar el resto del bloque.</li> </ul>"},{"location":"UD1/linux/Break/#2-sintaxis-con-anotaciones","title":"2. Sintaxis con anotaciones","text":"<pre><code>exit CODIGO        # CODIGO suele ser 0 (\u00e9xito) u otro n\u00famero (error)\n\nbreak              # Sale del bucle m\u00e1s interno\nbreak N            # Sale de N niveles de bucles anidados\n\ncontinue           # Salta a la siguiente iteraci\u00f3n\ncontinue N         # Salta N niveles en bucles anidados\n</code></pre>"},{"location":"UD1/linux/Break/#3-ejemplos-escalados","title":"3. Ejemplos escalados","text":""},{"location":"UD1/linux/Break/#ejemplo-basico-finalizar-un-script","title":"Ejemplo b\u00e1sico: finalizar un script","text":"<pre><code>if [[ $# -ne 2 ]]\nthen\n    echo \"Uso: $0 origen destino\"\n    exit 1\nfi\n</code></pre>"},{"location":"UD1/linux/Break/#ejemplo-intermedio-detener-un-for-cuando-se-cumpla-una-condicion","title":"Ejemplo intermedio: detener un <code>for</code> cuando se cumpla una condici\u00f3n","text":"<pre><code>read -rp \"Introduce un l\u00edmite (1-100): \" limite\n\nfor (( i = 1; i &lt;= 100; i++ ))\ndo\n    echo \"$i\"\n    if [[ $i -eq limite ]]\n    then\n        echo \"Se alcanz\u00f3 el l\u00edmite ($limite).\"\n        break\n    fi\ndone\n\necho \"El script contin\u00faa despu\u00e9s del bucle.\"\n</code></pre>"},{"location":"UD1/linux/Break/#ejemplo-aplicado-omitir-elementos-con-continue","title":"Ejemplo aplicado: omitir elementos con <code>continue</code>","text":"<pre><code>for archivo in /var/log/*.log\ndo\n    if [[ ! -s $archivo ]]\n    then\n        continue    # Ignora ficheros vac\u00edos\n    fi\n\n    echo \"Procesando $archivo\"\n    grep -q \"CRITICAL\" \"$archivo\" &amp;&amp; echo \"Alerta: $archivo tiene eventos cr\u00edticos\"\ndone\n</code></pre> <p>Prueba t\u00fa</p> <p>Analiza la actividad Traza de <code>ejemploContinue.sh</code> del dossier de ejercicios y comprueba c\u00f3mo <code>continue</code> y <code>break</code> afectan al flujo del bucle.</p>"},{"location":"UD1/linux/Break/#4-buenas-practicas","title":"4. Buenas pr\u00e1cticas","text":"<ul> <li>Devuelve c\u00f3digos de salida coherentes (<code>exit 0</code> para \u00e9xito, <code>exit 1</code> o superior para errores).</li> <li>Acompa\u00f1a <code>break</code> y <code>continue</code> con comentarios si la condici\u00f3n no es evidente.</li> <li>Evita <code>break</code> o <code>continue</code> dentro de funciones largas: considera extraer l\u00f3gica en funciones auxiliares.</li> <li>En bucles anidados, usa <code>break N</code>/<code>continue N</code> solo cuando sea imprescindible; lo normal es reestructurar el c\u00f3digo.</li> </ul>"},{"location":"UD1/linux/Break/#5-actividades-rapidas","title":"5. Actividades r\u00e1pidas","text":"<ul> <li>Actividad 1: Escribe un script que abra un fichero y pare (<code>break</code>) al encontrar la cadena <code>FIN</code>.</li> <li>Actividad 2: Implementa una comprobaci\u00f3n que termine el script (<code>exit 2</code>) si el directorio <code>/var/backups</code> no es escribible.</li> <li>Actividad 3: Recorre una lista de nombres y omite (<code>continue</code>) aquellos que empiecen por <code>test</code>, mostrando solo el resto.</li> </ul>"},{"location":"UD1/linux/Case/","title":"Estructura CASE","text":"<p>Estructura parecida al \ud83d\udd00 IF.</p> <pre><code>    case VARIABLE in\n      OPCION_A)\n              ACCIONES;;\n      OPCION_B)\n              ACCIONES;;\n      *)\n              ACCIONES;;\n    esac\n</code></pre> <p>Va realizando comprobaciones y cuando una coincida, realiza una serie de acciones programadas y finaliza la condici\u00f3n.</p> <ul> <li> <p>Cada opci\u00f3n debe ir finalizada de par\u00e9ntesis \u201c)\u201d.</p> </li> <li> <p>Cada acci\u00f3n debajo de cada condici\u00f3n debe ir finalizada de doble punto y coma \u201c;;\u201d</p> </li> <li> <p>Con el metacaracter \u201c*\u201d conseguimos que coincida cualquier cosa, por lo que siempre se cumplir\u00e1 la condici\u00f3n. Es equivalente al \u201celse\u201d.</p> </li> <li> <p>Se puede hacer uso de expresiones regulares.</p> </li> <li> <p>Se debe usar \u201cesac\u201d para finalizar la estructura.</p> </li> </ul>"},{"location":"UD1/linux/Case/#ejemplo-1-ejemplo-de-un-menu","title":"Ejemplo 1. Ejemplo de un Men\u00fa.","text":"<pre><code>echo \"1. Agregar Usuario.\"\necho \"2. Eliminar Usuario.\"\necho \"3. Bloquear Usuario.\"\necho \"4. Salir.\"\n\nread -p \"Elige una opcion: \" opcion\n\ncase $opcion in\n        \"1\")\n                echo \"Has elegido la opcion 1\"\n                echo \"Ahora creariamos el usuario\";;\n        \"2\")\n                echo \"Has elegido la opcion 2, vamos a eliminar al usuario\";;\n        \"3\")\n                echo \"Has elegido la opcion 3 ...\";;\n        \"4\")\n                exit;;\n        *)\n                echo \"El usuario ha insertado cualquier otra cosa.\"\nesac\n</code></pre>"},{"location":"UD1/linux/Case/#ejemplo-2-multiples-lineas-de-ejecucion-por-opcion","title":"Ejemplo 2. M\u00faltiples l\u00edneas de ejecuci\u00f3n por opci\u00f3n","text":"<p>Es importante que quede claro que podemos a\u00f1adir varios comandos/acciones por cada opci\u00f3n, como se puede ver en el siguiente ejemplo en las opciones 0) y *).</p> <p></p>"},{"location":"UD1/linux/Case/#ejemplo-3-el-uso-de-operadores-binarios-en-el-case","title":"Ejemplo 3. El uso de operadores binarios en el case","text":"<p>Tambi\u00e9n podemos hacer uso de la | para integrar dos opciones posibles, es decir, que tanto si se cumple una u otra se ejecutar\u00e1n los comandos asociadas a esa comprobaci\u00f3n:</p> <p>Por ejemplo en el siguiente ejemplo, la primera comprobaci\u00f3n ser\u00e1 verdadera si nombre vale \u201c\u00e1lvaro\u201d o \u201cpepe\u201d</p> <p></p> <p></p>"},{"location":"UD1/linux/Case/#ejemplo-4-el-uso-de","title":"Ejemplo 4. El uso de ;;&amp;","text":"!!! danger           \"Con \ud83d\udd00 ;;&amp; \ud83d\udd00 podemos ejecutar m\u00faltiples condiciones\"  <ul> <li> <p>Con \u201c;;\u201d le decimos al script que si se cumple esa condici\u00f3n termine la estructura y salga del \u201ccase\u201d (una l\u00ednea despu\u00e9s del esac).</p> </li> <li> <p>Usando \u201c;;&amp;\u201d estamos indicando que en caso de ser cierta esa comprobaci\u00f3n, ejecute las instrucciones asociadas, pero que siga comprobando el resto de opciones y si hay alguna cierta ejecute tambi\u00e9n las acciones asociadas a ella.</p> </li> </ul> <p>En el siguiente ejemplo la primera cl\u00e1usula tiene un \u201c;;&amp;\u201d, por lo que por ejemplo si el usuario selecciona \u201cViernes\u201d se mostrar\u00e1 por pantalla \u201cA estudiar\u201d y posteriormente se mostrar\u00e1 tambi\u00e9n \u201cA descansar\u201d, puesto que seguir\u00e1 comprobando el resto de condiciones de la estructura case.</p> <p></p>"},{"location":"UD1/linux/Comparadores/","title":"Comparadores en Bash","text":"<p>Comprender los distintos tipos de comparaciones es clave para construir condiciones fiables en tus scripts. Separamos los comparadores m\u00e1s habituales seg\u00fan el tipo de dato y a\u00f1adimos ejemplos pr\u00e1cticos.</p>"},{"location":"UD1/linux/Comparadores/#comparadores-numericos","title":"Comparadores num\u00e9ricos","text":"Comparador Significado Ejemplo pr\u00e1ctico <code>-eq</code> Igual a <code>[[ $usuarios -eq 50 ]]</code> \u2192 \u00bfHay 50 usuarios dados de alta? <code>-ne</code> Distinto <code>[[ $intentos -ne 3 ]]</code> \u2192 \u00bfNo ha agotado los 3 intentos? <code>-gt</code> Mayor que <code>[[ $uso_memoria -gt 80 ]]</code> \u2192 \u00bfLa RAM supera el 80\u202f%? <code>-ge</code> Mayor o igual que <code>[[ $dias_sin_backup -ge 7 ]]</code> \u2192 \u00bfHan pasado 7 d\u00edas sin copia? <code>-lt</code> Menor que <code>[[ $usuarios_activos -lt 10 ]]</code> \u2192 \u00bfQuedan menos de 10 usuarios conectados? <code>-le</code> Menor o igual que <code>[[ $procesos -le 100 ]]</code> \u2192 \u00bfHay 100 procesos o menos? <pre><code>if [[ $uso_memoria -gt 80 ]]\nthen\n    echo \"Atenci\u00f3n: memoria por encima del 80 %\"\nfi\n</code></pre>"},{"location":"UD1/linux/Comparadores/#comparadores-de-archivos","title":"Comparadores de archivos","text":"Comparador Significado Ejemplo pr\u00e1ctico <code>-e</code> Existe <code>[ -e /etc/passwd ]</code> <code>-f</code> Es un fichero regular <code>[ -f /var/log/syslog ]</code> <code>-d</code> Es un directorio <code>[ -d /var/backups ]</code> <code>-r</code> Permiso de lectura <code>[ -r \"$fichero_config\" ]</code> <code>-w</code> Permiso de escritura <code>[ -w \"$HOME/.bashrc\" ]</code> <code>-x</code> Permiso de ejecuci\u00f3n <code>[ -x /usr/bin/docker ]</code> <code>-O</code> Propietario es el usuario actual <code>[ -O \"$report\" ]</code> <code>-G</code> El grupo coincide con el grupo actual <code>[ -G \"$script\" ]</code> <code>-s</code> El fichero no est\u00e1 vac\u00edo <code>[ -s /tmp/informe.txt ]</code> <code>-L</code> Es un enlace simb\u00f3lico <code>[ -L /usr/bin/python ]</code> <pre><code>if [[ -d $backup_dir &amp;&amp; -w $backup_dir ]]\nthen\n    echo \"Preparado para guardar la copia en $backup_dir\"\nelse\n    echo \"No se puede escribir en $backup_dir\"\nfi\n</code></pre>"},{"location":"UD1/linux/Comparadores/#comparadores-de-cadenas","title":"Comparadores de cadenas","text":"Comparador Significado Ejemplo pr\u00e1ctico <code>=</code> Igualdad <code>[[ $usuario = \"root\" ]]</code> <code>!=</code> Distinto <code>[[ $estado != \"OK\" ]]</code> <code>-n</code> Cadena no vac\u00eda <code>[[ -n $HOSTNAME ]]</code> <code>-z</code> Cadena vac\u00eda <code>[[ -z $respuesta ]]</code> <pre><code>if [[ -z $respuesta ]]\nthen\n    echo \"No se recibi\u00f3 respuesta del servicio.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Comparadores/#operadores-logicos","title":"Operadores l\u00f3gicos","text":"Operador Significado Uso t\u00edpico <code>!</code> Negaci\u00f3n <code>[[ ! -d $dir ]]</code> <code>&amp;&amp;</code> Y <code>[[ -f $cfg &amp;&amp; -r $cfg ]]</code> <code>||</code> O <code>[[ $rol = \"admin\" || $rol = \"operador\" ]]</code> <pre><code>if [[ -w $archivo &amp;&amp; ( -e $dir1 || -e $dir2 ) ]]\nthen\n    echo \"Hay permiso de escritura y al menos una de las rutas existe.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Comparadores/#test-clasico-frente-a","title":"Test cl\u00e1sico <code>[</code> frente a <code>[[ ]]</code>","text":"<p>El comando <code>[[ ]]</code> extiende la funcionalidad de <code>[</code> (<code>test</code>) y evita algunos problemas de expansi\u00f3n. Aun as\u00ed, ambos son v\u00e1lidos si se respetan los espacios y las comillas.</p> <pre><code># Formas equivalentes para comprobar si la variable est\u00e1 vac\u00eda\n[ -z \"$respuesta\" ]\n[[ -z $respuesta ]]\n</code></pre> <p>Tip</p> <p>Usa <code>[[ ... ]]</code> siempre que puedas: mejora la lectura, admite <code>&amp;&amp;</code> y <code>||</code> y evita errores cuando la variable est\u00e1 vac\u00eda o contiene espacios.</p>"},{"location":"UD1/linux/For/","title":"Bucles <code>for</code> en Bash","text":""},{"location":"UD1/linux/For/#1-descripcion","title":"1. Descripci\u00f3n","text":"<p>Los bucles <code>for</code> permiten repetir acciones sobre cada elemento de una lista. Son \u00fatiles para recorrer argumentos, resultados de comandos o secuencias num\u00e9ricas sin necesidad de usar estructuras m\u00e1s complejas.</p>"},{"location":"UD1/linux/For/#2-sintaxis-con-anotaciones","title":"2. Sintaxis con anotaciones","text":"<pre><code>for elemento in LISTA\ndo\n    ACCIONES\ndone\n</code></pre> <ul> <li><code>LISTA</code> puede ser un conjunto de literales, la expansi\u00f3n de un comando o el contenido de una variable.</li> <li><code>elemento</code> toma un valor distinto en cada iteraci\u00f3n.</li> <li>Las instrucciones del bucle van entre <code>do</code> y <code>done</code>.</li> </ul>"},{"location":"UD1/linux/For/#variante-aritmetica","title":"Variante aritm\u00e9tica","text":"<pre><code>for (( i = 1; i &lt;= LIMITE; i++ ))\ndo\n    ACCIONES\ndone\n</code></pre> <p>Esta forma usa sintaxis similar a C para recorrer rangos num\u00e9ricos.</p>"},{"location":"UD1/linux/For/#3-ejemplos-escalados","title":"3. Ejemplos escalados","text":""},{"location":"UD1/linux/For/#ejemplo-basico-recorrer-literales","title":"Ejemplo b\u00e1sico: recorrer literales","text":"<pre><code>for equipo in switch router firewall\ndo\n    echo \"Revisando $equipo\"\ndone\n</code></pre>"},{"location":"UD1/linux/For/#ejemplo-intermedio-procesar-resultados-de-un-comando","title":"Ejemplo intermedio: procesar resultados de un comando","text":"<pre><code>readarray -t servicios &lt; &lt;(systemctl list-units --type=service --state=failed --no-legend --plain | cut -d' ' -f1)\n\nfor servicio in \"${servicios[@]}\"\ndo\n    [[ -n $servicio ]] &amp;&amp; echo \"Servicio con errores: $servicio\"\ndone\n</code></pre>"},{"location":"UD1/linux/For/#ejemplo-aplicado-tratar-ficheros-con-espacios","title":"Ejemplo aplicado: tratar ficheros con espacios","text":"<pre><code>while IFS= read -r fichero\ndo\n    echo \"Analizando \\\"$fichero\\\"\"\n    du -h \"$fichero\"\ndone &lt; &lt;(find /var/log -type f -maxdepth 1)\n</code></pre> <p>En este caso usamos process substitution y cambiamos el separador (<code>IFS</code>) dentro del bucle para respetar rutas con espacios.</p> <p>Prueba t\u00fa</p> <p>Completa la actividad Tablero de asteriscos descrita en <code>docs/UD1/linux/Actividades.md</code> y prueba distintas combinaciones de filas y columnas para familiarizarte con la sintaxis <code>for (( ... ))</code>.</p>"},{"location":"UD1/linux/For/#4-buenas-practicas","title":"4. Buenas pr\u00e1cticas","text":"<ul> <li>Prefiere <code>$(comando)</code> en lugar de las comillas invertidas antiguas.</li> <li>Cita <code>\"$elemento\"</code> al trabajar con nombres que puedan incluir espacios.</li> <li>Evita <code>for item in $(cat fichero)</code>; usa <code>while read</code> para preservar l\u00edneas completas.</li> <li>Usa la variante <code>for (( ... ))</code> cuando necesites contadores expl\u00edcitos o saltos controlados.</li> </ul>"},{"location":"UD1/linux/For/#5-actividades-rapidas","title":"5. Actividades r\u00e1pidas","text":"<ul> <li>Actividad 1: Recorre los usuarios normales del sistema (<code>getent passwd</code>) y muestra su UID y directorio personal.</li> <li>Actividad 2: Utiliza <code>for (( ))</code> para generar una tabla de multiplicar configurable por teclado.</li> <li>Actividad 3: Crea un script que compruebe la conectividad (<code>ping -c1</code>) de una lista de hosts guardados en un array y registre los resultados en <code>monitor.log</code>.</li> </ul>"},{"location":"UD1/linux/IF/","title":"Condicionales <code>if</code> en Bash","text":""},{"location":"UD1/linux/IF/#1-descripcion","title":"1. Descripci\u00f3n","text":"<p>Las sentencias <code>if</code> permiten ejecutar bloques de c\u00f3digo solo cuando se cumple una condici\u00f3n. Son la base para tomar decisiones en scripts y automatizar respuestas diferentes seg\u00fan la entrada o el contexto del sistema.</p>"},{"location":"UD1/linux/IF/#2-sintaxis-con-anotaciones","title":"2. Sintaxis con anotaciones","text":""},{"location":"UD1/linux/IF/#estructura-basica","title":"Estructura b\u00e1sica","text":"<pre><code>if [[ CONDICION ]]\nthen\n    ACCIONES\nfi\n</code></pre> <ul> <li>Las comparaciones se hacen dentro de <code>[[ ... ]]</code>.</li> <li><code>then</code> abre el bloque de instrucciones cuando la condici\u00f3n es verdadera.</li> <li>El cierre del bloque siempre se realiza con <code>fi</code>.</li> </ul>"},{"location":"UD1/linux/IF/#variantes-habituales","title":"Variantes habituales","text":"<pre><code># if / else\nif [[ CONDICION ]]\nthen\n    ACCIONES_SI\nelse\n    ACCIONES_NO\nfi\n\n# if / elif / else\nif [[ CONDICION_1 ]]\nthen\n    ACCIONES_1\nelif [[ CONDICION_2 ]]\nthen\n    ACCIONES_2\nelse\n    ACCIONES_DEFECTO\nfi\n</code></pre> <p>Recuerda</p> <p>Tabula cada bloque para mejorar la lectura y deja espacios a ambos lados de los operadores (<code>[[ $edad -ge 18 ]]</code>).</p>"},{"location":"UD1/linux/IF/#3-ejemplos-escalados","title":"3. Ejemplos escalados","text":""},{"location":"UD1/linux/IF/#ejemplo-basico-validacion-de-entrada","title":"Ejemplo b\u00e1sico: validaci\u00f3n de entrada","text":"<pre><code>read -rp \"\u00bfEres alumno del centro? (s/n): \" respuesta\n\nif [[ $respuesta = \"s\" ]]\nthen\n    echo \"Acceso concedido.\"\nelse\n    echo \"Solo alumnos registrados pueden acceder.\"\nfi\n</code></pre>"},{"location":"UD1/linux/IF/#ejemplo-intermedio-comprobar-ruta-y-permisos","title":"Ejemplo intermedio: comprobar ruta y permisos","text":"<pre><code>read -rp \"Ruta a comprobar: \" ruta\n\nif [[ -d $ruta ]]\nthen\n    echo \"$ruta es un directorio.\"\nelif [[ -f $ruta &amp;&amp; -r $ruta ]]\nthen\n    echo \"$ruta es un fichero legible.\"\nelse\n    echo \"La ruta no existe o no puedes leerla.\"\nfi\n</code></pre>"},{"location":"UD1/linux/IF/#ejemplo-aplicado-control-de-recursos","title":"Ejemplo aplicado: control de recursos","text":"<pre><code>uso_root=$(df --output=pcent / | tail -n1 | tr -dc '0-9')\n\nif [[ $uso_root -ge 90 ]]\nthen\n    echo \"El sistema ra\u00edz supera el 90 % de uso.\"\nelif [[ $uso_root -ge 70 ]]\nthen\n    echo \"Advertencia: / ocupa el $uso_root %.\"\nelse\n    echo \"Uso de disco en / bajo control ($uso_root %).\"\nfi\n</code></pre> <p>Prueba t\u00fa</p> <p>Revisa la actividad Script_IF_5.sh en <code>docs/UD1/linux/Actividades.md</code> y desarrolla el script propuesto para practicar la comprobaci\u00f3n de rutas con condicionales encadenados.</p>"},{"location":"UD1/linux/IF/#4-buenas-practicas","title":"4. Buenas pr\u00e1cticas","text":"<ul> <li>Usa <code>[[ ... ]]</code> para evitar problemas con cadenas vac\u00edas y soportar <code>&amp;&amp;</code> / <code>||</code>.</li> <li>Cita las variables cuando puedan contener espacios: <code>[[ -f \"$fichero\" ]]</code>.</li> <li>Combina condicionales con funciones (<code>return</code>/<code>exit</code>) para evitar anidar en exceso.</li> <li>Explica con comentarios breves las condiciones complejas.</li> </ul>"},{"location":"UD1/linux/IF/#5-actividades-rapidas","title":"5. Actividades r\u00e1pidas","text":"<ul> <li>Actividad 1: Comprueba si un usuario existe (<code>getent passwd</code>) y, en caso afirmativo, muestra su directorio personal.</li> <li>Actividad 2: Pide la hora actual (<code>date +%H</code>) y recomienda \u201cDescanso\u201d si est\u00e1 entre 11 y 12, \u201cComida\u201d si es 14, o \u201cClase\u201d en cualquier otro caso.</li> <li>Actividad 3: Solicita una URL y utiliza <code>curl -Is</code> para determinar si el servicio responde con c\u00f3digo 200. Imprime mensajes diferenciados seg\u00fan el c\u00f3digo HTTP recibido.</li> </ul>"},{"location":"UD1/linux/Operadores_Binarios/","title":"Operadores l\u00f3gicos en Bash","text":""},{"location":"UD1/linux/Operadores_Binarios/#1-descripcion","title":"1. Descripci\u00f3n","text":"<p>Los operadores l\u00f3gicos permiten combinar varias condiciones dentro de <code>[[ ... ]]</code> o <code>(( ... ))</code>. Con ellos puedes crear reglas m\u00e1s expresivas, tomar decisiones complejas y controlar el flujo de tus scripts.</p>"},{"location":"UD1/linux/Operadores_Binarios/#2-sintaxis-con-anotaciones","title":"2. Sintaxis con anotaciones","text":"Operador Significado Ejemplo <code>&amp;&amp;</code> AND: ambas condiciones deben ser verdaderas <code>[[ -d $dir &amp;&amp; -w $dir ]]</code> <code>||</code> OR: al menos una condici\u00f3n debe ser verdadera <code>[[ $rol = \"admin\" || $rol = \"operador\" ]]</code> <code>!</code> NOT: invierte el resultado de la condici\u00f3n <code>[[ ! -f $conf ]]</code> <p>Tambi\u00e9n puedes usar <code>(( ... ))</code> para evaluaciones aritm\u00e9ticas con operadores similares a los de C (<code>&lt;</code>, <code>&gt;</code>, <code>==</code>, <code>&amp;&amp;</code>, <code>||</code>).</p>"},{"location":"UD1/linux/Operadores_Binarios/#3-ejemplos-escalados","title":"3. Ejemplos escalados","text":""},{"location":"UD1/linux/Operadores_Binarios/#ejemplo-basico-directorio-listo-para-copias","title":"Ejemplo b\u00e1sico: directorio listo para copias","text":"<pre><code>backup_dir=/var/backups\n\nif [[ -d $backup_dir &amp;&amp; -w $backup_dir ]]\nthen\n    echo \"Preparado para crear copias en $backup_dir.\"\nelse\n    echo \"No se puede escribir en $backup_dir.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Operadores_Binarios/#ejemplo-intermedio-combinacion-de-multiples-condiciones","title":"Ejemplo intermedio: combinaci\u00f3n de m\u00faltiples condiciones","text":"<pre><code>read -rp \"N\u00famero de vidas: \" vidas\nread -rp \"N\u00famero de continues: \" continues\n\nif [[ $vidas -le 0 &amp;&amp; $continues -le 0 ]]\nthen\n    echo \"Game Over.\"\nelif [[ $vidas -le 0 || $continues -le 0 ]]\nthen\n    echo \"\u00daltima oportunidad.\"\nelse\n    echo \"Puedes seguir jugando.\"\nfi\n</code></pre>"},{"location":"UD1/linux/Operadores_Binarios/#ejemplo-aplicado-credenciales-con-validacion-compuesta","title":"Ejemplo aplicado: credenciales con validaci\u00f3n compuesta","text":"<pre><code>read -rp \"Usuario: \" usuario\nread -rsp \"Contrase\u00f1a: \" pass\necho\n\nif [[ ( $usuario = \"admin\" &amp;&amp; $pass = \"4dm1n!\" ) || ( $usuario = \"soporte\" &amp;&amp; $pass = \"s0p0rt3\" ) ]]\nthen\n    echo \"Acceso autorizado.\"\nelse\n    echo \"Credenciales incorrectas.\"\nfi\n</code></pre> <p>Prueba t\u00fa</p> <p>Pon en pr\u00e1ctica los operadores l\u00f3gicos con la actividad Men\u00fa interactivo de red del bloque Case y While: combina condiciones para validar opciones y comandos disponibles.</p>"},{"location":"UD1/linux/Operadores_Binarios/#4-buenas-practicas","title":"4. Buenas pr\u00e1cticas","text":"<ul> <li>Agrupa con par\u00e9ntesis <code>()</code> para dejar clara la prioridad de evaluaci\u00f3n.</li> <li>Usa <code>[[ ... ]]</code> (no <code>[</code>), porque admite operadores <code>&amp;&amp;</code> y <code>||</code> sin necesidad de escapado.</li> <li>Prefiere comparadores dobles (<code>==</code>, <code>!=</code>) para cadenas dentro de <code>[[ ]]</code> y operadores num\u00e9ricos cl\u00e1sicos (<code>-lt</code>, <code>-gt</code>) cuando est\u00e9s en <code>[[ ]]</code>.</li> <li>En <code>(( ... ))</code>, no pongas <code>$</code> delante de las variables y documenta el objetivo del c\u00e1lculo.</li> </ul>"},{"location":"UD1/linux/Operadores_Binarios/#5-actividades-rapidas","title":"5. Actividades r\u00e1pidas","text":"<ul> <li>Actividad 1: Escribe una condici\u00f3n que verifique que un fichero existe y no est\u00e1 vac\u00edo antes de procesarlo.</li> <li>Actividad 2: Comprueba si un servicio est\u00e1 activo (<code>systemctl is-active</code>) o si el puerto est\u00e1 escuchando (<code>ss -ltn</code>). Lanza un aviso si ambos fallan.</li> <li>Actividad 3: Usa <code>(( ... ))</code> para determinar si un n\u00famero es m\u00faltiplo de 3 y par antes de a\u00f1adirlo a una lista.</li> </ul>"},{"location":"UD1/linux/Scripts/","title":"Scripts en Linux","text":""},{"location":"UD1/linux/Scripts/#creacion-de-scripts","title":"Creaci\u00f3n de Scripts","text":"<ul> <li>\u00bfD\u00f3nde creo mis scripts?</li> </ul> <p>Lo primero que debemos preguntarnos es d\u00f3nde vamos a crear el script.   Si empezamos a crear el script en un directorio donde no tenemos permisos de escritura no nos dejar\u00e1 guardar los cambios y nuestro trabajo ser\u00e1 en vano.</p> <ul> <li>\u00bfCon qu\u00e9 creo mis scripts?</li> </ul> <p>Para la creaci\u00f3n de scripts usaremos el editor de texto vim o con editor nano.</p> <p>El editor Vim es mas completo y cuando lo controlas es mucho mas r\u00e1pido pero el editor nano tambi\u00e9n es muy valido para empezar . Aqu\u00ed tienes comandos b\u00e1sicos:</p> Controles Funcionamiento <code>nano \u201cNombreFichero\u201d.sh</code> Genera o Abre el fichero para su edici\u00f3n. <code>Control + o</code> Guardar Cambios. <code>Control + x</code> Salir. <code>Control + _</code> Ir a una l\u00ednea. <code>Alt + U</code> Deshacer. <code>Alt + E</code> Rehacer. <p>En la leyenda \u201c^\u201d equivale a \u201cControl\u201d y \u201cM-\u201c equivale a \u201cAlt\u201d.</p> <ul> <li>\u00bfC\u00f3mo empiezo mis scripts?</li> </ul> <p>Lo primero ser\u00e1 crear el \u201cshebang\u201d \ud83d\udd00 #!/bin/bash.</p> <p>La funci\u00f3n del shebang es decirle al sistema operativo que cuando le digamos de ejecutar este fichero use el SHELL bash, cuya ubicaci\u00f3n dentro del sistema es /bin/bash. Si vamos a la ruta /bin, veremos que existe un ejecutable llamado \u201cbash\u201d.</p> <ul> <li>\u00bfC\u00f3mo ejecuto mis scripts?</li> </ul> <p>Una vez guardados los cambios debemos darle permisos de ejecuci\u00f3n al fichero, en caso de que estemos trabajando con un script. Es importante solo dar permiso de ejecuci\u00f3n al usuario propietario, si no se puede producir una brecha de seguridad, pues los scripts suelen almacenar/manipular datos/servicios importantes de nuestro servidor.</p> <pre><code>chmod 750 \u201cNombreFichero\u201d.sh\n</code></pre> <p>Una vez hecho, ya podemos ejecutar nuestro script de una de las siguientes formas:</p> <pre><code>./\u201dNombreFichero\u201d.sh\nbash \u201cNombreFIchero\u201d.sh\n</code></pre> <p>Warning</p> <p>No us\u00e9is el comando \u201csh script.sh\u201d donde script.sh es el nombre de vuestro script. Esto fuerza al terminal a usar el shell SHELL, y nosotros vamos a usar BASH. Por lo que en ciertos comandos nos dar\u00e1 error al usar SHELL.</p>"},{"location":"UD1/linux/Scripts/#comentarios","title":"Comentarios","text":"<p>Importante el uso de comentarios para poder describir que hace cada parte del c\u00f3digo, tanto de cara a vosotros como de cara a compa\u00f1eros de trabajo que vayan a modificar tu c\u00f3digo.</p> <p>Para ello se usa \ud83d\udd00 \u201c#\u201d:</p>"},{"location":"UD1/linux/Variables/","title":"Variables en BASH","text":""},{"location":"UD1/linux/Variables/#como-creo-una-variable","title":"\u00bfC\u00f3mo creo una variable?","text":"<p>Siempre que creemos una variable debemos hacer uso del \u201c=\u201d sin espacios en blanco.</p> <ul> <li>Los textos \ud83d\udd00 comillas dobles.</li> <li>Los n\u00fameros \ud83d\udd00 sin comillas dobles.</li> </ul> <p></p> <p>Variables de cadenas de texto \ud83d\udd00 Con comillas dobles.</p> <p></p> <p>Variables que contienen el valor de un comando \ud83d\udd00 Usando comillas abiertas.</p> <p></p> <p>Variables compuestas de otras variables.</p> <p></p>"},{"location":"UD1/linux/Variables/#como-muestro-por-pantalla-una-variable","title":"\u00bfC\u00f3mo muestro por pantalla una variable?","text":"<p>Haciendo uso del s\u00edmbolo del dolar \ud83d\udd00 \u201c$\u201d.</p> <p></p> <p>Podemos hacer uso de la opci\u00f3n \u201cecho \u2013n\u201d para mostrar varias salidas en la misma l\u00ednea.   Con la opci\u00f3n \u201cecho \u2013e\u201d puedo hacer uso de caracteres especiales con la contrabarra:</p> <p>\ud83d\udd00 \\n Salto de l\u00ednea.</p> <p>\ud83d\udd00 \\t Tabulador.</p> <p></p> <p></p>"},{"location":"UD1/linux/Variables/#como-recojo-informacion-del-usuario","title":"\u00bfC\u00f3mo recojo informaci\u00f3n del usuario?","text":"<p>Con el comando \u201cread\u201d podemos recoger lo que escriba el usuario por terminal y guardarlo en una variable.   Podemos hacerlo todo en la misma l\u00ednea con read \u2013p:</p> <p> </p>"},{"location":"UD1/linux/Variables/#videos-de-repaso","title":"V\u00eddeos de repaso.","text":"<p>V\u00eddeos de repaso sobre scripts y variables:</p> <ol> <li> <p>Repaso de Scripts y Variables.</p> </li> <li> <p>Ejemplos de uso de Variables..</p> </li> </ol>"},{"location":"UD1/linux/While_Until/","title":"Bucles <code>while</code> y <code>until</code> en Bash","text":""},{"location":"UD1/linux/While_Until/#1-descripcion","title":"1. Descripci\u00f3n","text":"<p><code>while</code> y <code>until</code> repiten un bloque de instrucciones mientras una condici\u00f3n siga cumpli\u00e9ndose (<code>while</code>) o hasta que deje de cumplirse (<code>until</code>). Son esenciales para lecturas continuas, men\u00fas y procesos que dependen de eventos externos.</p>"},{"location":"UD1/linux/While_Until/#2-sintaxis-con-anotaciones","title":"2. Sintaxis con anotaciones","text":""},{"location":"UD1/linux/While_Until/#bucle-while","title":"Bucle <code>while</code>","text":"<pre><code>while [[ CONDICION ]]\ndo\n    ACCIONES\ndone\n</code></pre> <ul> <li>El bloque se ejecuta mientras la condici\u00f3n sea verdadera.</li> <li>Para evitar bucles infinitos, aseg\u00farate de modificar variables dentro del cuerpo.</li> </ul>"},{"location":"UD1/linux/While_Until/#bucle-until","title":"Bucle <code>until</code>","text":"<pre><code>until [[ CONDICION ]]\ndo\n    ACCIONES\ndone\n</code></pre> <ul> <li>El bloque se repite hasta que la condici\u00f3n sea verdadera (es decir, mientras sea falsa).</li> <li>Ideal para esperar a que un recurso est\u00e9 disponible.</li> </ul>"},{"location":"UD1/linux/While_Until/#3-ejemplos-escalados","title":"3. Ejemplos escalados","text":""},{"location":"UD1/linux/While_Until/#ejemplo-basico-pedir-un-numero-valido","title":"Ejemplo b\u00e1sico: pedir un n\u00famero v\u00e1lido","text":"<pre><code>numero=0\n\nwhile (( numero &lt; 1 || numero &gt; 10 ))\ndo\n    read -rp \"Elige un n\u00famero entre 1 y 10: \" numero\ndone\n\necho \"Seleccionaste $numero.\"\n</code></pre>"},{"location":"UD1/linux/While_Until/#ejemplo-intermedio-comprobar-usuarios-existentes","title":"Ejemplo intermedio: comprobar usuarios existentes","text":"<pre><code>read -rp \"Introduce un usuario del sistema: \" usuario\n\nwhile ! getent passwd \"$usuario\" &gt;/dev/null\ndo\n    read -rp \"No existe. Prueba con otro: \" usuario\ndone\n\necho \"$usuario es un usuario v\u00e1lido.\"\n</code></pre>"},{"location":"UD1/linux/While_Until/#ejemplo-aplicado-esperar-a-una-senal-externa-until","title":"Ejemplo aplicado: esperar a una se\u00f1al externa (<code>until</code>)","text":"<pre><code>archivo_estado=\"/tmp/proceso_completado.flag\"\ncontador=0\n\nuntil [[ -f $archivo_estado || contador -eq 5 ]]\ndo\n    echo \"Esperando a que aparezca $archivo_estado...\"\n    sleep 2\n    (( contador++ ))\ndone\n\nif [[ -f $archivo_estado ]]\nthen\n    echo \"Proceso marcado como completado.\"\nelse\n    echo \"Tiempo de espera agotado. Revisa el proceso externo.\"\nfi\n</code></pre> <p>Prueba t\u00fa</p> <p>Resuelve la actividad Control de accesos con <code>usuarios.log</code> del cuaderno de pr\u00e1cticas: necesitar\u00e1s un <code>while</code> con contador de intentos y validaciones de entrada.</p>"},{"location":"UD1/linux/While_Until/#4-buenas-practicas","title":"4. Buenas pr\u00e1cticas","text":"<ul> <li>Controla el n\u00famero de iteraciones para evitar bucles eternos (<code>contador</code> + condici\u00f3n).</li> <li>Usa <code>sleep</code> en bucles que consulten recursos externos para reducir carga.</li> <li>Comprueba el valor de salida (<code>$?</code>) inmediatamente despu\u00e9s de ejecutar un comando dentro del bucle si lo vas a reutilizar.</li> <li>Asigna un valor inicial sensato a las variables antes de entrar en el bucle.</li> </ul>"},{"location":"UD1/linux/While_Until/#5-actividades-rapidas","title":"5. Actividades r\u00e1pidas","text":"<ul> <li>Actividad 1: Usa <code>while read</code> para procesar un listado de direcciones IP y realizar un <code>ping</code> breve a cada una.</li> <li>Actividad 2: Escribe un <code>until</code> que intente montar un recurso NFS cada 10 segundos hasta que la orden <code>mount</code> funcione.</li> <li>Actividad 3: Construye un men\u00fa interactivo con <code>while</code> que ofrezca opciones (mostrar fecha, uso de disco, salir) y reaccione seg\u00fan la selecci\u00f3n del usuario.</li> </ul>"},{"location":"UD1/windows/012_PowerShellTotal/","title":"Power Shell","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 3 sesiones (2h por sesi\u00f3n)</p> <p>Resultado de aprendizaje y Criterios de evaluaci\u00f3n:</p> <ol> <li>Utiliza lenguajes de guiones en sistemas operativos, describiendo su aplicaci\u00f3n y administrando servicios del sistema operativo.<ol> <li>Se han utilizado y combinado las estructuras del lenguaje para crear guiones.</li> <li>Se han utilizado herramientas para depurar errores sint\u00e1cticos y de ejecuci\u00f3n.</li> <li>Se han interpretado guiones de configuraci\u00f3n del sistema operativo.</li> <li>Se han realizado cambios y adaptaciones de guiones del sistema.</li> <li>Se han creado y probado guiones de administraci\u00f3n de servicios.</li> <li>Se han creado y probado guiones de automatizaci\u00f3n de tareas.</li> <li>Se han implantado guiones en sistemas propietarios.</li> <li>Se han consultado y utilizado librer\u00edas de funciones.</li> <li>Se han documentado los guiones creados.</li> </ol> </li> </ol>"},{"location":"UD1/windows/012_PowerShellTotal/#introduccion","title":"Introducci\u00f3n","text":"<ul> <li>Los sistemas operativos basados en Microsoft Windows cuentan con la herramienta PowerShell, que surgi\u00f3 ante las carencias que presenta el viejo terminal basado en MS-DOS.</li> <li>PowerShell es una interfaz de consola (CLI) con posibilidad de escritura y uni\u00f3n de comandos por medio de instrucciones (scripts).</li> <li>Esta interfaz de consola est\u00e1 dise\u00f1ada para su uso por parte de administradores de sistemas, con el prop\u00f3sito de automatizar tareas o realizarlas de forma m\u00e1s controlada.</li> <li>En abril de 2006 Microsoft lanz\u00f3 una nueva interfaz CLI, con una sintaxis moderna que comparte similitudes con el lenguaje Perl.</li> <li>Perl es un lenguaje de programaci\u00f3n dise\u00f1ado por Larry Wall en 1987. Perl toma caracter\u00edsticas del lenguaje C, del lenguaje interpretado bourne shell, AWK, sed, Lisp y, en un grado inferior, de muchos otros lenguajes de programaci\u00f3n.</li> <li>Se trata de una interfaz gratuita, y que antes de Microsoft Windows 7 no se inclu\u00eda con el sistema operativo.</li> <li>En la actualidad, est\u00e1 incluida en todos los sistemas operativos de Microsoft, aunque requiere la presencia de <code>.NET</code> framework del que hereda sus caracter\u00edsticas orientadas a objetos.</li> <li>En agosto de 2016, Microsoft public\u00f3 su c\u00f3digo en GitHub para que pueda portarse a otros sistemas como GNU/Linux y MAC OSX.</li> <li>Los comandos incluidas en PowerShell reciben el nombre de cmdlets (command-let) y posee conjuntos espec\u00edficos para trabajar con Active Directory, Exchange, entre otros roles de servidor.</li> </ul> <p>Info</p> <p>cmdlets Existen cientos de cdmlet en la versi\u00f3n 5.1 de PowerShell. Es posible consultar la ayuda de cada uno de ellos en la p\u00e1gina oficial de Microsoft.</p> <ul> <li>Otra ventaja de PowerShell es que se dispone de la mayor\u00eda de comandos que del CLI tradicional de Microsoft. De ese modo, es posible ejecutar el comando <code>dir</code> en lugar del <code>Get-ChildItem</code>, cmdlet que realiza la misma tarea. En realidad lo que est\u00e1 usando es un alias del segundo para lanzar el primero.</li> <li>Dispone de autocompletado de comandos y par\u00e1metros que facilitar\u00e1 las tareas de creaci\u00f3n de scripts. Basta con comenzar a escribir un cmdlet y pulsarla tecla Tab.</li> <li>Si utilizamos PowerShell ISE al escribir aparecer\u00e1 una ventana con todos los cmdlets que coincidan con el texto escrito, incluso puede aparecer un recuadro con ayuda sobre su sintaxis. Para aceptar la sugerencia se pulsar la tecla Intro .</li> </ul> <p>Note</p> <p>Los nombres de todos los cmdlets est\u00e1n formados por un verbo, un gui\u00f3n y un nombre en singular. Habitualmente, se escribe con may\u00fasculas la primera letra de cada palabra, pero no se trata m\u00e1s que de una norma de estilo, porque PowerShell no distingue entre may\u00fasculas y min\u00fasculas.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#primer-script","title":"Primer Script","text":"<ul> <li>Al igual que ocurre en GNU/Linux un script de PowerShell no es m\u00e1s que un archivo de texto plano que contiene una secuencia de comando y de cmdlets para realizar una tarea.</li> <li>La diferencia con ellos es que aqu\u00ed ser\u00e1 necesario dotarlos de una extensi\u00f3n; <code>ps1</code>.</li> </ul> <p>Example</p> <p>``` Write-Host \"Hola!. Esto es mi primer script en PowerShell\" Write-Host \"Y esto es una segunda l\u00ednea\" ````</p> <ul> <li>A continuaci\u00f3n, se guarda el script desde el men\u00fa <code>Acci\u00f3n \u2192 Guardar Como\u2026</code> asign\u00e1ndole un nombre.</li> <li>Para ejecutarlo tan s\u00f3lo es necesario escribir su nombre en el terminal de PowerShell anteponiendo un punto y una barra.</li> </ul> <p>Example</p> <p><code>./Script.ps1</code></p> <ul> <li>Aunque tambi\u00e9n es posible ejecutar el script desde la herramienta gr\u00e1fica pulsando la tecla <code>F5</code>, ejecutar una parte de \u00e9l con <code>F8</code> o detener la ejecuci\u00f3n con <code>Ctrl+Intro</code>.</li> </ul>"},{"location":"UD1/windows/012_PowerShellTotal/#powershell-ise","title":"PowerShell ISE","text":"<ul> <li>PowerShell viene acompa\u00f1ado de una herramienta gr\u00e1fica que facilita la administraci\u00f3n de todos los scripts. Se denomina Microsoft PowerShell ISE (Integrated Scripting Environment), y se accede a trav\u00e9s de: <code>Administrador del servidor \u2192 Herramientas \u2192 Windows PowerShell ISE</code>.</li> <li>El uso de esta herramienta gr\u00e1fica va a facilitar la creaci\u00f3n de los scripts de forma significativa.</li> <li>Es pr\u00e1ctico comenzar con esta ayuda ya que la sintaxis de los cmdlets, aunque sea l\u00f3gica y sencilla, tambi\u00e9n lo es amplia y desconocida.</li> </ul> Interfaz de la herramienta Windows PowerShell ISE <p>!!! info - Uno de los aspectos m\u00e1s interesantes que posee esta aplicaci\u00f3n es la barra de informaci\u00f3n que muestra un listado de todos los cmdlets de esta herramienta. Permite filtrarlos por funci\u00f3n y consultar la ayuda de cada uno de ellos. - Tambi\u00e9n posee un formulario destinado a generar el c\u00f3digo de un cmdlet de forma autom\u00e1tica.</p> <p>Example</p> <ul> <li>Creaci\u00f3n de un comando que realice una copia de seguridad de los scripts de trabajo en una memoria externa. Es necesario el uso de Copy-Item para ello, pero no se conoce su sintaxis.</li> <li>Si escribimos este cmdlet en el recuadro <code>Nombre</code> y se pulsa sobre <code>Mostrar Ayuda</code>, aparecer\u00e1 un formulario con sus opciones. Tras completar las necesarias y pulsando el bot\u00f3n <code>Insertar</code> situado en la parte inferior, el c\u00f3digo completo ser\u00e1 escrito la parte destinada al terminal.</li> </ul> Creaci\u00f3n autom\u00e1tica de scripts en Windows PowerShell ISE."},{"location":"UD1/windows/012_PowerShellTotal/#comentarios","title":"Comentarios","text":"<p>Note</p> <p>Los comentarios en PowerShell se realizan precediendo a la l\u00ednea con el car\u00e1cter <code>#</code> si se trata de una sola l\u00ednea y <code>&lt;#</code> y <code>#&gt;</code> si es multil\u00ednea.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#parametros-en-powershell","title":"Par\u00e1metros en PowerShell","text":"<ul> <li>Como ocurr\u00eda en GNU/Linux, los par\u00e1metros que reciba el script se deben recoger de forma interna en una variable para poder operar con ellos.</li> </ul> <p>Example</p> <pre><code>      param ([string]$nombre)\n      Write-Host \"Hola!. Esto es mi primer script en PowerShell\"\n      Write-Host \"Y esto es una segunda l\u00ednea\"\n      Write-Host \"Hola de nuevo, tu nombre es $nombre\"\n      ```\n</code></pre> <p>Note</p> <ul> <li>El script anterior esperar\u00e1 un par\u00e1metro de tipo <code>string</code> que ser\u00e1 contenido en la variable nombre.</li> <li>En la cuarta l\u00ednea mostrar\u00e1 el contenido de la variable por pantalla.</li> <li>Para poder ejecutar este script, ser\u00e1 necesario acompa\u00f1arlo de un par\u00e1metro del siguiente modo.</li> </ul> <pre><code>./Script.ps1 \u201cF\u00ba Javier Hern\u00e1ndez Ill\u00e1n\u201d\n</code></pre> <ul> <li>Para entender por completo el ejemplo anterior, ser\u00e1 necesario ver como PowerShell maneja las variables.</li> </ul>"},{"location":"UD1/windows/012_PowerShellTotal/#variables","title":"Variables","text":"<ul> <li>Para definir una variable en PowerShell s\u00f3lo tenemos que nombrarla utilizando para ello cualquier combinaci\u00f3n de caracteres, ya sean n\u00fameros, letras o s\u00edmbolos.</li> <li>Es posible utilizar espacios en el nombre, aunque en este caso el nombre debe ir rodeado por s\u00edmbolos de llaves {}.</li> <li>Al contrario que ocurre en shellscript, PowerShell es fuertemente tipado, lo que significa que las variables no son tratadas como cadenas de texto, sino que hay que especificar el tipo de dato que se guardar\u00e1 en ella.</li> <li>Para definir variables es posible utilizar el m\u00e9todo expl\u00edcito (adem\u00e1s con New-Variable y sus opciones), pero tambi\u00e9n se puede utilizar el m\u00e9todo impl\u00edcito anteponiendo el s\u00edmbolo $ delante del nombre.</li> </ul> <p>Info</p> <p>Get-Variable En cualquier momento puedes obtener una lista completa de las variables que se hayan definido hasta ese momento. Para lograrlo, basta con utilizar Get- Variable.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#implicita","title":"Implicita","text":"Tipo Descripci\u00f3n <code>[string]</code> Cadena de caracteres Unicode <code>[char]</code> Un s\u00f3lo car\u00e1cter Unicode de 16 bits <code>[byte]</code> Un s\u00f3lo car\u00e1cter Unicode de 8 bits <code>[int]</code> Entero con signo de 32 bits <code>[float]</code> N\u00famero con coma flotante de 32 bits <code>[double]</code> N\u00famero con coma flotante de 64 bits <code>[datetime]</code> Fecha y Hora <code>[bool]</code> Valor l\u00f3gico booleano <p>Example</p> <p><code>yaml   $numero = 9.99   $Final_2021 = 30   ${Mi variable} = \u201cContiene espacios en el nombre\u201d</code></p> <ul> <li>En la forma implicita el shell establece el tipo de dato de la variable en funci\u00f3n del dato que se le asigne en su creaci\u00f3n.</li> <li>En el ejemplo anterior <code>$numero</code> es de forma autom\u00e1tica de tipo <code>[double]</code>, ya que al crearla se ha inicializado con un n\u00famero con decimales.</li> <li>Por contra la variable <code>$Final_2021</code> es de tipo <code>[int]</code> ya que se ha guardado un n\u00famero entero en ella.</li> </ul> <p>Info</p> <p>_ GetType Para poder obtener el tipo de dato de una variable hay que usar el m\u00e9todo <code>GetType().Name</code> sobre cualquier variable: _ <code>Write-Host $feo.GetType().Name.</code></p> <p>!!! tip - Una variable cuya definici\u00f3n de tipo se ha realizado de forma impl\u00edcita, podr\u00e1 cambiar el tipo de dato almacenado durante la ejecuci\u00f3n del programa sin experimentar ning\u00fan tipo de error. - Esta pr\u00e1ctica aunque c\u00f3moda no es muy recomendable.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#explicita","title":"Explicita","text":"<ul> <li>Es buena idea tomar el control del tipado de las variables y asignarlo en funci\u00f3n de las necesidades del programa.</li> <li>De esta forma se ahorrar\u00e1n futuras conversiones de datos y posibles p\u00e9rdidas de informaci\u00f3n.</li> <li>Para ello se usa la forma expl\u00edcita de crear variables y junto con su creaci\u00f3n se define el tipo de dato que va a contener.</li> </ul> <p>Example</p> <p><code>yaml   [float] $numero = 9.99   [int] $Final_2021 = 30   [string] ${Mi variable} = \u201cContiene espacios en el nombre\u201d</code></p> <p>Al contrario que en el caso anterior, cuando el dato asignado no coincida con el tipo esperado, pueden ocurrir dos cosas:</p> <ol> <li>que las caracter\u00edsticas del dato se modifiquen para amoldarse al tipo de variable, lo que puede traducirse en la p\u00e9rdida de datos y un mal funcionamiento del script,</li> <li>o que se producir\u00e1 un error si esa conversi\u00f3n no es posible y se detenga el script.</li> </ol>"},{"location":"UD1/windows/012_PowerShellTotal/#interaccion-con-el-usuario","title":"Interacci\u00f3n con el usuario","text":"<p>PowerShell posee dos cmdlets para realizar estas tareas.</p> <ol> <li>El primero de ellos es Write-Host y tiene un comportamiento similar al echo en GNU/Linux.</li> <li>El segundo comando para interactuar con el usuario es Read-Host el cual permite imprimir un mensaje por el terminal y recoger aquello que el usuario ha escrito. Funciona de forma muy parecida al comando read en el terminal de GNU/Linux.</li> </ol> <pre><code>[string] $feo = Read-Host \u201c\u00bfCu\u00e1l es el nombre del marine de Doom?\u201d\nWrite-Host \u201cNo se sabe, pero lo has intentado con $feo\u201d\n</code></pre> <p>Note</p> <p>Este script detendr\u00e1 su ejecuci\u00f3n en la l\u00ednea donde aparece Read-Host, esperar\u00e1 a que el usuario conteste a la pregunta y seguir\u00e1 con la ejecuci\u00f3n, del mismo modo que ocurre con shellscript.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#operadores","title":"Operadores","text":""},{"location":"UD1/windows/012_PowerShellTotal/#aritmeticos","title":"Aritm\u00e9ticos","text":"<ul> <li>Las operaciones aritm\u00e9ticas en PowerShell son m\u00e1s intuitivas que en shellscript.</li> <li>Son las mismas que en el caso anterior: <code>+</code>, <code>-</code>, <code>*</code> , <code>/</code> y <code>%</code>.</li> <li>Su uso es m\u00e1s sencillo puesto que es el propio terminal en que realiza los c\u00e1lculos aritm\u00e9ticos y no a trav\u00e9s de un comando.</li> </ul> <pre><code>[int] $a=10\n[float] $b=20\n[int] $res=$a+$b\nWrite-Host $res\nWrite-Host $a+$b\nWrite-Host \"$a x $b = \" ($a*$b)\n</code></pre> <p>Tambi\u00e9n se dispone de expansores de terminal como en GNU/Linux.</p> <p>Note</p> <p>N\u00f3tese que en la \u00faltima l\u00ednea aparece directamente el producto \\(a*\\)b ya que al rodear la operaci\u00f3n con par\u00e9ntesis, se convierte en un expansor, realiza la operaci\u00f3n en su interior y env\u00eda el resultado fuera.</p> <p>Existen variantes que simplifican el uso de algunos operadores.</p> Operador Uso Equivalencia <code>+=</code> $contador += 5 $contador = $contador+5 <code>-=</code> $contador -= 5 $contador = $contador-5 <code>*=</code> $contador *= 5 $contador = $contador*5 <code>/=</code> $contador /= 5 $contador = $contador/5 <p>Adem\u00e1s de estos operadores existen dos espec\u00edficos para el incremento (<code>++</code>) y decremento (<code>--</code>) de una unidad, ideal para el uso de variables como contadores.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#logicos","title":"L\u00f3gicos","text":"Operador Descripci\u00f3n <code>-and</code> Devuelve verdadero si las dos expresiones son verdaderas. <code>-or</code> Devuelve verdadero si una de las dos expresiones o las dos son verdaderas. <code>-xor</code> Devuelve verdadero si tan s\u00f3lo una de las expresiones es verdadera. <code>-not o !</code> Devuelve verdadero cuando la expresi\u00f3n da el valor falso. <p>Example</p> <p><code>yaml   Write-Host ((6 -ge 4) -and (7 -le 7))   Write-Host ((10 -gt 1) -or (2 -lt 2))   Write-Host ((1 -gt 0) -xor (4 -le 1))   Write-Host ( -not (12 -lt 10))   Write-Host (!(12 -lt 10))</code></p> <p>Note</p> <p>En el ejemplo anterior si se ejecuta el script en un terminal PowerShell, todos los resultados ser\u00e1n verdaderos.</p> <ul> <li>Como en todos los lenguajes de programaci\u00f3n fuertemente tipados, existen operadores l\u00f3gicos para comprobar el tipo de dato de una variable, que resultan muy \u00fatiles para la interacci\u00f3n con los usuarios.</li> </ul> Operador Acci\u00f3n Ejemplo <code>-is</code> Devuelve verdadero si es del tipo indicado. <code>\u201cJavi\u201d -is [string]</code> es verdadero <code>-isnot</code> Devuelve falso si es del tipo indicado. <code>\u201cJavi\u201d -isnot [string]</code> es falso <code>-as</code> Convierte tipos de datos compatibles. <code>$valor = 19.90</code>; <code>Write-Host ($valor -as [int])</code>"},{"location":"UD1/windows/012_PowerShellTotal/#comparacion","title":"Comparaci\u00f3n","text":"<p>los operadores tipo l\u00f3gicos devuelven tan s\u00f3lo un valor booleano que puede tener dos valores; verdadero o falso.</p> Operador Acci\u00f3n Ejemplo <code>-eq</code> Comprueba si son iguales. <code>5 -eq 3</code> es falso <code>-ieq</code> Iguales. En cadenas no es casesensitive. <code>\u201cJavi\u201d -ieq \u201cjavi\u201d</code> es verdadero <code>-ceq</code> Iguales. En cadenas es casesensitive. <code>\u201cJavi\u201d -ceq \u201cjavi\u201d</code> es falso <code>-ne</code> Verifica si son diferentes. <code>5 -ne 3</code> es verdadero <code>-lt</code> Coteja si la izquierda es menor que derecha. <code>5 -lt 3</code> es falso <code>-le</code> Constata si la izquierda es menor o igual que derecha. <code>5 -le 3</code> es falso <code>-gt</code> Examina si la izquierda en mayor que la derecha. <code>5 -gt 3</code> es verdadero <code>-ge</code> Revisa si la izquierda en mayor o igual que la derecha. <code>5 -ge 3</code> es verdadero <p>PowerShell a\u00f1ade operadores de comparaci\u00f3n que aportan un nivel de complejidad mayor.</p> Operador Acci\u00f3n Ejemplo <code>-like</code> Eval\u00faa un patr\u00f3n \u201ces como\u201d. <code>\u201cPerro\u201d -like \u201cPe*\u201d</code> es verdadero <code>-notlike</code> Eval\u00faa un patr\u00f3n \u201cno es como\u201d. <code>\u201cPerro\u201d -notlike \u201cPe*\u201d</code> es falso <code>-contains</code> Contiene un valor. <code>1,2,3 -contains 2</code> es verdadero <code>-notcontains</code> No contiene un valor. <code>1,2,3 -notcontains 2</code>es falso"},{"location":"UD1/windows/012_PowerShellTotal/#control-del-flujo-en-powershell","title":"Control del flujo en PowerShell","text":"<p>En esta parte se indicar\u00e1 tan s\u00f3lo la sintaxis de las estructuras alternativas e iterativas, ya que los conceptos te\u00f3ricos ya se han abordado en el apartado de Shellscript.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#alternativa-simple","title":"Alternativa Simple","text":"<pre><code>if ( condici\u00f3n ){\nejecutar este c\u00f3digo si la condici\u00f3n es verdadera\n}\n</code></pre>"},{"location":"UD1/windows/012_PowerShellTotal/#alternativa-doble","title":"Alternativa doble","text":"<pre><code>if ( condici\u00f3n ) {\nejecutar este c\u00f3digo si la condici\u00f3n es verdadera\n} else {\nejecutar este c\u00f3digo si la condici\u00f3n es falsa\n}\n</code></pre>"},{"location":"UD1/windows/012_PowerShellTotal/#alternativa-multiple","title":"Alternativa m\u00faltiple","text":"<pre><code>if ( condici\u00f3n1 ) {\nejecutar este c\u00f3digo si la condici\u00f3n1 es verdadera\n} elseif ( condici\u00f3n2 ) {\nejecutar este c\u00f3digo si la condici\u00f3n2 es verdadera\n} else {\nejecutar este c\u00f3digo si todas las condiciones son falsas\n}\n</code></pre>"},{"location":"UD1/windows/012_PowerShellTotal/#el-equivalente-a-case-en-gnulinux","title":"El equivalente a case en GNU/Linux","text":"<pre><code>switch ($valor){\nopci\u00f3n1 { c\u00f3digo a ejecutar si opci\u00f3n1 coincide con $valor }\nopci\u00f3n2 { c\u00f3digo a ejecutar si opci\u00f3n2 coincide con $valor }\nopci\u00f3nN { c\u00f3digo a ejecutar si opci\u00f3nN coincide con $valor }\ndefault { c\u00f3digo a ejecutar si ninguna de las opciones coincide }\n}\n</code></pre> <p>Example</p> <p><code>yaml       $saludo = Read-Host \"Escribe un saludo\"       switch ($saludo){           \"Buenos d\u00edas\" { Write-Host \"Saludaste en Castellano\" }           \"Bon dia\" { Write-Host \"Saludaste en Catal\u00e1n\" }           \"Bo dias\" { Write-Host \"Saludaste en Gallego\" }           \"Egun on\" { Write-Host \"Saludaste en Euskera\" }           \"Good morning\" { Write-Host \"Saludaste en Ingl\u00e9s\" }           \"Bonjour\" { Write-Host \"Saludaste en Franc\u00e9s\" }           \"Buon Giorno\" { Write-Host \"Saludaste en Italiano\" }           \"Bom d\u00eda\" { Write-Host \"Saludaste en Portugu\u00e9s\" }           \"Guten Tag\" { Write-Host \"Saludaste en Alem\u00e1n\" }           {$_ -is [string]} { Write Host \"La variable que has pasado es una cadena\" }           default { \"Eso no parece un saludo\" }       }</code></p> <p>Note</p> <p>_ Existe la posibilidad de colocar operadores l\u00f3gicos como opciones de un <code>switch</code>, si estos operadores l\u00f3gicos devuelven un valor verdadero, se ejecutar\u00e1 esa parte del c\u00f3digo, si se eval\u00faa a falso, no realizar\u00e1 esa parte del c\u00f3digo. _ El car\u00e1cter $_ hace referencia a la variable $saludo, de ese modo es posible realizar operaciones l\u00f3gicas con el valor pasado.</p> <ul> <li>Adem\u00e1s de todo esto, <code>switch</code> posee una serie de opciones que no est\u00e1n presentes en GNU/Linux, aunque es posible realizarlas de otra manera.</li> </ul> Operador Descripci\u00f3n <code>-wildcard</code> S\u00f3lo aplicable a <code>[string]</code>. Indica si cumple un patr\u00f3n determinado. <code>-exact</code> S\u00f3lo aplicable a <code>[string]</code>. Debe coincidir exactamente con alguno de los patrones. <code>-casesensitive</code> S\u00f3lo aplicable a <code>[string]</code>. Debe coincidir en may\u00fasculas y min\u00fasculas. <code>-file</code> La entrada es un archivo. Se evaluar\u00e1 cada l\u00ednea del archivo. <code>-regex</code> S\u00f3lo aplicable a <code>[string]</code>. Permite usar expresiones regulares en la comparaci\u00f3n. <p>Example</p> <p><code>-regex</code> <code>yaml   $target = 'https://bing.com'   switch -Regex ($target){       '^ftp\\://.*$' { \"$_ is an ftp address\"; Break }       '^\\w+@\\w+\\.com|edu|org$' { \"$_ is an email address\"; Break }       '^(http[s]?)\\://.*$' { \"$_ is a web address that uses $($matches[1])\"; Break }   }</code></p> <p>Example</p> <p><code>-wildcard</code> <code>yaml   switch -wildcard ( Read-Host \"Escribe u n\u00famero de tel\u00e9fono\" ){       \"8*\" { Write-Host \"Es un tel\u00e9fono fijo: $_\"; break }       \"9*\" { Write-Host \"Es un tel\u00e9fono fijo: $_\"; break }       \"6*\" { Write-Host \"Es un tel\u00e9fono m\u00f3vil: $_\"; break }       default { \"$_ no parece un tel\u00e9fono\" }   }</code></p> <ul> <li>El comando break que aparece al final de cada opci\u00f3n indica que si encuentra una coincidencia no siga buscando m\u00e1s y rompa el switch, ahorr\u00e1ndose as\u00ed el resto de comprobaciones.</li> </ul>"},{"location":"UD1/windows/012_PowerShellTotal/#estructuras-iterativas","title":"Estructuras iterativas","text":""},{"location":"UD1/windows/012_PowerShellTotal/#while","title":"while","text":"<p>A diferencia de lo que ocurr\u00eda en GNU/Linux, en PowerShell existen diferencias entre las estructuras while, do while y do until. En este caso, la \u00fanica de las tres que evaluar\u00e1 la condici\u00f3n al inicio del bloque de c\u00f3digo ser\u00e1 la primera. El resto comprueba la condici\u00f3n al final del bloque ejecutando como m\u00ednimo una vez el c\u00f3digo que contiene.</p> <pre><code>while ( condici\u00f3n ){\nbloque de c\u00f3digo a ejecutar mientras condici\u00f3n sea verdadera\n}\n</code></pre> <pre><code>do {\nbloque de c\u00f3digo a ejecutar mientras condici\u00f3n sea verdadera\n} while ( condici\u00f3n )\n</code></pre> <p>Existe una variante de esta estructura que se crea sustituyendo el while por un until. Esto cambia el sentido de la condici\u00f3n y es este caso el bloque se repite hasta que la condici\u00f3n se cumpla. Esta estructura no es muy utilizada, pero siempre es bueno contar con herramientas extra.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#for","title":"for","text":"<p>Tambi\u00e9n la estructura <code>for</code> es sensiblemente diferente que en shellscript. Esta estructura en PowerShell tiene m\u00e1s que ver con los lenguajes de programaci\u00f3n y se utiliza cuando el programador sabe el n\u00famero de iteraciones que hay que realizar para solucionar un problema.</p> <pre><code>for ( inicializaci\u00f3n; condici\u00f3n; incremento ){\nbloque de c\u00f3digo a ejecutar mientras condici\u00f3n sea verdadera\n}\n</code></pre> <ul> <li>Por ejemplo, la creaci\u00f3n de la tabla de multiplicar de un n\u00famero especificado por el usuario. Para resolver este problema s\u00ed se conoce el n\u00famero de iteraciones necesarias, concretamente diez.</li> </ul> <p>Example</p> <p><code>yaml   $numero = Read-Host \"Dame un n\u00famero\"   Write-Host \"Esta es la tabla del $num\"   for ( $i=0; $i -lt 11; $i++){       Write-Host \" $i x $numero = \"($i*$numero)   }</code></p>"},{"location":"UD1/windows/012_PowerShellTotal/#foreach","title":"foreach","text":"<p>La estructura <code>foreach</code> en PowerShell es el equivalente a for en shellscript. Est\u00e1 pensada para recorrer un conjunto de valores y ejecutar el bloque de c\u00f3digo una vez por cada elemento del conjunto.</p> <pre><code>foreach ( elemento in conjunto ){\nbloque de c\u00f3digo a ejecutar por cada elemento del conjunto\n}\n</code></pre> <p>Al igual que ocurre en GNU/Linux, el conjunto puede serlo de cualquier tipo de objetos, incluso los ficheros de una carpeta. En el siguiente ejemplo se buscan los ficheros que en su nombre contengan la cadena de texto que el usuario ha especificado:</p> <p>Example</p> <p><code>yaml   $ruta = \"C:\\Users\\Administrador\\Desktop\"   $busca = Read-Host \"Escribe el texto a buscar\"   foreach ($archivo in Get-ChildItem $ruta){       if ($archivo.Name.IndexOf($busca) -ge 0){       Write-Host $archivo.Name       }   }</code></p> <p>Note</p> <p>Las opciones que ofrece PowerShell en cuanto a estructuras de control parece una oferta m\u00e1s completa que la de shellscript, aunque para las tareas que se van a realizar en este m\u00f3dulo, ambos sistemas poseen herramientas suficientes.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#vectores","title":"Vectores","text":"<ul> <li>PowerShell considera como un vector a toda colecci\u00f3n de objetos, sea cual sea su tipo.</li> <li>Los elementos que lo conforman pueden estar separados por comas, estar expresados por el operador de rango <code>..</code> o ser el resultado de alguna expresi\u00f3n que devuelva una colecci\u00f3n, como as\u00ed lo hacen muchos cmdlets.</li> </ul> <p>Example</p> <p><code>yaml   $Vacia = @{}   $Enteros = 1,2,3,4,5   $Texto = \u201cLunes\u201d,\u201cMartes\u201d,\u201dMi\u00e9rcoles\u201d, \u201cJueves\u201d,\u201dViernes\u201d   $EnterosRango = 1..10</code></p> <p>De esta forma se han definido cuatro vectores; el segundo contendr\u00e1 enteros y el tercero cadenas de caracteres. La \u00faltima l\u00ednea asigna los valores desde el 1 al 10 utilizando el operador rango <code>..</code> .</p> <p>Note</p> <p>El operador de rango representa una secuencia de enteros, con los l\u00edmites superior e inferior separados por dos puntos decimales. Permite expresar el rango en orden ascendente o descendente, as\u00ed como tambi\u00e9n que los l\u00edmites inferior o superior sean establecidos por medio de variables que contengan enteros.</p> <ul> <li>Un vector tambi\u00e9n puede definirse como el resultado de una expresi\u00f3n.</li> </ul> <p>Example</p> <p><code>yaml   $EnterosFor = @(For($i;$i &lt; 5;$i++){$i})   $Comando = Get-Process | Sort-Object ProcessName</code></p> <p>En la primera l\u00ednea <code>$enteros</code> ser\u00e1 completado a trav\u00e9s del resultado de una estructura iterativa, mientras que la segunda contendr\u00e1 el resultado del cmdlet indicado. Adem\u00e1s de todas estas formas de declaraci\u00f3n, tambi\u00e9n se puede realizar a trav\u00e9s del cmdlet <code>New-Variable</code></p> <p>Example</p> <p><code>yaml   New-Variable -Name Enteros -Value 1,2,3,4,5 -Force   New-Variable -Name Texto -Value \"Lunes\",\"Martes\",\"Mi\u00e9rcoles\",\"Jueves\",\"Viernes\" \u2013Force   New-Variable -Name EnterosRango -Value (1..5) -Force   New-Variable -Name EnterosFor -value (. {For($i=1;$i -lt 5;$i++){$i}}) -Force</code></p> <p>Note</p> <p>El atributo <code>-Force</code> sobrescribe la variable si esta ya existe, de ese modo no saltar\u00e1 ning\u00fan error a la hora de definir estas variables.</p> <ul> <li>Para obtener el n\u00famero de elementos de un vector se utiliza el m\u00e9todo Length, si se aplica a un elemento del vector, devolver\u00e1 el tama\u00f1o de este elemento, no del vector completo.</li> </ul> <p>Example</p> <p><code>yaml   $Texto.Length # mostrar\u00e1 5 por pantalla   $Texto[2].Length # mostrar\u00e1 9, las letras de \u201cMi\u00e9rcoles\u201d</code></p> <ul> <li>Para a\u00f1adir elementos al final de un vector se utiliza el operador <code>+=</code>.</li> </ul> <p>Example</p> <p><code>yaml   $Enteros += 6   $Texto += \u201cS\u00e1bado\u201d, \u201cDomingo\u201d</code></p> <p>Note</p> <p>La primera l\u00ednea a\u00f1ade el entero 6 al vector <code>$Enteros</code>, mientras que en la segunda se a\u00f1aden los elementos \u201cS\u00e1bado\u201d y \u201cDomingo\u201d al vector <code>$Texto</code>.</p> <ul> <li>Para eliminar un elemento de un vector PowerShell no ofrece un sistema parecido al de a\u00f1adir valores, sino que tendr\u00e1 que reescribirse el vector de nuevo sin los valores no deseados.</li> </ul>"},{"location":"UD1/windows/012_PowerShellTotal/#funciones","title":"Funciones","text":"<p>Tambi\u00e9n en PowerShell es posible utilizar funciones a trav\u00e9s de la siguiente estructura:</p> <pre><code>Function &lt;NOMBRE&gt; {\nParam (&lt;Parametro&gt;,&lt;Parametro&gt;,...)\nComandos PowerShell\n}\n</code></pre> <p>Warning</p> <p>El paso de par\u00e1metros a una funci\u00f3n se realiza de id\u00e9ntica forma que en shell script. La principal diferencia entre las funciones usadas en shell script es que ahora es preferible declarar y tipar antes de iniciar con el c\u00f3digo de la funci\u00f3n.</p> <p>Example</p> <p><code>yaml   Function Get-Sumar {       param ([integer] $a, [integer] $b)       $sumar = $a + $b       Write-Host \u201cLa suma es $sumar\u201d   }</code></p> <p>Note</p> <p>Si se ejecuta la siguiente instrucci\u00f3n: <code>Get-Sumar 2 8</code> La salida del terminal ser\u00e1 <code>La suma es 10</code>.</p> <p>Si se necesita que las funciones est\u00e9n disponibles durante la sesi\u00f3n del usuario o si es necesario enlazarlas desde otro script, se deber\u00e1 utilizar la notaci\u00f3n de punto, del mismo modo que ocurr\u00eda en shell script.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#actividades-powershell","title":"Actividades PowerShell","text":"<p>Note</p> <p>Escribe el c\u00f3digo de los scripts en PowerShell que se detallan en cada ejercicio. Deber\u00e1s crear un fichero de texto para cada ejercicio con el siguiente nombre: ejXXX.sh, donde las X representan el n\u00famero de ejercicio. Una vez terminada la pr\u00e1ctica, comprime todos estos ficheros en uno y s\u00fabelos al Moodle.</p>"},{"location":"UD1/windows/012_PowerShellTotal/#actividades-iniciales-powershell","title":"Actividades Iniciales PowerShell","text":"<ol> <li> <p>Genera un Script que muestre los procesos del sistema ordenados por el id.</p> </li> <li> <p>Muestra los servicios cuyo nombre empiece por la letra <code>n</code>, utilizando la creaci\u00f3n de un script.</p> </li> <li> <p>Crea un script que si no se le pasa ning\u00fan argumento nos lo diga.</p> </li> </ol>"},{"location":"UD1/windows/012_PowerShellTotal/#actividades-de-desarrollo-ud1_04","title":"Actividades de desarrollo UD1_04","text":"<ol> <li> <p>Dise\u00f1a un script PowerShell que pida al usuario dos n\u00famero (comprobando que sean n\u00fameros) y muestre por pantalla el mayor de ellos o si son iguales.</p> </li> <li> <p>Crea un script PowerShell que al ejecutarlo muestre por pantalla uno de estos mensajes \u201cBuenos d\u00edas\u201d, \u201cBuenas tardes\u201d o \u201cBuenas noches\u201d, en funci\u00f3n de la hora que sea en el sistema (de 8:00 de la ma\u00f1ana a 15:00 ser\u00e1 ma\u00f1ana, de 15:00 a 20:00 ser\u00e1 tarde y el resto ser\u00e1 noche). Usa el <code>cmdlet Get-Date</code>.</p> </li> <li> <p>Construye tres script PowerShell utilizando estructuras iterativas:</p> </li> <li>el primero ej118A.ps1, que imprima la tabla de multiplicar de un n\u00famero preguntado al usuario. Este      n\u00famero debe ser entero positivo.</li> <li>el segundo ej118B.ps1, que pida un n\u00famero e indique si se trata de un n\u00famero par y si es n\u00famero primo.</li> <li> <p>el tercero ej118C.ps1, que muestre las diez primeras tablas de multiplicar por pantalla. Hay un tiempo de espera de un segundo entre ellas. Utiliza las estructuras while, do while, for y foreach y el cmdlet Start-Sleep.</p> </li> <li> <p>Dise\u00f1a un script PowerShell que lea un vector con 365 temperaturas y calcule la media y cuantos d\u00edas han estado por encima y cuantos por debajo de ella. Rellena el vector con valores aleatorios entre -5 y 35, para ello usa Get-Random.</p> </li> </ol>"},{"location":"UD1/windows/012_PowerShellTotal/#actividades-de-desarrollo-ud1_05","title":"Actividades de desarrollo UD1_05","text":"<ol> <li> <p>Crea un script PowerShell que rellene un vector con diez n\u00fameros de forma aleatoria y que los muestre por pantalla de la siguiente forma:</p> </li> <li> <p>en orden inverso a como han sido introducidos los valores.</p> </li> <li>los valores ordenados de menor a mayor en una sola l\u00ednea.</li> <li>los valores ordenados de mayor a menor en una sola l\u00ednea la suma total de sus valores.</li> <li>cantidad de valores pares que contiene el vector.</li> <li>la suma total de n\u00fameros impares.</li> <li> <p>la media aritm\u00e9tica de los valores que contiene el vector.</p> </li> <li> <p>Crea un script PowerShell para que haga una copias de seguridad de todos los archivos del directorio de trabajo del usuario actual. Deber\u00e1 realizar las siguientes acciones:</p> </li> <li> <p>comprobar\u00e1 si el archivo ya existe en la copia de seguridad, si es as\u00ed comprobar\u00e1 cual de los dos es m\u00e1s reciente y que tama\u00f1o tienen. Si es m\u00e1s reciente o posee un tama\u00f1o mayor, lo copiar\u00e1. En cualquier otro caso, no lo copia.</p> </li> <li>llevar\u00e1 un registro de todos los archivos copiados cada vez que se ejecute mediante un archivo de bit\u00e1cora. Guarda este fichero el directorio que contiene el script.</li> </ol> <p>Crea una funci\u00f3n para cada tarea realizada en este script.</p> <ol> <li> <p>Dise\u00f1a un script PowerShell que muestre un men\u00fa al usuario con cuatro operaciones disponibles: Crear directorio, Eliminar directorio, Mostrar directorio, Informe de directorio, Copia de directorio y Salir. Una vez elegida una opci\u00f3n correcta, el programa debe solicitar un nombre de directorio y hacer la operaci\u00f3n seleccionada. Tras esto debe mostrar un mensaje con el resultado de la operaci\u00f3n. Crea una funci\u00f3n para cada una de estas opciones.</p> </li> <li> <p>Si se elige la opci\u00f3n Informe de directorio, mostrar\u00e1 por pantalla el n\u00famero de ficheros que contiene, cuantos son carpetas, cuantos directorios y el tama\u00f1o total de ellos. Si la carpeta no existe, mostrar\u00e1 un error.</p> </li> <li> <p>Si elige la opci\u00f3n Copia de directorio, preguntar\u00e1 la carpeta de destino y mostrar\u00e1 fichero a fichero la copia.</p> </li> <li> <p>Realiza un script PowerShell que permita crear un informe de las IP libres en la red en la que se encuentra el equipo. Debe contener las siguientes opciones:</p> </li> <li> <p>el informe contendr\u00e1 un listado de todas las IP de la red a la que pertenece el equipo indicando si est\u00e1 libre o no (usa el comando ping).</p> </li> <li>en el informe debe aparecer el tipo de red (A, B o C) en el que est\u00e1 inmerso el ordenador con el nombre de la red, su broadcast y su m\u00e1scara de subred.</li> </ol>"},{"location":"UD1/windows/021_Introducci%C3%B3nPwSh/","title":"Power Shell","text":""},{"location":"UD1/windows/021_Introducci%C3%B3nPwSh/#introduccion","title":"Introducci\u00f3n","text":"<ul> <li>Los sistemas operativos basados en Microsoft Windows cuentan con la herramienta PowerShell, que surgi\u00f3 ante las carencias que presenta el viejo terminal basado en MS-DOS.</li> <li>PowerShell es una interfaz de consola (CLI) con posibilidad de escritura y uni\u00f3n de comandos por medio de instrucciones (scripts).</li> <li>Esta interfaz de consola est\u00e1 dise\u00f1ada para su uso por parte de administradores de sistemas, con el prop\u00f3sito de automatizar tareas o realizarlas de forma m\u00e1s controlada.</li> <li>En abril de 2006 Microsoft lanz\u00f3 una nueva interfaz CLI, con una sintaxis moderna que comparte similitudes con el lenguaje Perl.</li> <li>Perl es un lenguaje de programaci\u00f3n dise\u00f1ado por Larry Wall en 1987. Perl toma caracter\u00edsticas del lenguaje C, del lenguaje interpretado bourne shell, AWK, sed, Lisp y, en un grado inferior, de muchos otros lenguajes de programaci\u00f3n.</li> <li>Se trata de una interfaz gratuita, y que antes de Microsoft Windows 7 no se inclu\u00eda con el sistema operativo.</li> <li>En la actualidad, est\u00e1 incluida en todos los sistemas operativos de Microsoft, aunque requiere la presencia de <code>.NET</code> framework del que hereda sus caracter\u00edsticas orientadas a objetos.</li> <li>En agosto de 2016, Microsoft public\u00f3 su c\u00f3digo en GitHub para que pueda portarse a otros sistemas como GNU/Linux y MAC OSX.</li> </ul> <p>Info</p> <p>cmdlets Existen cientos de cdmlet en la versi\u00f3n 5.1 de PowerShell. Es posible consultar la ayuda de cada uno de ellos en la p\u00e1gina oficial de Microsoft.</p>"},{"location":"UD1/windows/021_Introducci%C3%B3nPwSh/#primer-script","title":"Primer Script","text":"<ul> <li>Al igual que ocurre en GNU/Linux un script de PowerShell no es m\u00e1s que un archivo de texto plano que contiene una secuencia de comando y de cmdlets para realizar una tarea.</li> <li>La diferencia con ellos es que aqu\u00ed ser\u00e1 necesario dotarlos de una extensi\u00f3n; <code>ps1</code>.</li> </ul> <p>Example</p> <pre><code>    Write-Host \"Hola!. Esto es mi primer script en PowerShell\"\n    Write-Host \"Y esto es una segunda l\u00ednea\"\n</code></pre> <ul> <li>A continuaci\u00f3n, se guarda el script desde el men\u00fa <code>Acci\u00f3n \u2192 Guardar Como\u2026</code> asign\u00e1ndole un nombre.</li> <li>Para ejecutarlo tan s\u00f3lo es necesario escribir su nombre en el terminal de PowerShell anteponiendo un punto y una barra.</li> </ul> <p>Example</p> <pre><code>  ./Script.ps1\n</code></pre>"},{"location":"UD1/windows/021_Introducci%C3%B3nPwSh/#powershell-ise","title":"PowerShell ISE","text":"<ul> <li>PowerShell viene acompa\u00f1ado de una herramienta gr\u00e1fica que facilita la administraci\u00f3n de todos los scripts. Se denomina Microsoft PowerShell ISE (Integrated Scripting Environment), y se accede a trav\u00e9s de: <code>Administrador del servidor \u2192 Herramientas \u2192 Windows PowerShell ISE</code>.</li> <li>El uso de esta herramienta gr\u00e1fica va a facilitar la creaci\u00f3n de los scripts de forma significativa.</li> <li>Es pr\u00e1ctico comenzar con esta ayuda ya que la sintaxis de los cmdlets, aunque sea l\u00f3gica y sencilla, tambi\u00e9n lo es amplia y desconocida.</li> </ul> Interfaz de la herramienta Windows PowerShell ISE <p>Info</p> <ul> <li>Uno de los aspectos m\u00e1s interesantes que posee esta aplicaci\u00f3n es la barra de informaci\u00f3n que muestra un listado de todos los cmdlets de esta herramienta. Permite filtrarlos por funci\u00f3n y consultar la ayuda de cada uno de ellos.</li> <li>Tambi\u00e9n posee un formulario destinado a generar el c\u00f3digo de un cmdlet de forma autom\u00e1tica.</li> </ul> <p>Example</p> <ul> <li>Creaci\u00f3n de un comando que realice una copia de seguridad de los scripts de trabajo en una memoria externa. Es necesario el uso de Copy-Item para ello, pero no se conoce su sintaxis.</li> <li>Si escribimos este cmdlet en el recuadro <code>Nombre</code> y se pulsa sobre <code>Mostrar Ayuda</code>, aparecer\u00e1 un formulario con sus opciones. Tras completar las necesarias y pulsando el bot\u00f3n <code>Insertar</code> situado en la parte inferior, el c\u00f3digo completo ser\u00e1 escrito la parte destinada al terminal.</li> </ul> Creaci\u00f3n autom\u00e1tica de scripts en Windows PowerShell ISE. <ul> <li>Es posible ejecutar el script desde la herramienta gr\u00e1fica pulsando la tecla <code>F5</code>, ejecutar una parte de \u00e9l con <code>F8</code> o detener la ejecuci\u00f3n con <code>Ctrl+Intro</code>.</li> </ul>"},{"location":"UD1/windows/021_Introducci%C3%B3nPwSh/#comentarios","title":"Comentarios","text":"<p>Note</p> <p>Los comentarios en PowerShell se realizan precediendo a la l\u00ednea con el car\u00e1cter <code>#</code> si se trata de una sola l\u00ednea y <code>&lt;#</code> y <code>#&gt;</code> si es multi-l\u00ednea.</p>"},{"location":"UD1/windows/021_Introducci%C3%B3nPwSh/#depuracion","title":"Depuraci\u00f3n","text":"<ul> <li>La depuraci\u00f3n es el proceso de examinar un script mientras se ejecuta para identificar y corregir errores en las instrucciones del script.</li> <li>El depurador de PowerShell puede ayudarle a examinar e identificar errores e ineficiencias en los scripts, funciones, comandos, configuraciones o expresiones de PowerShell Desired State Configuration (DSC).</li> </ul> <p>El depurador de PowerShell incluye el siguiente conjunto de cmdlets:</p> <ul> <li>Set-PSBreakpoint: establece puntos de interrupci\u00f3n en l\u00edneas, variables y comandos.</li> <li>Get-PSBreakpoint: obtiene puntos de interrupci\u00f3n en la sesi\u00f3n actual.</li> <li>Disable-PSBreakpoint: desactiva los puntos de interrupci\u00f3n en la sesi\u00f3n actual.</li> <li>Enable-PSBreakpoint: vuelve a habilitar los puntos de interrupci\u00f3n en la sesi\u00f3n actual.</li> <li>Remove-PSBreakpoint: elimina puntos de interrupci\u00f3n de la sesi\u00f3n actual.</li> <li>Get-PSCallStack: muestra la pila de llamadas actual.</li> </ul>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/","title":"Sintaxis","text":""},{"location":"UD1/windows/022_PowerShell_Sintaxis/#parametros-en-powershell","title":"Par\u00e1metros en PowerShell","text":"<ul> <li>A diferencia de GNU/Linux, los par\u00e1metros que reciba el script en PowerShell se reciben en el array args,</li> <li>Cada posici\u00f3n del array <code>args[]</code> guarda los par\u00e1metros introducidos al script en el orden indicado.</li> <li>Por lo tanto para acceder a los par\u00e1metros introducidos se debe acceder al valor de la posici\u00f3n que se desee.</li> </ul> <p>Example</p> <pre><code>[string]$param1= $args[0]\nWrite-Host \"Hola!. Esto es mi primer script en PowerShell\"\nWrite-Host \"Y esto es una segunda l\u00ednea\"\nWrite-Host \"El primer par\u00e1metro introducido es $param1\"\n</code></pre> <p>Note</p> <ul> <li>El script anterior esperar\u00e1 un par\u00e1metro de tipo <code>string</code> que ser\u00e1 contenido en la variable $param1.</li> <li>En la cuarta l\u00ednea mostrar\u00e1 el contenido de la variable por pantalla.</li> </ul> <ul> <li>Para poder ejecutar este script, ser\u00e1 necesario acompa\u00f1arlo de un par\u00e1metro del siguiente modo.</li> </ul> <pre><code>./Script.ps1 \"F\u00ba Javier Hern\u00e1ndez Ill\u00e1n\"\n</code></pre> <ul> <li>Para entender por completo el ejemplo anterior, ser\u00e1 necesario ver como PowerShell maneja las variables.</li> </ul>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#variables","title":"Variables","text":"<ul> <li>Para definir una variable en PowerShell s\u00f3lo tenemos que nombrarla utilizando para ello cualquier combinaci\u00f3n de caracteres, ya sean n\u00fameros, letras o s\u00edmbolos.</li> <li>Es posible utilizar espacios en el nombre, aunque en este caso el nombre debe ir rodeado por s\u00edmbolos de llaves {}.</li> <li>Al contrario que ocurre en shellscript, PowerShell es fuertemente tipado, lo que significa que las variables no son tratadas como cadenas de texto, sino que hay que especificar el tipo de dato que se guardar\u00e1 en ella.</li> <li>Para definir variables es posible utilizar el m\u00e9todo expl\u00edcito (adem\u00e1s con New-Variable y sus opciones), pero tambi\u00e9n se puede utilizar el m\u00e9todo impl\u00edcito anteponiendo el s\u00edmbolo $ delante del nombre.</li> </ul> <p>Info</p> <p>Get-Variable En cualquier momento puedes obtener una lista completa de las variables que se hayan definido hasta ese momento. Para lograrlo, basta con utilizar Get- Variable.</p>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#implicita","title":"Impl\u00edcita","text":"Tipo Descripci\u00f3n <code>[string]</code> Cadena de caracteres Unicode <code>[char]</code> Un s\u00f3lo car\u00e1cter Unicode de 16 bits <code>[byte]</code> Un s\u00f3lo car\u00e1cter Unicode de 8 bits <code>[int]</code> Entero con signo de 32 bits <code>[float]</code> N\u00famero con coma flotante de 32 bits <code>[double]</code> N\u00famero con coma flotante de 64 bits <code>[datetime]</code> Fecha y Hora <code>[bool]</code> Valor l\u00f3gico booleano <p>Example</p> <pre><code>    $numero = 9.99\n    $Final_2021 = 30\n    ${Mi variable} = \"Contiene espacios en el nombre\"\n</code></pre> <ul> <li>En la forma impl\u00edcita el shell establece el tipo de dato de la variable en funci\u00f3n del dato que se le asigne en su creaci\u00f3n.</li> <li>En el ejemplo anterior <code>$numero</code> es de forma autom\u00e1tica de tipo <code>[double]</code>, ya que al crearla se ha inicializado con un n\u00famero con decimales.</li> <li>Por contra la variable <code>$Final_2021</code> es de tipo <code>[int]</code> ya que se ha guardado un n\u00famero entero en ella.</li> </ul> <p>Info</p> <p>-GetType Para poder obtener el tipo de dato de una variable hay que usar el m\u00e9todo <code>GetType().Name</code> sobre cualquier variable:</p> <p><code>Write-Host $numero.GetType().Name.</code></p> <p>Tip</p> <p>Una variable cuya definici\u00f3n de tipo se ha realizado de forma impl\u00edcita, podr\u00e1 cambiar el tipo de dato almacenado durante la ejecuci\u00f3n del programa sin experimentar ning\u00fan tipo de error. - Esta pr\u00e1ctica aunque c\u00f3moda no es muy recomendable.</p>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#explicita","title":"Explicita","text":"<ul> <li>Es buena idea tomar el control del tipado de las variables y asignarlo en funci\u00f3n de las necesidades del programa.</li> <li>De esta forma se ahorrar\u00e1n futuras conversiones de datos y posibles p\u00e9rdidas de informaci\u00f3n.</li> <li>Para ello se usa la forma expl\u00edcita de crear variables y junto con su creaci\u00f3n se define el tipo de dato que va a contener.</li> </ul> <p>Example</p> <pre><code>[float] $numero = 9.99\n[int] $Final_2021 = 30\n[string] ${Mi variable} = \"Contiene espacios en el nombre\"\n</code></pre> <p>Al contrario que en el caso anterior, cuando el dato asignado no coincida con el tipo esperado, pueden ocurrir dos cosas:</p> <ol> <li>Se modifiquen las caracter\u00edsticas del dato para amoldarse al tipo de variable, lo que puede traducirse en la p\u00e9rdida de datos y un mal funcionamiento del script,</li> <li>Se produzca un error si esa conversi\u00f3n no es posible y se detenga el script.</li> </ol>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#interaccion-con-el-usuario","title":"Interacci\u00f3n con el usuario","text":"<p>PowerShell posee dos cmdlets para realizar estas tareas.</p> <ol> <li>El primero de ellos es Write-Host y tiene un comportamiento similar al echo en GNU/Linux.</li> <li>El segundo comando para interactuar con el usuario es Read-Host el cual permite imprimir un mensaje por el terminal y recoger aquello que el usuario ha escrito. Funciona de forma muy parecida al comando read en el terminal de GNU/Linux.</li> </ol> <pre><code>[string] $marine = Read-Host \"\u00bfCu\u00e1l es el nombre del marine de Doom?\"\nWrite-Host \"No se sabe, pero lo has intentado con $marine\n</code></pre> <p>Note</p> <p>Este script detendr\u00e1 su ejecuci\u00f3n en la l\u00ednea donde aparece Read-Host, esperar\u00e1 a que el usuario conteste a la pregunta y seguir\u00e1 con la ejecuci\u00f3n, del mismo modo que ocurre con shellscript.</p>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#operadores","title":"Operadores","text":""},{"location":"UD1/windows/022_PowerShell_Sintaxis/#aritmeticos","title":"Aritm\u00e9ticos","text":"<ul> <li>Las operaciones aritm\u00e9ticas en PowerShell son m\u00e1s intuitivas que en shellscript.</li> <li>Son las mismas que en el caso anterior: <code>+</code>, <code>-</code>, <code>*</code> , <code>/</code> y <code>%</code>.</li> <li>Su uso es m\u00e1s sencillo puesto que es el propio terminal en que realiza los c\u00e1lculos aritm\u00e9ticos y no a trav\u00e9s de un comando.</li> </ul> <pre><code>[int] $a=10\n[float] $b=20\n[int] $res=$a+$b\nWrite-Host $res\nWrite-Host $a+$b\nWrite-Host \"$a x $b = \" ($a*$b)\n</code></pre> <p>Tambi\u00e9n se dispone de expansores de terminal como en GNU/Linux.</p> <p>Note</p> <p>N\u00f3tese que en la \u00faltima l\u00ednea aparece directamente el producto \\(a*\\)b ya que al rodear la operaci\u00f3n con par\u00e9ntesis, se convierte en un expansor, realiza la operaci\u00f3n en su interior y env\u00eda el resultado fuera.</p> <p>Existen variantes que simplifican el uso de algunos operadores.</p> Operador Uso Equivalencia <code>+=</code> $contador += 5 $contador = $contador+5 <code>-=</code> $contador -= 5 $contador = $contador-5 <code>*=</code> $contador *= 5 $contador = $contador*5 <code>/=</code> $contador /= 5 $contador = $contador/5 <p>Adem\u00e1s de estos operadores existen dos espec\u00edficos para el incremento (<code>++</code>) y decremento (<code>--</code>) de una unidad, ideal para el uso de variables como contadores.</p>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#logicos","title":"L\u00f3gicos","text":"Operador Descripci\u00f3n <code>-and</code> Devuelve verdadero si las dos expresiones son verdaderas. <code>-or</code> Devuelve verdadero si una de las dos expresiones o las dos son verdaderas. <code>-xor</code> Devuelve verdadero si tan s\u00f3lo una de las expresiones es verdadera. <code>-not o !</code> Devuelve verdadero cuando la expresi\u00f3n da el valor falso. <p>Example</p> <pre><code>Write-Host ((6 -ge 4) -and (7 -le 7))\nWrite-Host ((10 -gt 1) -or (2 -lt 2))\nWrite-Host ((1 -gt 0) -xor (4 -le 1))\nWrite-Host ( -not (12 -lt 10))\nWrite-Host (!(12 -lt 10))\n</code></pre> <p>Note</p> <p>En el ejemplo anterior si se ejecuta el script en un terminal PowerShell, todos los resultados ser\u00e1n verdaderos.</p> <ul> <li>Como en todos los lenguajes de programaci\u00f3n fuertemente tipados, existen operadores l\u00f3gicos para comprobar el tipo de dato de una variable, que resultan muy \u00fatiles para la interacci\u00f3n con los usuarios.</li> </ul> Operador Acci\u00f3n Ejemplo <code>-is</code> Devuelve verdadero si es del tipo indicado. <code>\"Javi\" -is [string]</code> es verdadero <code>-isnot</code> Devuelve falso si es del tipo indicado. <code>\"Javi\" -isnot [string]</code> es falso <code>-as</code> Convierte tipos de datos compatibles. <code>$valor = 19.90</code>; <code>Write-Host ($valor -as [int])</code>"},{"location":"UD1/windows/022_PowerShell_Sintaxis/#comparacion","title":"Comparaci\u00f3n","text":"<p>los operadores tipo l\u00f3gicos devuelven tan s\u00f3lo un valor booleano que puede tener dos valores; verdadero o falso.</p> Operador Acci\u00f3n Ejemplo <code>-eq</code> Comprueba si son iguales. <code>5 -eq 3</code> es falso <code>-ieq</code> Iguales. En cadenas no es casesensitive. <code>\"Javi\" -ieq \"javi\"</code> es verdadero <code>-ceq</code> Iguales. En cadenas es casesensitive. <code>\"Javi\" -ceq \"javi\"</code> es falso <code>-ne</code> Verifica si son diferentes. <code>5 -ne 3</code> es verdadero <code>-lt</code> Coteja si la izquierda es menor que derecha. <code>5 -lt 3</code> es falso <code>-le</code> Constata si la izquierda es menor o igual que derecha. <code>5 -le 3</code> es falso <code>-gt</code> Examina si la izquierda en mayor que la derecha. <code>5 -gt 3</code> es verdadero <code>-ge</code> Revisa si la izquierda en mayor o igual que la derecha. <code>5 -ge 3</code> es verdadero <p>PowerShell a\u00f1ade operadores de comparaci\u00f3n que aportan un nivel de complejidad mayor.</p> Operador Acci\u00f3n Ejemplo <code>-like</code> Eval\u00faa un patr\u00f3n \"es como\". <code>\"Perro\" -like \"Pe*\"</code> es verdadero <code>-notlike</code> Eval\u00faa un patr\u00f3n \"no es como\". <code>\"Perro\" -notlike \"Pe*\"</code> es falso <code>-contains</code> Contiene un valor. <code>1,2,3 -contains 2</code> es verdadero <code>-notcontains</code> No contiene un valor. <code>1,2,3 -notcontains 2</code>es falso <pre><code>\n</code></pre>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/","title":"Control de Flujo","text":""},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#estructuras","title":"Estructuras","text":"<p>En esta parte se indicar\u00e1 tan s\u00f3lo la sintaxis de las estructuras alternativas e iterativas, ya que los conceptos te\u00f3ricos ya se han abordado en el apartado de Shellscript.</p>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#alternativa-simple","title":"Alternativa Simple","text":"<pre><code>    if ( condici\u00f3n ){\n        ejecutar este c\u00f3digo si la condici\u00f3n es verdadera\n    }\n</code></pre>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#alternativa-doble","title":"Alternativa doble","text":"<pre><code>    if ( condici\u00f3n ) {\n        ejecutar este c\u00f3digo si la condici\u00f3n es verdadera\n    } else {\n        ejecutar este c\u00f3digo si la condici\u00f3n es falsa\n    }\n</code></pre>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#alternativa-multiple","title":"Alternativa m\u00faltiple","text":"<pre><code>    if ( condici\u00f3n1 ) {\n        ejecutar este c\u00f3digo si la condici\u00f3n1 es verdadera\n    } elseif ( condici\u00f3n2 ) {\n        ejecutar este c\u00f3digo si la condici\u00f3n2 es verdadera\n    } else {\n        ejecutar este c\u00f3digo si todas las condiciones son falsas\n    }\n</code></pre>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#el-equivalente-a-case-en-gnulinux","title":"El equivalente a case en GNU/Linux","text":"<pre><code>    switch ($valor){\n        opci\u00f3n1 { c\u00f3digo a ejecutar si opci\u00f3n1 coincide con $valor }\n        opci\u00f3n2 { c\u00f3digo a ejecutar si opci\u00f3n2 coincide con $valor }\n        opci\u00f3nN { c\u00f3digo a ejecutar si opci\u00f3nN coincide con $valor }\n        default { c\u00f3digo a ejecutar si ninguna de las opciones coincide }\n    }\n</code></pre> <p>Example</p> <pre><code>```pwsh\n        $saludo = Read-Host \"Escribe un saludo\"\n        switch ($saludo){\n            \"Buenos d\u00edas\" { Write-Host \"Saludaste en Castellano\" }\n            \"Bon dia\" { Write-Host \"Saludaste en Catal\u00e1n\" }\n            \"Bo dias\" { Write-Host \"Saludaste en Gallego\" }\n            \"Egun on\" { Write-Host \"Saludaste en Euskera\" }\n            \"Good morning\" { Write-Host \"Saludaste en Ingl\u00e9s\" }\n            \"Bonjour\" { Write-Host \"Saludaste en Franc\u00e9s\" }\n            \"Buon Giorno\" { Write-Host \"Saludaste en Italiano\" }\n            \"Bom d\u00eda\" { Write-Host \"Saludaste en Portugu\u00e9s\" }\n            \"Guten Tag\" { Write-Host \"Saludaste en Alem\u00e1n\" }\n            {$_ -is [string]} { Write Host \"La variable que has pasado es una cadena\" }\n            default { \"Eso no parece un saludo\" }\n        }\n\n```\n</code></pre> <p>Note</p> <ul> <li> <p>Existe la posibilidad de colocar operadores l\u00f3gicos como opciones de un <code>switch</code>, si estos operadores l\u00f3gicos devuelven un valor verdadero, se ejecutar\u00e1 esa parte del c\u00f3digo, si se eval\u00faa a falso, no realizar\u00e1 esa parte del c\u00f3digo.</p> </li> <li> <p>El car\u00e1cter $_ hace referencia a la variable $saludo, de ese modo es posible realizar operaciones l\u00f3gicas con el valor pasado.</p> </li> </ul> <ul> <li>Adem\u00e1s de todo esto, <code>switch</code> posee una serie de opciones que no est\u00e1n presentes en GNU/Linux, aunque es posible realizarlas de otra manera.</li> </ul> Operador Descripci\u00f3n <code>-wildcard</code> S\u00f3lo aplicable a <code>[string]</code>. Indica si cumple un patr\u00f3n determinado. <code>-exact</code> S\u00f3lo aplicable a <code>[string]</code>. Debe coincidir exactamente con alguno de los patrones. <code>-casesensitive</code> S\u00f3lo aplicable a <code>[string]</code>. Debe coincidir en may\u00fasculas y min\u00fasculas. <code>-file</code> La entrada es un archivo. Se evaluar\u00e1 cada l\u00ednea del archivo. <code>-regex</code> S\u00f3lo aplicable a <code>[string]</code>. Permite usar expresiones regulares en la comparaci\u00f3n. <p>Example</p> <pre><code> `-regex`\n\n```pwsh\n    $target = 'https://bing.com'\n    switch -Regex ($target){\n    '^ftp\\://.*$' { \"$_ is an ftp address\"; Break }\n    '^\\w+@\\w+\\.com|edu|org$' { \"$_ is an email address\"; Break }\n    '^(http[s]?)\\://.*$' { \"$_ is a web address that uses $($matches[1])\"; Break }\n}\n```\n</code></pre> <p>Example</p> <pre><code>    `-wildcard`\n\n```pwsh\n     switch -wildcard ( Read-Host \"Escribe un n\u00famero de tel\u00e9fono\" ){\n      \"8*\" { Write-Host \"Es un tel\u00e9fono fijo: $_\"; break }\n      \"9*\" { Write-Host \"Es un tel\u00e9fono fijo: $_\"; break }\n      \"6*\" { Write-Host \"Es un tel\u00e9fono m\u00f3vil: $_\"; break }\n        default { \"$_ no parece un tel\u00e9fono\" }\n    }\n```\n</code></pre> <ul> <li>El comando break que aparece al final de cada opci\u00f3n indica que si encuentra una coincidencia no siga buscando m\u00e1s y rompa el switch, ahorr\u00e1ndose as\u00ed el resto de comprobaciones.</li> </ul>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#estructuras-iterativas","title":"Estructuras iterativas","text":""},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#while","title":"while","text":"<p>A diferencia de lo que ocurr\u00eda en GNU/Linux, en PowerShell existen diferencias entre las estructuras while, do while y do until. En este caso, la \u00fanica de las tres que evaluar\u00e1 la condici\u00f3n al inicio del bloque de c\u00f3digo ser\u00e1 la primera. El resto comprueba la condici\u00f3n al final del bloque ejecutando como m\u00ednimo una vez el c\u00f3digo que contiene.</p> <pre><code>while ( condici\u00f3n ){\n    bloque de c\u00f3digo a ejecutar mientras condici\u00f3n sea verdadera\n}\n</code></pre> <pre><code>do {\n    bloque de c\u00f3digo a ejecutar mientras condici\u00f3n sea verdadera\n} while ( condici\u00f3n )\n</code></pre> <p>Existe una variante de esta estructura que se crea sustituyendo el while por un until. Esto cambia el sentido de la condici\u00f3n y es este caso el bloque se repite hasta que la condici\u00f3n se cumpla. Esta estructura no es muy utilizada, pero siempre es bueno contar con herramientas extra.</p>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#for","title":"for","text":"<p>Tambi\u00e9n la estructura <code>for</code> es sensiblemente diferente que en shellscript. Esta estructura en PowerShell tiene m\u00e1s que ver con los lenguajes de programaci\u00f3n y se utiliza cuando el programador sabe el n\u00famero de iteraciones que hay que realizar para solucionar un problema.</p> <pre><code>for ( inicializaci\u00f3n; condici\u00f3n; incremento ){\n    bloque de c\u00f3digo a ejecutar mientras condici\u00f3n sea verdadera\n}\n</code></pre> <ul> <li>Por ejemplo, la creaci\u00f3n de la tabla de multiplicar de un n\u00famero especificado por el usuario. Para resolver este problema s\u00ed se conoce el n\u00famero de iteraciones necesarias, concretamente diez.</li> </ul> <p>Example</p> <pre><code>$numero = Read-Host \"Dame un n\u00famero\"\nWrite-Host \"Esta es la tabla del $num\"\nfor ( $i=0; $i -lt 11; $i++){\n    Write-Host \" $i x $numero = \"($i*$numero)\n}\n</code></pre>"},{"location":"UD1/windows/023_PowerShell_ControlFlujo/#foreach","title":"foreach","text":"<p>La estructura <code>foreach</code> en PowerShell es el equivalente a for en shellscript. Est\u00e1 pensada para recorrer un conjunto de valores y ejecutar el bloque de c\u00f3digo una vez por cada elemento del conjunto.</p> <pre><code>foreach ( elemento in conjunto ){\n bloque de c\u00f3digo a ejecutar por cada elemento del conjunto\n}\n</code></pre> <p>Al igual que ocurre en GNU/Linux, el conjunto puede serlo de cualquier tipo de objetos, incluso los ficheros de una carpeta. En el siguiente ejemplo se buscan los ficheros que en su nombre contengan la cadena de texto que el usuario ha especificado:</p> <p>Example</p> <pre><code>```pwsh\n    $ruta = \"C:\\Users\\Administrador\\Desktop\"\n    $busca = Read-Host \"Escribe el texto a buscar\"\n    foreach ($archivo in Get-ChildItem $ruta){\n        if ($archivo.Name.IndexOf($busca) -ge 0){\n        Write-Host $archivo.Name\n        }\n    }\n```\n</code></pre> <p>Otro ejemplo con el misma salida.</p> <p>Example</p> <pre><code>``` PowerShell title=\"\"\nForeach ($elemento in Get-Process) {\n\n\"{0} arrancado el : {1}\" -f $elemento.Name, $elemento.StartTime\n}\n\n```\n\nEn este segundo forma se utiliza un pipeline.\n``` PowerShell title=\"\"\nGet-Process | Foreach {\n\u2019{0} arrancado el : {1}\u2019 -f $_.Name, $_.StartTime\n}\n\n```\n</code></pre> <p>Note</p> <p>Las opciones que ofrece PowerShell en cuanto a estructuras de control parece una oferta m\u00e1s completa que la de shellscript, aunque para las tareas que se van a realizar en este m\u00f3dulo, ambos sistemas poseen herramientas suficientes.</p>"},{"location":"UD1/windows/024_PowerShell_VectoresFunciones/","title":"Vectores y Funciones","text":""},{"location":"UD1/windows/024_PowerShell_VectoresFunciones/#vectores","title":"Vectores","text":"<ul> <li>PowerShell considera como un vector a toda colecci\u00f3n de objetos, sea cual sea su tipo.</li> <li>Los elementos que lo conforman pueden estar separados por comas, estar expresados por el operador de rango <code>..</code> o ser el resultado de alguna expresi\u00f3n que devuelva una colecci\u00f3n, como as\u00ed lo hacen muchos cmdlets.</li> </ul> <p>Example</p> <pre><code>    $Vacia = @{}\n    $Enteros = 1,2,3,4,5\n    $Texto = \u201cLunes\u201d,\u201cMartes\u201d,\u201dMi\u00e9rcoles\u201d, \u201cJueves\u201d,\u201dViernes\u201d\n    $EnterosRango = 1..10\n</code></pre> <p>De esta forma se han definido cuatro vectores; el segundo contendr\u00e1 enteros y el tercero cadenas de caracteres. La \u00faltima l\u00ednea asigna los valores desde el 1 al 10 utilizando el operador rango <code>..</code> .</p> <p>Note</p> <p>El operador de rango representa una secuencia de enteros, con los l\u00edmites superior e inferior separados por dos puntos decimales. Permite expresar el rango en orden ascendente o descendente, as\u00ed como tambi\u00e9n que los l\u00edmites inferior o superior sean establecidos por medio de variables que contengan enteros.</p> <ul> <li>Un vector tambi\u00e9n puede definirse como el resultado de una expresi\u00f3n.</li> </ul> <p>Example</p> <pre><code>    $EnterosFor = @(For($i;$i &lt; 5;$i++){$i})\n    $Comando = Get-Process | Sort-Object ProcessName\n</code></pre> <p>En la primera l\u00ednea <code>$enteros</code> ser\u00e1 completado a trav\u00e9s del resultado de una estructura iterativa, mientras que la segunda contendr\u00e1 el resultado del cmdlet indicado. Adem\u00e1s de todas estas formas de declaraci\u00f3n, tambi\u00e9n se puede realizar a trav\u00e9s del cmdlet <code>New-Variable</code></p> <p>Example</p> <pre><code>    New-Variable -Name Enteros -Value 1,2,3,4,5 -Force\n    New-Variable -Name Texto -Value \"Lunes\",\"Martes\",\"Mi\u00e9rcoles\",\"Jueves\",\"Viernes\" \u2013Force\n    New-Variable -Name EnterosRango -Value (1..5) -Force\n    New-Variable -Name EnterosFor -value (. {For($i=1;$i -lt 5;$i++){$i}}) -Force\n</code></pre> <p>Note</p> <p>El atributo <code>-Force</code> sobrescribe la variable si esta ya existe, de ese modo no saltar\u00e1 ning\u00fan error a la hora de definir estas variables.</p> <ul> <li>Para obtener el n\u00famero de elementos de un vector se utiliza el m\u00e9todo Length, si se aplica a un elemento del vector, devolver\u00e1 el tama\u00f1o de este elemento, no del vector completo.</li> </ul> <p>Example</p> <pre><code>    $Texto.Length # mostrar\u00e1 5 por pantalla\n    $Texto[2].Length # mostrar\u00e1 9, las letras de \u201cMi\u00e9rcoles\u201d\n</code></pre> <ul> <li>Para a\u00f1adir elementos al final de un vector se utiliza el operador <code>+=</code>.</li> </ul> <p>Example</p> <pre><code>$Enteros += 6\n$Texto += \u201cS\u00e1bado\u201d, \u201cDomingo\u201d\n</code></pre> <p>Note</p> <p>La primera l\u00ednea a\u00f1ade el entero 6 al vector <code>$Enteros</code>, mientras que en la segunda se a\u00f1aden los elementos \u201cS\u00e1bado\u201d y \u201cDomingo\u201d al vector <code>$Texto</code>.</p> <ul> <li>Para eliminar un elemento de un vector PowerShell no ofrece un sistema parecido al de a\u00f1adir valores, sino que tendr\u00e1 que reescribirse el vector de nuevo sin los valores no deseados.</li> </ul>"},{"location":"UD1/windows/024_PowerShell_VectoresFunciones/#funciones","title":"Funciones","text":"<p>Tambi\u00e9n en PowerShell es posible utilizar funciones a trav\u00e9s de la siguiente estructura:</p> <pre><code>Function &lt;NOMBRE&gt; {\n Param (&lt;Par\u00e1metro&gt;,&lt;Par\u00e1metro&gt;,...)\n     Comandos PowerShell\n}\n</code></pre> <p>Warning</p> <p>El paso de par\u00e1metros a una funci\u00f3n se realiza de id\u00e9ntica forma que en shell script. La principal diferencia entre las funciones usadas en shell script es que ahora es preferible declarar y tipar antes de iniciar con el c\u00f3digo de la funci\u00f3n.</p> <p>Example</p> <pre><code>``` pwsh\nFunction Get-Sumar {\n    param ([integer] $a, [integer] $b)\n    $sumar = $a + $b\n    Write-Host \u201cLa suma es $sumar\u201d\n}\n```\n</code></pre> <p>Note</p> <pre><code>Si se ejecuta la siguiente instrucci\u00f3n: `Get-Sumar 2 8` La salida del terminal ser\u00e1 `La suma es 10`.\n</code></pre> <p>Si se necesita que las funciones est\u00e9n disponibles durante la sesi\u00f3n del usuario o si es necesario enlazarlas desde otro script, se deber\u00e1 utilizar la notaci\u00f3n de punto, del mismo modo que ocurr\u00eda en shell script.</p>"},{"location":"UD1/windows/Actividades/","title":"Actividades","text":""},{"location":"UD1/windows/Actividades/#introduccion","title":"Introducci\u00f3n","text":"<ol> <li>Genera un Script que muestre los procesos del sistema ordenados por el id.</li> <li>Muestra los servicios cuyo nombre empiece por la letra <code>n</code>, utilizando la creaci\u00f3n de un script.</li> <li>Crea un script que se le introduzca dos n\u00fameros como argumentos y los muestre por pantalla.</li> <li>Dise\u00f1a un script en Shell que pida al usuario dos n\u00fameros, los guarde en dos variables y los muestre por pantalla.</li> <li> <p>Crea un shell script que muestre por pantalla el resultado de de las siguientes operaciones. Debes tener en cuenta que a, b y c son variables enteras que son preguntadas al usuario al iniciar el script.</p> </li> <li> <p>a%b</p> </li> <li>a/c</li> <li>2 _ b + 3 _ (a-c)</li> <li>a * (b/c)</li> <li>(a*c)%b</li> </ol>"},{"location":"UD1/windows/Actividades/#control-de-flujo","title":"Control de flujo","text":"<ol> <li> <p>Crea un script que si no se la pasa ning\u00fan argumento nos lo diga.</p> </li> <li> <p>Crea un script PowerShell que al ejecutarlo muestre por pantalla uno de estos mensajes \u201cBuenos d\u00edas\u201d, \u201cBuenas tardes\u201d o \u201cBuenas noches\u201d, en funci\u00f3n de la hora que sea en el sistema (de 8:00 de la ma\u00f1ana a 15:00 ser\u00e1 ma\u00f1ana, de 15:00 a 20:00 ser\u00e1 tarde y el resto ser\u00e1 noche). Usa el <code>cmdlet Get-Date</code>.</p> </li> <li> <p>Construye tres script PowerShell utilizando estructuras iterativas:</p> </li> <li>el primero ej208A.ps1, que imprima la tabla de multiplicar de un n\u00famero preguntado al usuario. Este    n\u00famero debe ser entero positivo.</li> <li>el segundo ej208B.ps1, que pida un n\u00famero e indique si se trata de un n\u00famero par y si es n\u00famero primo.</li> <li>el tercero ej208C.ps1, que muestre las diez primeras tablas de multiplicar por pantalla. Hay un tiempo de espera de un segundo entre ellas. Utiliza las estructuras while, do while, for y foreach y el cmdlet Start-Sleep.</li> </ol>"},{"location":"UD1/windows/Actividades/#vectores-y-funciones","title":"Vectores y Funciones","text":"<ol> <li> <p>Dise\u00f1a un script PowerShell que lea un vector con 365 temperaturas y calcule la media y cuantos d\u00edas han estado por encima y cuantos por debajo de ella. Rellena el vector con valores aleatorios entre -5 y 35, para ello usa Get-Random.</p> </li> <li> <p>Crea un script PowerShell para que haga una copias de seguridad de todos los archivos del directorio de trabajo del usuario actual. Deber\u00e1 realizar las siguientes acciones:</p> </li> <li> <p>comprobar\u00e1 si el archivo ya existe en la copia de seguridad, si es as\u00ed comprobar\u00e1 cual de los dos es m\u00e1s reciente y que tama\u00f1o tienen. Si es m\u00e1s reciente o posee un tama\u00f1o mayor, lo copiar\u00e1. En cualquier otro caso, no lo copia.</p> </li> <li>llevar\u00e1 un registro de todos los archivos copiados cada vez que se ejecute mediante un archivo de bit\u00e1cora. Guarda este fichero el directorio que contiene el script.</li> </ol> <p>Crea una funci\u00f3n para cada tarea realizada en este script.</p> <p>Warning</p> <p>Utiliza en la generaci\u00f3n de los scripts los cmdlets de depuraci\u00f3n si as\u00ed lo consideras al haber encontrado problemas en la ejecuci\u00f3n.</p> <p>NOTA</p> <p>Escribe el c\u00f3digo de los scripts en PowerShell que se detallan en cada ejercicio. Deber\u00e1s crear un fichero de texto para cada ejercicio con el siguiente nombre: ejXXX.sh, donde las X representan el n\u00famero de ejercicio. Una vez terminada la pr\u00e1ctica, comprime todos estos ficheros en uno y s\u00fabelos al Moodle.</p>"},{"location":"UD1/windows/Actividades/#administracion","title":"Administraci\u00f3n","text":"<ol> <li> <p>Dise\u00f1a un script <code>(scriptAd1.ps1</code>) que liste todos los equipos de un Dominio y que que muestre si est\u00e1n conectado o no.</p> Salida del script<pre><code>Equipo   Version\n---\nSERVIDOR alcanzado\nCLIENTE2 alcanzado\nASIR no alcanzado\nUBUNTU1 no alcanzado\nASIRL... no alcanzado\nLINUX... no alcanzado\nUBUNT... no alcanzado\n</code></pre> <p>Note</p> <p>Comando para conseguir todos los equipos <code>Get-ADComputer</code> Envio de un solo ping <code>Test-Connection $Equipo -quiet -count 1)</code>.</p> </li> <li> <p>Modifica el anterior script y gu\u00e1rdalo como <code>(scriptProcesVirtual.ps1</code>). Tenemos que comprobar el tama\u00f1o en memoria del procesos que se llame PowerShell (propiedad <code>VirtualMemorySize</code>) de todos los equipos.</p> </li> </ol> Salida del Script<pre><code>Equipo   MemoriaVirtual\n------   --------------\nSERVIDOR      268861440\nCLIENTE2      725434368\nASIR       no alcanzado\nUBUNTU1    no alcanzado\nASIRL...   no alcanzado\nLINUX...   no alcanzado\n</code></pre> <pre><code>!!!note\n\n    Tenemos dos opciones utilizar la propiedad `ComputerName` o crear una sesi\u00f3n por cada uno de los ordenadores.\n</code></pre> <ol> <li> <p>Modifica el anterior script y gu\u00e1rdalo como <code>(scriptMediaPlayerVersion.ps1</code>). De tal manera, que en esta versi\u00f3n consigamos la versi\u00f3n del programa Media player. Para ello, es necesario que realizes una funci\u00f3n que se llame <code>Get-Key</code> y mandes esta a todos los equipos.</p> Salida del script<pre><code>Equipo   Version\n---      ----\nSERVIDOR 12,0,10011,16384\nCLIENTE2 12,0,10011,16384\nASIR Equipo inalca...\nUBUNTU1 Equipo inalca...\nASIRL... Equipo inalca...\n</code></pre> <p>Note</p> <p>La versi\u00f3n la tenemos que coger del registro de windows. mediante el comando <code>Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\MediaPlayer\\PlayerUpgrade -Name \"PlayerVersion\" -ea silentlycontinue</code>. Recordar que s\u00f3lo nos interesa la version. Tambi\u00e9n, si no est\u00e1 instalada que nos diga que no instalada.</p> </li> <li> <p>Crea el siguiente script <code>(scriptDNSConfig.ps1</code>) De tal manera, que este script consiga la configuracion DNS de todos las interfaces activas en los equipos. Esta vez vamos a crear una funci\u00f3n que se le pasen por par\u00e1metros todos los equipos.</p> </li> </ol> <p>Esta funci\u00f3n debe empezar de la siguiente manera:</p> <pre><code>``` PowerShell title=\"\"\nfunction Get-DNSConfiguration\n    {\n        [CmdletBinding()]\n        Param ( [Parameter(Mandatory=$true,ValueFromPipeline=$true)} [String[]]$ComputerName\n    Process\n    {\n    #Aqu\u00ed ten\u00e9is que poner el c\u00f3digo.\n    }\n    }\n```\n</code></pre> <p>Aclaraciones sobre la creaci\u00f3n de la funci\u00f3n:</p> <ul> <li>El <code>CmdletBinding</code> atributo es un atributo de funciones que hace que funcionen como cmdlets compilados escritos en C#. Proporciona acceso a las caracter\u00edsticas de los cmdlets. Como por ejemplo que acepte valores desde un Pipeline (<code>ValueFromPipeline=$true</code>).</li> <li>Despu\u00e9s tendremos que buscar de todos los computadoras las interfaces que est\u00e1n activas. Buscando la instancia de la clase <code>Win32_NetworkAdapter</code></li> <li>A continuaci\u00f3n, deberemos pasarle esas interfaces para recuperar la configuraci\u00f3n con la clase Win32_NetworkAdapterConfiguration</li> </ul> <p>El resultado debe ser el siguiente:</p> Salida<pre><code>Get-DNSConfiguration -ComputerName cliente2\n\nHostName Ping DNS\n-------- ---- ---\ncliente2 OK   {172.16.0.3, 8.8.8.8}\n\n#O, como aceptamos pipeline.\n\n\nGet-ADComputer -Filter * | Select-Object Name -ExpandProperty Name |\nGet-DNSConfiguration\n#Podemos llamar a esa funci\u00f3n de esa manera  porque hemos establecido el bloque process, sino tendr\u00edamos que utilizar la variable $_ para cada uno de los objetos que se les pasa.\n\n\nHostName Ping DNS\n-------- ---- ---\nSERVIDOR OK   {127.0.0.1, 8.8.8.8}\nCLIENTE2 OK   {172.16.0.3, 8.8.8.8}\nASIR     NOK\nUBUNTU1  NOK\nASIRL... NOK\n</code></pre> <ol> <li>Modifica el anterior script con el nombre scriptSetDNSConfig.ps1. Con el objetivo de asignar DNS a las interfaces con la opci\u00f3n <code>SetDNSServerSearchOrder($DNSList)</code>.Donde <code>$DNSList</code> es un par\u00e1metro que por defecto no es obligatorio por defecto y que tenga unos valores por defecto como <code>[String[]]$DNSList = @('192.168.0.30', '192.168.0.40')</code>. Tendr\u00e1s que determinar si se ha actualizado las DNS o no.</li> </ol> <p>El resultado debe ser el siguiente:</p> Salida<pre><code> Get-DNSConfiguration -ComputerName cliente2\nHostName  Ping DNS\n-------- ---- ---\nCLIENTE2 OK {192.168.1.30, 192.168.1.40}\n</code></pre> <ol> <li>Crea el siguiente script <code>scriptNewUser.ps1</code>. Con el objetivo que en un controlador de dominio con el Rol de Active Directory creemos todos los usuarios desde un listado en un fichero CSV. Para realizar esto deberemos tener un fichero de la siguiente manera:</li> </ol> Formato de fichero con ; de separador<pre><code>Name;SAMAccountName;givenName;surname;Description;profilePath;scriptPath;\nPerez;Perez;Eduardo;P\u00e9rez;Cuenta de usuario;;login.vbs;L:;\\\\srvfic1\\users\nLarea;Larea;Pedro;Larea;Cuenta de usuario;;login.vbs;L:;\\\\srvfic1\\users\nGonzalo;Gonzalo;Juan;Gonzalo;Cuenta de usuario;;login.vbs;L:;\\\\srvfic1\\users\nArellano;Arellano;Marcelo;Arellano;Cuenta de usuario;;login.vbs;L:;\\\\srvfic1\\\nusers\nNavarro;Navarro;Jorge;Navarro;Cuenta de usuario;;login.vbs;L:;\\\\srvfic1\\users\n</code></pre> <pre><code>Este fichero tendr\u00e1s que importarlo con el comando `Import-Csv` y posteriormente pasar los datos al comando `New-ADUser`. **Cada columna del fichero ser\u00e1 una opci\u00f3n del comando anterior.**\nUtiliza los datos que te he dado pero tendr\u00e1s que incluir un password para cada uno de ellos, adem\u00e1s establecer que no expira nunca la contrase\u00f1a.Tambi\u00e9n, \u00e9stos tendr\u00e1n que estar en una OU del dominio que hay\u00e1is hecho.\n</code></pre>"},{"location":"UD1/windows/Estandares%20WMI-CIM/","title":"Est\u00e1ndares.","text":""},{"location":"UD1/windows/Estandares%20WMI-CIM/#que-son-cim-y-wmi","title":"\u00bfQu\u00e9 son CIM y WMI?","text":"<p>CIM (Common Information Model) es un est\u00e1ndar abierto creado por la organizaci\u00f3n DMTF orientado a proveer una definici\u00f3n com\u00fan para el intercambio de informaci\u00f3n entre sistemas, redes, aplicaciones y servicios.</p> <p>WMI (Windows Management Instrumentation) es la implementaci\u00f3n de Microsoft de CIM, con la que se proveen m\u00e9todos para consultar y modificar la configuraci\u00f3n de una m\u00e1quina Window.</p> <p>Aunque esta definido anteriormente como un est\u00e1ndar abierto, actualmente es el nombre de la implementaci\u00f3n . Por lo tanto:</p> <p>Los cmdlets Wmi fueron los que aparecieron primero pero a partir de Windows PowerShell 3 fueron sustituidos por los CimCmdlets.</p>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#descubrir-las-clases-que-soporta","title":"Descubrir las clases que soporta.","text":"<p><code>Get-CimClass</code> es EL comando elegido para descubrir todo lo que se esconde en una infraestructura CIM/WMI ya que el descubrimiento era hasta ahora el gran punto d\u00e9bil de esta tecnolog\u00eda.</p> <p>Veamos un ejemplo:</p> Filtrar clases<pre><code> Get-CimClass -ClassName *network*\n&gt;&gt;\n\n\n   NameSpace: ROOT/cimv2\n\nCimClassName                        CimClassMethods      CimClassProperties\n------------                        ---------------      ------------------\nWin32_NetworkLoginProfile           {}                   {Caption, Description, SettingID, AccountExpires...}\nWin32_NetworkAdapterConfiguration   {EnableDHCP, Rene... {Caption, Description, SettingID, ArpAlwaysSourceRoute...}\nWin32_NetworkAdapterSetting         {}                   {Element, Setting}\n</code></pre> <p>Pero podemos, tambi\u00e9n las propiedades y m\u00e9todos.</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;  (Get-CimClass -ClassName Win32_NetworkAdapterConfiguration).\n&gt;&gt; CimClassProperties | Select-Object Name\n&gt;&gt;\n\nName\n----\nCaption\nDescription\nSettingID\n</code></pre> <p>Tambi\u00e9n podemos buscar clases que tengan una propiedad o m\u00e9todo en concreto.</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;  Get-CimClass -PropertyName speed\n\n\n   NameSpace: ROOT/cimv2\n\nCimClassName                        CimClassMethods      CimClassProperties\n------------                        ---------------      ------------------\nCIM_NetworkAdapter                  {SetPowerState, R... {Caption, Description, InstallDate, Name...}\nWin32_NetworkAdapter                {SetPowerState, R... {Caption, Description, InstallDate, Name...}\n</code></pre>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#recuperar-las-instancias-de-esas-clases","title":"Recuperar las instancias de esas clases.","text":"<p>Ya hemos visto que tipos hay. Ahora debemos recuperar el objeto o instancia perteneciente a una clase en concreto.</p> <p>Veamoslo en el siguiente ejemplo.</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-CimInstance -ClassName Win32_BIOS\n\n\nSMBIOSBIOSVersion : VirtualBox\nManufacturer      : innotek GmbH\nName              : Default System BIOS\nSerialNumber      : 0\nVersion           : VBOX   - 1\n</code></pre>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#recuperar-con-un-filtro-qlcql","title":"Recuperar con un filtro QL/CQL","text":"<p>Cuando una consulta CIM/WMI devuelve un gran n\u00famero de objetos, es preferible utilizar (con <code>Where-Object</code>).</p>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#comandos-de-la-familia-wmi","title":"Comandos de la familia WMI","text":"<p>Como hemos dicho anteriormente el conjunto de comandos WMI ha sido sustituido por los comandos de la familia CIM. Aunque hay muchos scripts que poseen dichos comandos. Por ejemplo, el comando <code>Get-CimInstance</code> tienes como equivalente a <code>get-wmiObject</code></p>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#establecer-sesiones-con-equipos-remotos","title":"Establecer sesiones con equipos remotos","text":"<p>Mientras que los comando WMI se comunicaban con m\u00e1quinas remotas mediante los protocolos DCOM y RPC. \u00c9stas, no eran \u00f3ptimas dado que la sesi\u00f3n se elimina despu\u00e9s de haber devuelto los resultados.</p> <p>Sin embargo, los comandos de la familia CIM mejoran enormemente esta comunicaci\u00f3n aportando:</p> <ul> <li>Una comunicaci\u00f3n que permite eligir entre los protocolos HTTPS/WS-Man o DCOM/RPC.</li> <li>La posibilidad de mantener una sesi\u00f3n entre el cliente y los servidores.</li> <li>La posibilidad de enviar consultas de manera paralela y no secuencial.</li> <li>Un mecanismo de \u00abremoting\u00bb similar a las sesiones PowerShell remotas.</li> </ul> <p>Para el siguiente ejemplo tenemos un Windows server con un dominio y un windows 10 a\u00f1adido al dominio de tal manera que consultamos desde un ordenador a otro. el nombre de la computadora y el dia que instal\u00f3 el sistema operativo y su versi\u00f3n.</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; $s = New-CimSession -ComputerName localhost, cliente2\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-CimInstance -ClassName Win32_operatingSystem -CimSession $s |\n&gt;&gt; Select-Object PSComputerName, Installdate, Version, Caption\n\nPSComputerName Installdate         Version    Caption\n-------------- -----------         -------    -------\nlocalhost      06/10/2023 8:55:15  10.0.20348 Microsoft Windows Server 2022 Standard\ncliente2       15/03/2022 18:27:37 10.0.19044 Microsoft Windows 10 Education\n</code></pre> <p>Este ejemplo lo he realizado desde el Windows Server dado que tenemos un usuario administrador del dominio. Se puede realizar al contrario, pero tenemos que cambiar la credencial.</p> <p>Podemos tambi\u00e9n, quitar todas las conexiones que hemos establecido anteriormente mediante.</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-CimSession\n\n\nId           : 1\nName         : CimSession1\nInstanceId   : d92a043e-ff09-4abb-9fe1-dc53a7678539\nComputerName : cliente2\nProtocol     : WSMAN\n\nId           : 2\nName         : CimSession2\nInstanceId   : ec1f236f-d97a-4efb-a18f-ad788b8e7f45\nComputerName : localhost\nProtocol     : WSMAN\n\n\n\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-CimSession | Remove-CimSession\n&gt;&gt;\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-CimSession\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;\n</code></pre>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#gestionar-o-monitorizar-eventos","title":"Gestionar o monitorizar eventos.","text":"<p>Es una herramienta muy \u00fatil de CIM/WMI que permite vigilar eventos (click, ejecuci\u00f3n de procesos, etc.. ).</p> <p>Para suscribirnos a un evento, por ejemplo a la creaci\u00f3n de proceso.El comando PowerShell clave para llevar a cabo esta operaci\u00f3n es <code>Register-CimIndicationEvent</code>.</p> <p>Vamos a ver un ejemplo en el que se monitoriza la ejecuci\u00f3n cualquier proceso y nos muestra un mensaje.</p> Script cuando se genera proceso<pre><code>$action = {\n  $name = $event.SourceEventArgs.NewEvent.ProcessName\n  $id = $event.SourceEventArgs.NewEvent.ProcessId\n  Write-Host -Object \"New Process Started : Name = $name\n ID = $id\"\n}\nRegister-CimIndicationEvent -ClassName 'Win32_ProcessStartTrace' -SourceIdentifier \"ProcessSta\" -Action $action\n</code></pre> <p>En este ejemplo se suscribe a los eventos generados por la clase denominada Win32_ProcessStartTrace. Esta clase genera un evento cada vez que se inicia un proceso. La variable $action contiene el bloque de script para Action, que usa la $event variable para acceder al evento recibido de CIM.</p>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#comunicaciones-remotas-de-windows-powershell","title":"Comunicaciones remotas de Windows PowerShell","text":"<p>El mecanismo de comunicaci\u00f3n remota de Windows PowerShell, presente desde la versi\u00f3n 2.0, llamado tambi\u00e9n Gesti\u00f3n remota de Windows (WinRM) y nos permite la administraci\u00f3n de equipos Windows.</p> <p>Para autorizar a un sistema a recibir comandos remotos, es necesario activar el remoting con el comando <code>Enable-PSRemoting</code>. El comando debe ejecutarse en una consola PowerShell abierta con la opci\u00f3n Ejecutar como administrador.</p> <p>El servicio WinRM se configura b\u00e1sicamente con HTTP en el puerto 5985 y escucha en todas las direcciones IP. Para forzar el uso de HTTPS y as\u00ed cifrar sus conexiones, debe primero obtener un certificado que almacenar\u00e1 en el almac\u00e9n Equipo local/Personal.</p> <p>Note</p> <p>La activaci\u00f3n y configuraci\u00f3n del servicio WinRM en un gran n\u00famero de servidores o puestos de trabajo puede realizarse con GPO.</p>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#sesiones-remotas","title":"Sesiones Remotas.","text":"<p>Antes de poder enviar \u00f3rdenes a un equipo remoto para administrarlo, es necesario establecer una sesi\u00f3n remota. Una sesi\u00f3n remota puede ser:</p> <ul> <li>Temporal: una sesi\u00f3n temporal se establece justo durante el tiempo del env\u00edo de un comando con <code>Invoke-Command o Enter-PSSession</code>.</li> <li>Permanente: Una sesi\u00f3n permanente es \u00fatil en los casos donde debemos ejecutar varios comandos que comparten datos mediante variables o funciones. La creaci\u00f3n de una conexi\u00f3n permanente a un equipo local o remoto se realiza con el comando   <code>New-PSSession</code></li> </ul> Establecientod una sesion con Cliente2<pre><code>$session = New-PSSession -ComputerName cliente2\n# Si necesitamos cambiar de credenciales podemos utilizar el siguiente comandos\n\n$cred = Get-Credential\n$session = New-PSSession -ComputerName cliente2  -Credential $cred\n</code></pre> <p>Ahora podemos ejecutar de comandos remotos con <code>Invoke-Command</code></p> consulta de servicios en ejecuci\u00f3n de Cliente2<pre><code>$cmde = { Get-Service | Where {$_.Status -eq \u2019running\u2019} }\nInvoke-Command -ComputerName cliente2 -ScriptBlock $cmde\nStatus   Name               DisplayName                            PSComputerName\n------   ----               -----------                            --------------\nRunning  AdobeARMservice    Adobe Acrobat Update Service           cliente2\nRunning  Appinfo            Informaci\u00f3n de la aplicaci\u00f3n           cliente2\nRunning  AppXSvc            Servicio de implementaci\u00f3n de AppX ... cliente2\n</code></pre> <p>En el siguiente ejemplo lanzamos un comando en la m\u00e1quina cliente2 utilizando la sesi\u00f3n anteriormente creada $sesion.</p> <pre><code> Invoke-Command -Session $session -ScriptBlock {$s=Get-Service wuauserv}\n\n\n\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;  Invoke-Command -Session $session -ScriptBlock {$s}\n\n\n\nStatus   Name               DisplayName                            PSComputerName\n------   ----               -----------                            --------------\nRunning  wuauserv           Windows Update                         cliente2\n\nInvoke-Command -Session $session -ScriptBlock {$s | Stop-Service}\n\n\n\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;  Invoke-Command -Session $session -ScriptBlock {$s}\n\n\n\nStatus   Name               DisplayName                            PSComputerName\n------   ----               -----------                            --------------\nStopped  wuauserv           Windows Update                         cliente2\n</code></pre> <p>En el siguiente ejemplo vamos a la ver cuanto disco duro queda libre en el equipo remoto , pero esta vez ejecutamos un script en el equipo remoto. Empecemos por el script.</p> Script freeSpace.ps1<pre><code>Function Get-DiskFreeSpace {\n$Disks = Get- Win32_LogicalDisk |\nWhere {$_.DriveType -eq 3}\nForeach($disk in $Disks)\n{\n$prop = [Ordered]@{\n\u2019ID\u2019 = $disk.DeviceID\n\u2019FreeSpace(GB)\u2019 = [Math]::Round(($disk.FreeSpace)/1GB,3)\n\u2019FreeSpace(%)\u2019 =\n[Math]::Round(($disk.FreeSpace)*100/($disk.Size),3)\n}\nNew-Object -TypeName PSObject -Property $prop\n}\n}\n</code></pre> <p>Vamos a explicar el anterior script un poco m\u00e1s:</p> <ul> <li>Hemos creado una funci\u00f3n que podemos reutilizar.</li> <li>Se crea una variable <code>$disk</code> para contener la consulta sobre los discos que sean de tipo 3. Estos son discos locales.</li> <li>Se crea un objeto personalizado <code>New-Object</code> por cada uno de los discos en las que las propiedades de estos viene determinada por una matriz diccionario ordenada <code>[Ordered]@</code>.</li> </ul> <p>A continuaci\u00f3n se ejecuta ese script en los ordenadores remotos, en este caso cliente2.</p> Invocamos<pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Invoke-Command -ComputerName cliente2 -FilePath .\\Documents\\free.ps1\n\n\nDeviceID DriveType ProviderName VolumeName Size        FreeSpace PSComputerName\n-------- --------- ------------ ---------- ----        --------- --------------\nC:       3                                 53083406336 765591552 cliente2\n\nID             : C:\nFreeSpace(GB)  : 0,713\nFreeSpace(%)   : 1,442\nPSComputerName : cliente2\nRunspaceId     : 1f37c8a5-986b-4766-ba65-c85143e3d03f\n</code></pre> <p>En el anterior ejemplo no hemos abierto una sesi\u00f3n , hemos utilizado la opci\u00f3n <code>-ComputerName</code></p>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#apertura-de-una-sesion-remota-interactiva-powershell","title":"Apertura de una sesi\u00f3n remota interactiva PowerShell","text":"<p>Se puede ejecutar comandos en modo interactivo en un equipo remoto. Se trata de un funcionamiento similar al de SSH.</p> <p>El comando <code>Enter-PSSession</code> arranca una \u00fanica sesi\u00f3n interactiva en un equipo remoto. Se puede abrir una sola sesi\u00f3n interactiva a la vez. Ejemplo:</p> Sesion remota interactiva<pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Enter-PSSession -ComputerName cliente2\n[cliente2]: PS C:\\Users\\Administrador\\Documents&gt;\n</code></pre>"},{"location":"UD1/windows/Estandares%20WMI-CIM/#importacion-de-comandos","title":"Importaci\u00f3n de comandos","text":"<p>Supongamos que en un equipo tenemos modulos que nos gustar\u00eda usar en nuestro equipo local.</p> <p>Veamos un ejemplo, en nuestro disponemos de un servidor con el rol \u00abActive Directory Domain Services\u00bb instalado. Este m\u00f3dulo aporta numerosos comandos para la gesti\u00f3n de objetos de usuario, equipos, grupos, OUs, etc. Por lo tanto queremos importar este m\u00f3dulo en la sesi\u00f3n actual de nuestro cliente.</p> <p>Creamos una sesi\u00f3n e importamos el m\u00f3dulo desde el servidor al <code>cliente2</code>. La sesi\u00f3n que tenemos que abrir en el cliente es de administrador, sino no nos deja.</p> Importaci\u00f3n de m\u00f3dulo<pre><code>PS &gt; $s = New-PSSession -ComputerName servidor\nPS &gt; Invoke-Command -Session $s -ScriptBlock { Import-Module ActiveDirectory }\n# ya hemos importado (esto se toma un poco de tiempo) desde server y ahora podemos importar los comandos que lo componen.\nPS &gt; Import-PSSession -Session $s -Module ActiveDirectory\n</code></pre> <p>Con lo cu\u00e1l, ahora ya podemos utilizar esos comandos.</p> Demostraci\u00f3n<pre><code>PS &gt; Get-Command *-AD*\n</code></pre>"},{"location":"UD1/windows/Manejo%20resultados/","title":"Manejo y selecci\u00f3n de resultados.","text":"<p>Podemos utilizar dos b\u00e1sicamente <code>Select-objet</code> o realizar un filtro m\u00e1s especifico mediante <code>Where-Object</code> y todos ellos se les trasfiere los objetos mediante el pipe \u00ab|\u00bb.</p>"},{"location":"UD1/windows/Manejo%20resultados/#recuperacion-de-objetos","title":"Recuperaci\u00f3n de Objetos.","text":"<p>La recuperaci\u00f3n de objetos mediante <code>Select-Object</code> es muy sencilla y tiene opciones muy interesantes.</p> <p>Veamos un ejemplo:</p> Selecci\u00f3n de cinco procesos<pre><code>S /home/julio&gt; $processes | Select-Object -first 5\n\n NPM(K)    PM(M)      WS(M)     CPU(s)      Id  SI ProcessName\n ------    -----      -----     ------      --  -- -----------\n      0     0,00       4,08       0,00  155061 \u202630 (sd-pam)\n      0     0,00       8,53       0,20     992 992 accounts-daemon\n      0     0,00       3,92       0,09    8039 \u202639 accounts-daemon\n      0     0,00       0,69       0,17     996 996 acpid\n      0     0,00       0,00       0,00     162   0 acpi_thermal_pm\n</code></pre> <p>Podemos sacar los procesos \u00fanicos con la opci\u00f3n <code>-Unique</code>.</p> Selecci\u00f3n de cinco procesos \u00fanicos<pre><code>PS /home/julio&gt;  Get-Process | Select-Object -Unique | Select-Object -First 5\n\n NPM(K)    PM(M)      WS(M)     CPU(s)      Id  SI ProcessName\n ------    -----      -----     ------      --  -- -----------\n      0     0,00       4,07       0,00  155061 \u202630 (sd-pam)\n      0     0,00       8,41       0,35     992 992 accounts-daemon\n      0     0,00       0,69       0,33     996 996 acpid\n      0     0,00       0,00       0,00     162   0 acpi_thermal_pm\n      0     0,00       4,65       0,00  156132 \u202631 agent\n</code></pre> <p>Para recuperar el nombre de los procesos as\u00ed como el id asociado podemos escribirlo.</p> <pre><code>PS /home/julio&gt;  Get-Process | Select-Object ProcessName,ID |  Select-Object -First 5\n\nProcessName         Id\n-----------         --\n(sd-pam)        155061\naccounts-daemon    992\naccounts-daemon   8039\nacpid              996\nacpi_thermal_pm    162\n</code></pre> <p>Otra forma de recuperar los objetos es mediante el filtro de busqueda, gracias a <code>Where-Object</code>.</p> <p>Vemos el siguiente ejemplo:</p> Recupera servicios en ejecuci\u00f3n<pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; $services = Get-Service\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; $services\n\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ADWS               Servicios web de Active Directory\nStopped  AJRouter           Servicio de enrutador de AllJoyn\nStopped  ALG                Servicio de puerta de enlace de niv...\n\n\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; $services | Where-Object {$_.Status -eq \u2019running\u2019}\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  ADWS               Servicios web de Active Directory\nRunning  AppXSvc            Servicio de implementaci\u00f3n de AppX ...\nRunning  BFE                Motor de filtrado de base\n</code></pre> <p>Aplicamos ahora un filtro para recuperar \u00fanicamente los servicios de Windows en ejecuci\u00f3n de.</p> <p>El \u00ab$_\u00bb indica que tratamos el objeto actual, en cada momento.</p> <p>Ahora podemos encadenar otra comparaci\u00f3n separadas por un \u00abpipe\u00bb.</p> Los tres \u00faltimos servicios<pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;\n&gt;&gt; $services | Where-Object {$_.Status -eq \u2019running\u2019}| Select-Object -Last 3\n\nStatus   Name               DisplayName\n------   ----               -----------\nRunning  WpnService         Servicio del sistema de notificacio...\nRunning  WpnUserService_... Servicio de usuario de notificacion...\nRunning  wuauserv           Windows Update\n</code></pre>"},{"location":"UD1/windows/Manejo%20resultados/#formateo-para-su-visualizacion","title":"Formateo para su visualizaci\u00f3n","text":""},{"location":"UD1/windows/Manejo%20resultados/#listado","title":"Listado","text":"<p>Para mostrarlo en formato lista. Es decir que cada propiedad de cada objeto se muestra en una nueva l\u00ednea. Mediante al propiedad <code>Format-first</code></p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;  Get-ChildItem C:\\ | Format-List\n   Directorio: C:\\\nName           : PerfLogs\nCreationTime   : 08/05/2021 10:20:24\nLastWriteTime  : 08/05/2021 10:20:24\nLastAccessTime : 08/05/2021 10:20:24\n</code></pre> <p>Otro ejemplo, para mostrar selectivamente algunas propiedades de los servicios de Windows:</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-Service | Format-List Name, Displayname,Status\n\nName        : ADWS\nDisplayName : Servicios web de Active Directory\nStatus      : Running\n</code></pre> <p>Note</p> <p>La ventaja principal de usar el comando Format-List respecto a la visualizaci\u00f3n de un tipo tabla (Format-Table), es que los valores de las propiedades disponen de m\u00e1s sitio en pantalla para mostrarse, y por lo tanto no se truncan.</p>"},{"location":"UD1/windows/Manejo%20resultados/#tabla","title":"Tabla","text":"<p>Casi la mayor\u00eda de los cmlets lo muestran as\u00ed, si no es el caso, tenemos <code>Format-table</code>.</p> <p>Para que no se trunque informaci\u00f3n podemos poner la opci\u00f3n <code>Autosize</code>. Veamos un ejemplo:</p> <pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt;  Get-ChildItem C:\\| Format-Table -Property mode,name,length,\n&gt;&gt; isreadonly,creationTime -Autosize\n\nMode   Name                length isreadonly CreationTime\n----   ----                ------ ---------- ------------\nd----- PerfLogs                              08/05/2021 10:20:24\nd-r--- Program Files                         08/05/2021 10:20:24\nd----- Program Files (x86)                   08/05/2021 10:20:24\nd-r--- Users                                 08/05/2021 10:06:51\nd----- Windows                               08/05/2021 10:06:51\n</code></pre>"},{"location":"UD1/windows/Manejo%20resultados/#redireccion","title":"Redirecci\u00f3n","text":"<p>Para redirigir el flujo de salida hacia un archivo podemos utilizar <code>&gt; y &gt;&gt;</code>, de la misma manera que en linux Veamos varios ejemplos.</p> Mandar a un archivo<pre><code>PS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT&gt; Get-Process &gt; .\\temp\\process.txt\n\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT\\temp&gt; Get-Content .\\process.txt\n\nHandles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName\n-------  ------    -----      -----     ------     --  -- -----------\n     92       6      868       4688       0,00   2204   0 AggregatorHost\n    258      14     8600      26888       0,36   4836   1 conhost\n</code></pre> <p>Por ejemplo si queremos redirigir el canal de error, que es el mismo que en linux, a un archivo, lo podemos realizar de la siguiente manera.</p> <pre><code> C:\\Users\\Administrador.WIN-OT4FJF7Q1AT\\temp&gt;  Get-ChildItem C:\\Temp\\DirInexistente 2&gt; .\\err.txt\n&gt;&gt;\nPS C:\\Users\\Administrador.WIN-OT4FJF7Q1AT\\temp&gt; Get-Content .\\err.txt\nGet-ChildItem : No se encuentra la ruta de acceso 'C:\\Temp\\DirInexistente' porque no existe.\nEn l\u00ednea: 1 Car\u00e1cter: 2\n+  Get-ChildItem C:\\Temp\\DirInexistente 2&gt; .\\err.txt\n+  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : ObjectNotFound: (C:\\Temp\\DirInexistente:String) [Get-ChildItem], ItemNotFoundException\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\n</code></pre>"},{"location":"UD1/windows/ProgramacionAula/","title":"Programaci\u00f3n de Aula","text":""},{"location":"UD1/windows/ProgramacionAula/#resultados-de-aprendizaje","title":"Resultados de Aprendizaje","text":"<p>Esta unidad cubre el Resultado de aprendizaje 7 (RA7) seg\u00fan el Real Decreto 1629/2009, de 30 de octubre, el cual es:</p> <ol> <li>Utiliza lenguajes de guiones en sistemas operativos, describiendo su aplicaci\u00f3n y administrando servicios del sistema operativo.</li> </ol> <p>Los criterios de evaluaci\u00f3n asociados son:</p> <ol> <li>a. Se han utilizado y combinado las estructuras del lenguaje para crear guiones.</li> <li>b. Se han utilizado herramientas para depurar errores sint\u00e1cticos y de ejecuci\u00f3n.</li> <li>g. Se han implantado guiones en sistemas libres y propietario.</li> <li>h. Se han consultado y utilizado librer\u00edas de funciones.</li> <li>i. Se han documentado los guiones creados.</li> </ol>"},{"location":"UD1/windows/ProgramacionAula/#planificacion-temporal","title":"Planificaci\u00f3n Temporal","text":"<p>Sesi\u00f3n.</p> <p>Fecha</p> <p>Contenido</p> <p>Recurso Did\u00e1ctico</p> <p>             1             </p> <p>             27/09/22             </p> <p>             Introducci\u00f3n PowerShell, Creaci\u00f3n Primer Script, Comentarios y depuraci\u00f3n.             </p> <p> Introducci\u00f3n PowerShell </p> <p>             2             </p> <p>             28/09/22             </p> <p>             Sintaxis, Argumentos y variables, Interacci\u00f3n con el usuario, Operadores.             </p> <p> Sintaxis PowerShell </p> <p>             3             </p> <p>             29/09/22             </p> <p>             Control de Flujo. Estructuras condicionales e iterativas.             </p> <p> Control de Flujo. </p> <p>             4             </p> <p>             04/10/22             </p> <p>             Vectores y funciones             </p> <p> Vectores y Funciones. </p> <p>             5             </p> <p>             05/10/22             </p> <p>             Refuerzo y Ampliaci\u00f3n.             </p> <p>              Refuerzo y Ampliaci\u00f3n.             </p>"},{"location":"UD1/windows/ResumenUD/","title":"Resumen UD","text":"<p>A continuaci\u00f3n se muestra un resumen de la Unidad Did\u00e1ctica:</p>  RESUMEN UNIDAD DID\u00c1CTICA <p>Unidad Did\u00e1ctica</p> <p>UD1.- ShellScripting. Realizaci\u00f3n de Guiones en Sistemas Operativos Libres.</p> <p>Horas</p> <p>6 Sesiones - 12 Horas</p> <p>Resultados de Aprendizaje</p> <p>RA7. Utiliza lenguajes de guiones en sistemas operativos, describiendo su aplicaci\u00f3n y administrando servicios del sistema operativo.</p> <p>Preconocimiento</p> <p>Funcionamiento del terminal de Linux/GNU. Aplicaci\u00f3n de comandos. Utilizaci\u00f3n de editores. Conocimiento de permisos de archivos.</p> <p>Objetivos Operativos</p> <p>Competencias Personales y Sociales. Transversales</p> <p> <ul> <li>Administraci\u00f3n de terminal de Linux/GNU.</li> <li>Conocer comandos b\u00e1sicos y avanzados en Shell.</li> <li>Optimizar el c\u00f3digo de los scripts mediante tuber\u00edas y redirecciones.</li> </ul> </p> <p>14. Gestionar y/o realizar el mantenimiento de los recursos de su \u00e1rea (programando y verificando su cumplimiento), en funci\u00f3n de las cargas de trabajo y el plan de mantenimiento.</p> <p>16. Mantener el esp\u00edritu de innovaci\u00f3n y actualizaci\u00f3n en el \u00e1mbito de su trabajo para adaptarse a los cambios tecnol\u00f3gicos y organizativos de su entorno profesional.</p> <p>Contenidos conceptuales</p> <p> <ul> <li>Introducci\u00f3n Linux. Creaci\u00f3n ShellScripts. Depuraci\u00f3n.</li> <li>Argumentos, variables, operadores; Entrada y Salida.</li> </ul> </p> <p> <ul> <li>Control de Flujo. Estructuras condicionales e iterativas.</li> <li>Funciones y vectores.</li> </ul> </p> <p>Instrumentos Evaluaci\u00f3n</p> <p>Actividades INICIALES (Ense\u00f1anza/Aprendizaje).</p> <p>Criterios Evaluaci\u00f3n</p> <p>Instrumento Calificaci\u00f3n</p> <p>Actividades desde la 101 a la 104. Basadas en Scripts de nivel bajo, en concreto, sobre el desarrollo de:</p> <p> <ul> <li>Creaci\u00f3n primeros scripts de nivel bajo</li> <li>Depuraci\u00f3n de scripts.</li> </ul> </p> <p> <ul> <li>CE7b. Se han utilizado herramientas para depurar errores sint\u00e1cticos y de ejecuci\u00f3n.</li> <li>CE7g. Se han implantado guiones en sistemas libres y propietarios.</li> <li>CE7i. Se han documentado los guiones creados.</li> </ul> </p> <p> <ul> <li>R\u00fabrica.</li> </ul> </p> <p>Actividades DESARROLLO (Ense\u00f1anza/Aprendizaje).</p> <p>Criterios Evaluaci\u00f3n</p> <p>Instrumento Calificaci\u00f3n</p> <ul> <li>Actividades desde la 105 a la 107. Interacci\u00f3n con usuario, utilizaci\u00f3n de variables, par\u00e1metros y operadores.</li> <li>Actividades desde la 108 a la 110. Control de Flujo. Estructuras condicionales e iterativas.</li> <li>Actividades desde la 111 a la 114. Vectores y funciones.</li> </ul> <p> <ul> <li>CE7a. Se han utilizado y combinado las estructuras del lenguaje crear guiones.</li> <li>CE7g. Se han implantado guiones en sistemas libres y propietario.</li> <li>CE7h. Se han consultado y utilizado librer\u00edas de funciones.</li> <li>CE7i. Se han documentado los guiones creados.</li> </ul> </p> <ul> <li>R\u00fabrica.</li> </ul> <p>Actividades Refuerzo.</p> <p>Criterios Evaluaci\u00f3n</p> <p>Instrumento Calificaci\u00f3n</p> <ul> <li>Actividades desde la 115 a la 118. Variables, par\u00e1metros, comprobaciones, estructuras condicionales e iterativas.</li> </ul> <p> <ul> <li>CE7a. Se han utilizado y combinado las estructuras del lenguaje crear guiones.</li> <li>CE7g. Se han implantado guiones en sistemas libres y propietario.</li> <li>CE7i. Se han documentado los guiones creados.</li> </ul> </p> <ul> <li>R\u00fabrica.</li> </ul> <p>Actividades Ampliaci\u00f3n.</p> <p>Criterios Evaluaci\u00f3n</p> <p>Instrumento Calificaci\u00f3n</p> <ul> <li>Actividades desde la 119 a la 121. Vectores, funciones, estructuras condicionales e iterativas.</li> </ul> <p> <ul> <li>CE7a. Se han utilizado y combinado las estructuras del lenguaje crear guiones.</li> <li>CE7g. Se han implantado guiones en sistemas libres y propietario.</li> <li>CE7h. Se han consultado y utilizado librer\u00edas de funciones.</li> <li>CE7i. Se han documentado los guiones creados.</li> </ul> </p> <ul> <li>R\u00fabrica.</li> </ul> <p>Prueba espec\u00edfica de evaluaci\u00f3n.</p> <p> <ul> <li></li> <li></li> </ul> </p>"},{"location":"UD1/windows/comandos/","title":"comandos","text":""},{"location":"UD1/windows/comandos/#estructura-de-comandos","title":"Estructura de comandos.","text":"<p>Los comandos incluidas en PowerShell reciben el nombre de cmdlets (command-let) y posee conjuntos espec\u00edficos para trabajar con Active Directory, Exchange, cada uno de ellos se denominar\u00e1n m\u00f3dulos.</p> <p>Los nombres de todos los cmdlets est\u00e1n formados por un verbo, un guion y un nombre en singular. Habitualmente, se escribe con may\u00fasculas la primera letra de cada palabra, pero no se trata m\u00e1s que de una norma de estilo, porque *PowerShell no distingue entre may\u00fasculas y min\u00fasculas.</p> <p>Una caracter\u00edstica de PowerShell es que se dispone de la mayor\u00eda de comandos que del CLI tradicional de Microsoft. De ese modo, es posible ejecutar el comando <code>dir</code> en lugar del <code>Get-ChildItem</code>, cmdlet que realiza la misma tarea. En realidad lo que est\u00e1 usando es un alias del segundo para lanzar el primero.</p> <p>Dispone de auto-completado de comandos y par\u00e1metros que facilitar\u00e1 las tareas de creaci\u00f3n de scripts. Basta con comenzar a escribir un cmdlet y pulsarla tecla Tab. Como hemos visto en Linux</p> <p>Si utilizamos PowerShell ISE al escribir aparecer\u00e1 una ventana con todos los cmdlets que coincidan con el texto escrito, incluso puede aparecer un recuadro con ayuda sobre su sintaxis. Para aceptar la sugerencia se pulsa la tecla Intro.</p>"},{"location":"UD1/windows/comandos/#ayuda-sobre-los-comandos","title":"Ayuda sobre los comandos","text":"<p>Para solicitar ayuda acerca de un comando, puede hacerlo de distintas maneras:</p> <ul> <li>Get-Help miComando</li> <li>HelpmiComando</li> <li>miComando-?</li> </ul>"},{"location":"UD1/windows/comandos/#get-command","title":"Get-Command","text":"<p>Si no sabemos que comandos disponemos. <code>Get-command</code> permite descubrir todos los comandos PowerShell.</p> <pre><code>PS /home/julio&gt; Get-Command -CommandType cmdlet\u00a0\n\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nCmdlet          Add-Content                                        7.0.0.0    Microsoft.PowerShell.Management\nCmdlet          Add-History                                        7.0.3.0    Microsoft.PowerShell.Core\nCmdlet          Add-Member                                         7.0.0.0    Microsoft.PowerShell.Utility\nCmdlet          Add-Type                                           7.0.0.0    Microsoft.PowerShell.Utility\nCmdlet          Clear-Content                                      7.0.0.0    Microsoft.PowerShell.Management\nCmdlet          Clear-History                                      7.0.3.0    Microsoft.PowerShell.Core\n</code></pre> <p>El par\u00e1metro <code>-CommandType</code> seguido del tipo de comando elegido, cmdlet. Pero podemos elegir otros tipos como alias , funciones etc..</p> <p>Otra opci\u00f3n importante es <code>-verb</code> permite conocer todos los comandos que empiezan por un verbo concreto.</p>"},{"location":"UD1/windows/comandos/#objetos","title":"Objetos","text":"<p>No voy desarrollar la programaci\u00f3n orientada a objetos. Pero hay que entender que es un objeto. Porque en todos lo elementos en PowerShell son objetos.</p> <p>Por ejemplo mi coche es un objeto que dispone de propiedades y m\u00e9todos. Las propiedades pueden ser:</p> <ul> <li>Marca,</li> <li>Modelo,</li> <li>Cilindrada,</li> <li>Potencia,</li> <li>Color,</li> <li>Peso,</li> </ul> <p>Pero \u00bfqu\u00e9 acciones (m\u00e9todos) podemos realizar con nuestra moto? Pues entre otras cosas, podemos:</p> <ul> <li>Arrancar/parar el motor,</li> <li>Acelerar/frenar,</li> </ul> <p>Pero como podemos utilizar o recuperar esa informatic\u00f3n. Por ejmplo, en un objeto llamado \u00abmiCoche\u00bb, para recuperar el color usaremos la sintaxis siguiente:</p> <pre><code>PS &gt; $miMoto.color\n</code></pre> <p>Y para arrancar \u00abmiCoche\u00bb, la sintaxis que sigue:</p> <pre><code>PS &gt; $miMoto.arrancar()\n</code></pre>"},{"location":"UD1/windows/comandos/#get-member","title":"Get-Member","text":"<p>Devuelve todas las propiedades y m\u00e9todos de un objeto as\u00ed como su tipo.</p> Obtenci\u00f3n de tipo<pre><code>PS /home/julio&gt; $result = Get-ChildItem /\nPS /home/julio&gt; $result | Get-Member\n\n\n   TypeName: System.IO.DirectoryInfo\n\nName                      MemberType     Definition\n----                      ----------     ----------\nLinkType                  CodeProperty   System.String LinkType{get=GetLinkType;}\nMode                      CodeProperty   System.String Mode{get=Mode;}\nModeWithoutHardLink       CodeProperty   System.String ModeWithoutHardLink{get=ModeWithoutHardLink;}\nTarget                    CodeProperty   System.String Target{get=GetTarget;}\n\n....\n\nTypeName: System.IO.FileInfo\n\nName                      MemberType     Definition\n----                      ----------     ----------\nLinkType                  CodeProperty   System.String LinkType{get=GetLinkType;}\n...\n## Podemos ver que es miembro de dos tipos.\n## Adem\u00e1s, podemos utilizarlo de la siguiente manera en la que podemos sacar los nombres.\n\nPS /home/julio&gt; $result.Name\nbin\nboot\n</code></pre> <p>Pero si lo ejecutamos de la siguiente forma:</p> <pre><code> PS /home/julio&gt; Get-Member -InputObject $result\n\n   TypeName: System.Object[]\n\nName           MemberType            Definition\n----           ----------            ----------\nAdd            Method                int IList.Add(System.Object value)\nAddress        Method                System.Object&amp;, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e Address(int )\n</code></pre> <p>Nos est\u00e1 indicando que esta compuesto de un array de objetos.</p> <p>!!! note title=\u00bfQu\u00e9 es un array(vector)?</p> <pre><code>Pues, a una zona de almacenamiento contiguo que contiene una serie de elementos del mismo tipo, en este caso otros objetos de tipo ficheros o directorios.\nEsto no lo indica los [].\n</code></pre> <p>Ahora si vemos el siguiente ejemplo.</p> <pre><code>PS /home/julio/tmp/temp&gt; $result.Length\n27\n</code></pre> <p>Lo que nos est\u00e1 indicando es que tenemos 27 ficheros y carpetas</p>"},{"location":"UD1/windows/comandos/#gestion-de-carpetas-y-archivos","title":"Gesti\u00f3n de carpetas y archivos","text":"<p>Cuando en Linux utilizamos el comando <code>ls</code> (funciona en PowerShell) lista todos los elementos que tiene en una carpeta. Tambi\u00e9n en el comando DOS/CMD <code>dir</code> podemos realizar la misma tarea.</p> <p>Pero, cuando tecleamos <code>dir</code> en PowerShell, en realidad llama a un alias. El alias ejecuta el comando <code>Get-ChildItem</code>.</p> <pre><code>PS /home/julio&gt; Get-Alias dir\u00a0\n\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nAlias           dir -&gt; Get-ChildItem\n</code></pre> <p>Vamos a poner algunos ejemplos, date cuenta que tenemos diferentes alias.</p> <p>Ejemplos:</p> <ul> <li>Para mostrar los archivos ocultos, agregue al comando <code>Get-Childitem</code> el par\u00e1metro -Force.</li> </ul> <pre><code>PS /home/julio&gt; gci / -Force\n\n\nDirectory: /\nMode LastWriteTime Length Name\n\n  ---\n\n      d-r-- 16/2/2024 16:02 bin\n      d-r-- 7/3/2024 10:17 boot\n      d-r-- 30/11/2018 23:26 cdrom\n      d-r-- 14/3/2024 10:04 dev\n      d-r-- 13/3/2024 8:47 etc\n      d-r-- 8/1/2024 12:02 home\n</code></pre> <ul> <li>Mostrar todos los archivos con extensi\u00f3n texto</li> </ul> <pre><code>PS /home/julio/Documentos/CursoBigdate/tmp/hive&gt;  Get-ChildItem / -Include *.txt -Recurse\n</code></pre> <ul> <li>Obtener el nombre de todos los archivos cuyo tama\u00f1o es superior a 32 KB.   <pre><code>Get-ChildItem  / -Recurse | Where-Object {$_.Length -gt 32KB}\n</code></pre></li> <li>Obtener los archivos cuya fecha de \u00faltima modificaci\u00f3n sea posterior al 01(mes)/03(dia)/2023(a\u00f1o)</li> </ul> <pre><code>Get-ChildItem | Where-Object {$_.LastWriteTime -gt \u201901/03/2023\u2019}\n</code></pre> <p>Pero como nos podemos desplazar entre los directorios. Lo seguimos haciendo con el comando <code>cd</code> pero el comando verdadero se llama <code>Set-Location</code></p> <p>Ejemplo:</p> <pre><code>PS /home/julio&gt; Set-Location /\nPS /&gt;\n</code></pre> <p>Para la creaci\u00f3n de una carpeta se realiza con el comando <code>New-item</code>.</p> <p>Ejemplo:</p> <pre><code>PS /home/julio&gt; Set-Location /\nPS /&gt; Set-Location ~\nPS /home/julio&gt; New-Item -ItemType directory -Name TempPS\n\n\n    Directory: /home/julio\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\nd----           10/4/2024    12:02                TempPS\n\nPS /home/julio&gt;\n</code></pre> <p>En el anterior ejemplo cambiamos de localizaci\u00f3n y creamos un directorio.</p> <p>En el siguiente ejemplo vamos a eliminar todos los archivos .log contenidos en la carpeta C:\\Temp. Lo podemos hacer de distinta manera con o sin Pipe.</p> <pre><code>PS /home/julio&gt;  Remove-Item ~/temp/*.log\nPS /home/julio&gt;\n\n# o con tuber\u00edas.\n\n PS /home/julio&gt; Get-ChildItem ~/temp/* -Include *.txt -Recurse | Remove-Item\n</code></pre> <p>En el siguiente ejemplo vamos a mover los ficheros log de una carpeta a otra.</p> <pre><code>PS /home/julio/temp&gt; ls\narchivo.log\nPS /home/julio/temp&gt; Move-Item *.log ../\nPS /home/julio/temp&gt;\n</code></pre> <p>Hemos movidos desde la carpeta actual todos los archivos log ha la carpeta padre.</p> <p>El mismos procedimiento ser\u00eda con los directorios.</p> <p>Ahora vamos a renombrar el fichero log que tenemos de dos formas.</p> <pre><code>PS /home/julio/temp&gt;  Rename-Item -Path archivo.log -Newname archivo.txt\nPS /home/julio/temp&gt; ls\narchivo.txt\nPS /home/julio/temp&gt;\n#O\nRename-Item archivo.log  archivo.txt\n</code></pre> <p>Observa las dos formas. La primera tenemos dos modificadores o opciones y en la segunda no.</p> <p>Vamos a copiar archivos o carpetas.</p> <pre><code>PS /home/julio/temp&gt; Copy-Item ./archivo.txt /home/julio/tmp/\n# Copiamos un archivo\n#Ahora vamos a copiar una estructura completa\nPS /home/julio&gt; Copy-Item -Path ./temp -Destination ./tmp -Recurse\nPS /home/julio&gt; Get-ChildItem tmp\n\n\n    Directory: /home/julio/tmp\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\nd----           11/4/2024    11:18                temp\n-----           11/4/2024    11:10              0 archivo.txt\n-----            6/3/2024    17:39            237 equipos.txt\n\nPS /home/julio&gt; sl ./tmp/temp/\nPS /home/julio/tmp/temp&gt; dir\n\n\n    Directory: /home/julio/tmp/temp\n\nMode                 LastWriteTime         Length Name\n----                 -------------         ------ ----\nd----           11/4/2024    11:18                casa\n-----           11/4/2024    11:10              0 archivo.txt\n</code></pre>"},{"location":"UD2/Actividades/","title":"Actividades de la UD2","text":""},{"location":"UD2/Actividades/#actividad-1","title":"Actividad 1","text":"<ol> <li>Accede a Aules y realiza RELACI\u00d3N 3-I de ejercicios sobre tareas y procesos.</li> <li>Accede a Aules y realiza RELACI\u00d3N 3-II de ejercicios sobre instalaci\u00f3n.</li> <li>Accede a Aules y realiza RELACI\u00d3N 3-III de ejercicios sobre servicios</li> </ol>"},{"location":"UD2/Actividades/#actividad-2","title":"Actividad 2","text":"<ol> <li> <p>Ahora a instalar el programa Wine (Wine Is Not a Emulator). Se trata de un     emulador que permitir\u00e1 la ejecuci\u00f3n de software dise\u00f1ado para Microsoft     Windows en GNU/Linux. Para ello deberemos incluir una nueva fuente de datos     (repositorio). El nombre del repositorio lo encontraremos en su p\u00e1gina web     oficial, y es el siguiente: ppa:wine/wine-builds     \u00bfC\u00f3mo puedo consultar los repositorios de los que dispongo?. \u00bfC\u00f3mo puedo eliminar el repositorio de Wine de mi lista?.</p> </li> <li> <p>Deshabilita los siguientes servicios en Microsoft Windows10 Professional:</p> <ul> <li>servicio Informe de errores de Microsoft Windows</li> <li>servicio de seguimiento de diagn\u00f3sticos</li> <li>servicio Asistente para la compatibilidad de programas</li> <li>registro remoto</li> <li>servicios de Geolocalizaci\u00f3n</li> <li>administrador de mapas descargados</li> </ul> <p>Comprueba que los servicios no se arrancan una vez reiniciado el sistema haciendo capturas de los servicios modificados.</p> </li> <li> <p>Crea un contenedor de ubuntu LXC e instala ngix desde los repositorios \u00bfCu\u00e1l el nombre del servicio?. El servidor web se inicia durante el inicio del sistema de forma predeterminada y escucha en el puerto 80. Cambie la configuraci\u00f3n de <code>systemd</code> para este servicio para que no se inicie autom\u00e1ticamente durante el inicio del sistema. Reinicie el sistema y verifique que el servidor web no se haya iniciado</p> </li> <li> <p>En los sistemas operativos cliente, tanto con sistema operativo GNU/Linux como Microsoft Windows, programa la ejecuci\u00f3n de un comando (con crontab) que realice una copia de los ficheros situados en la carpetas Datos, situada en la primera partici\u00f3n del disco, a Respaldo, situada en la segunda (deber\u00e1s usar el comando <code>copy</code> y <code>cp</code>). Por ejemplo, la carpetas C:\\Datos se copiar\u00e1 a la carpeta D:\\Respaldo. Recuerda que en GNU/Linux se deber\u00e1 montar estos vol\u00famenes antes de hacer la copia (edita el fichero /etc/fstab para que se haga de forma autom\u00e1tica si no lo hiciste). La tarea ser\u00e1 programada para realizarse cada hora y con el usuario de mayores privilegios en el sistema. Recuerda que estos sistemas no ten\u00edan ninguna partici\u00f3n</p> </li> <li>En el sistema operativo cliente de linux, crea un directorio en el directorio personal que se llama <code>copia de seguridad</code>. Ahora tienes que crear con <code>systemd</code> una copia de seguridad de los archivos contenidos en <code>/var/log</code> que se agreguen a al archivo backup.tar.gz todos los d\u00edas (puede elegir la hora a la que esto ocurre diariamente). El archivo backup.tar.gz esta creado con el comando <code>tar</code>. Este comando empaqueta (tar) y comprime (gz) , busca ayuda en el manual.</li> <li> <p>Accede a las m\u00e1quinas virtuales que contienen los sistemas operativos de red y configura las actualizaciones para que se realicen de forma desatendida (tan s\u00f3lo las actualizaciones de seguridad). Recuerda que en Ubuntu Server ser\u00e1 necesario la instalaci\u00f3n de paquetes adicionales.</p> </li> <li> <p>Configura las entradas de registro de Microsoft Windows 10 Professional de este modo (recuerda realizar     capturas de pantalla antes y despu\u00e9s del cambio):</p> <ul> <li>deshabilita las notificaciones del Control de Cuentas de Usuario.</li> <li>agrega el programa notepad.exe al inicio de Microsoft Windows.</li> <li>cambiar la ubicaci\u00f3n predeterminada de las carpetas especiales en Microsoft Windows a la partici\u00f3n del disco duro donde no est\u00e9 instalado el sistema operativo (recuerda que durante el proceso de instalaci\u00f3n se crearon varias particiones en el disco).</li> <li>deshabilitar los dispositivos USB. Es una buena pr\u00e1ctica de seguridad.</li> </ul> <p>comprueba que los cambios han surtido efecto.</p> </li> </ol>"},{"location":"UD2/Actividades/#actividades-3-de-refuerzo","title":"ACTIVIDADES 3. De refuerzo","text":"<ol> <li> <p>Accede a Moodle y descarga en el escritorio de una m\u00e1quina cliente con Ubuntu Desktop la versi\u00f3n rpm de Mozilla Firefox. Ahora deber\u00e1s convertirla a un paquete deb con la aplicaci\u00f3n Alien. pare ello, sigue estos pasos:</p> <ul> <li>abre un terminal y accede al escritorio. Escribe el siguiente comando:   <code>sudo alien -d nombre_del_paquete.rpm</code>   \u00bfPor qu\u00e9 es necesario realizar esta conversi\u00f3n entre el formato de paquetes?</li> <li>una vez convertido, utiliza Alien para instalar el paquete con el comando:   <code>sudo alien -i nombre_del_paquete.deb</code>   \u00bfEs posible instalar este paquete de alguna otra forma?. \u00bfCu\u00e1les?.</li> </ul> </li> <li> <p>Utiliza el script que encontrar\u00e1s en Moodle para realizar esta tarea. Desc\u00e1rgalo en un cliente con Ubuntu Desktop y mu\u00e9velo a la carpeta /home del usuario actual. A\u00f1ade el permiso de ejecuci\u00f3n al usuario con el comando <code>chmod 777 script.sh</code>. Una vez modificado, programa una tarea a trav\u00e9s de los siguientes pasos:</p> <ul> <li>Abre el fichero de configuraci\u00f3n de programaci\u00f3n de tareas con el comando:   <code>sudo crontab -e</code></li> <li>a\u00f1ade al final del archivo el siguiente texto y guarda los cambios: <code>\\* \\* \\* \\* \\* ~/Escritorio/script.sh</code></li> <li>\u00bfQu\u00e9 significa cada uno de los asteriscos de esta configuraci\u00f3n?. Comprueba que el script funciona.</li> <li>modifica las l\u00edneas del fichero crontab para que esta tarea se ejecute todos los minutos de las horas comprendidas entre las 8 y las 20 de todos los d\u00edas del mes en curso, sea cual sea el d\u00eda de la semana</li> </ul> </li> </ol> <p>Manera de entrega de las actividades</p> <p>Redacta una gu\u00eda de los pasos a seguir para realizar esta actividad y s\u00fabela al Moodle del m\u00f3dulo.   De tal forma que en cada uno de los pasos incluya una imagen que verifique que se ha realizado aquello que se pide en cada uno de los ejercicios. Como en las anteriores actividades</p> <p>Warning</p> <p>SOLO LAS ACTIVIDADES 1,2 SON OBLIGATORIAS.</p>"},{"location":"UD2/GestiServicios/","title":"Gesti\u00f3n de los servicios y demonios","text":"<p>Para que el sistema operativo realice su trabajo, en ocasiones es necesario que disponga de programas que se ejecutan en segundo plano gestionando un recurso. Estos programas, conocidos como servicios o demonios en el entorno GNU/Linux, se mantienen a la espera a que alg\u00fan proceso solicite uno de los servicios que ofrece. Por ejemplo, el servicio de red se sit\u00faa entre la NIC y el proceso que necesite salir a Internet. En la mayor\u00eda de ocasiones, estos programas se ejecutan durante la carga del sistema operativo y son fundamentales para la gesti\u00f3n de los recursos que ofrece el sistema operativo, ya sean hardware o software.</p> <p>Los sistemas operativos de Microsoft disponen de una herramienta gr\u00e1fica para la gesti\u00f3n de los servicios. Se accede a ella en Inicio  \u2192 Herramientas administrativas \u2192 Servicios o escribiendo la palabra servicio en el buscador.</p> <p></p> <p>Cada uno de estos servicios puede configurarse de cuatro formas diferentes:</p> <ul> <li>Deshabilitado, no es posible iniciar el servicio a trav\u00e9s de otro servicio</li> <li>Manual, no se inicia con el sistema, debe ser arrancado de forma manual</li> <li>Autom\u00e1tico, se inicia durante el proceso de arranque del sistema.</li> <li>Autom\u00e1tico (inicio retrasado), se inicia despu\u00e9s de que todos los servicios del sistema se hayan cargado en memoria principal.</li> </ul> <p>A trav\u00e9s de esta herramienta ser\u00e1 posible controlar el estado del servicio, el fichero ejecutable que lo inicia, sus dependencias si las tuviera o qu\u00e9 acciones hay que realizar si el servicio fallase durante su inicio.</p> <p>Adem\u00e1s de este completo software, Microsoft Windows 10 Professional dispone de una utilidad para la gesti\u00f3n de los servicios de inicio retrasado, aquellos que se inician cuando todos los servicios del sistema han sido cargados en memoria principal. Estos servicios suelen estar asociados a software instalado con posterioridad al sistema y que ejecutan una tarea muy espec\u00edfica. A trav\u00e9s de la pesta\u00f1a Inicio de la herramienta Administrador de tareas se controlan este tipo de servicios, aunque tambi\u00e9n es posible realizar esta configuraci\u00f3n desde la herramienta anterior.</p> <p></p> <p></p> <p>En los sistemas operativos basados en GNU/Linux se dispone de varias herramientas basadas en CLI para realizar la administraci\u00f3n de servicios, denominados demonios en terminolog\u00eda Unix. Cuando se configura un demonio en GNU/Linux se crean scripts para controlar su carga y descarga de memoria principal.</p> <p>Hay diferentes sistemas de arranque seg\u00fan la distribuci\u00f3n , como init System V, upstart y el sistema de arranque de Mac OS X , pero systemd es que se est\u00e1 imponiendo en todas ellas.</p> <p>En systemd, el concepto de nivel de ejecuci\u00f3n ya s\u00f3lo existe para la compatibilidad con System V. Es decir los servicios se inicien de forma autom\u00e1tica durante el arranque del sistema. Seg\u00fan el nivel se arrancan unos servicios o otros.</p>"},{"location":"UD2/GestiServicios/#unidades-objetivo-y-servicios","title":"Unidades objetivo y servicios","text":"<p>El componente b\u00e1sico de systemd es la unidad o unit. Existen varias: servicios, sockets, perif\u00e9ricos, objetivos, etc. Un objetivo es b\u00e1sicamente el punto de sincronizaci\u00f3n entre unidades en espera. De este modo, dispondr\u00e1, por ejemplo, de unidades objetivo correspondientes a cada nivel de ejecuci\u00f3n, pero puede llamarlas como quieras.</p> <p>Las objetivos o los servicios que deben ser gestionados por el sistema durante el arranque est\u00e1n en <code>/etc/system/system</code>, en forma de enlaces simb\u00f3licos o copias. Que se encuentran en <code>/lib/systemd/system</code></p> <p>Los servicios acaban con el sufijo .service. Vamos a ver el contenidos de estos ficheros:</p> contenido de ficheros.service<pre><code>/etc/systemd/system$ cat syslog.service\n[Unit]\nDescription=System Logging Service\nRequires=syslog.socket\nDocumentation=man:rsyslogd(8)\nDocumentation=https://www.rsyslog.com/doc/\n\n[Service]\nType=notify\nExecStart=/usr/sbin/rsyslogd -n -iNONE\nStandardOutput=null\nRestart=on-failure\n\n# Increase the default a bit in order to allow many simultaneous\n# files to be monitored, we might need a lot of fds.\nLimitNOFILE=16384\n\n[Install]\nWantedBy=multi-user.target\nAlias=syslog.service\n</code></pre> <p>Si nos fijamos en la linea que tiene de WantedBy. Sirve para indicar que este servicio es necesario para el objetivo multi-user.target (lo que correspondr\u00e1 por ejemplo al nivel 3 del init System V)</p> <p>Ahora vamos a ver el fichero .target de un objetivo.</p> Fichero .target<pre><code>cat poweroff.target\n#  SPDX-License-Identifier: LGPL-2.1+\n#\n#  This file is part of systemd.\n#\n#  systemd is free software; you can redistribute it and/or modify it\n#  under the terms of the GNU Lesser General Public License as published by\n#  the Free Software Foundation; either version 2.1 of the License, or\n#  (at your option) any later version.\n\n[Unit]\nDescription=Power-Off\nDocumentation=man:systemd.special(7)\nDefaultDependencies=no\nRequires=systemd-poweroff.service\nAfter=systemd-poweroff.service\nAllowIsolate=yes\nJobTimeoutSec=30min\nJobTimeoutAction=poweroff-force\n\n[Install]\nAlias=ctrl-alt-del.target\n</code></pre> <p>Nos fijamos en Requires y After. En este objetivo requiere (Requires) de un servicio en concreto y su ejecuci\u00f3n despu\u00e9s de la unidad que pone (After).</p>"},{"location":"UD2/GestiServicios/#acciones","title":"Acciones","text":"<p>El comando <code>systemctl</code> permite controlar la ejecuci\u00f3n de servicios.</p> Ejemplo, listado de unidades<pre><code>systemctl\n  UNIT                                                                                      LOAD   ACTIVE     SUB       JOB   DESCRIPTION                    &gt;\n  proc-sys-fs-binfmt_misc.automount                                                         loaded active     running         Arbitrary Executable File Forma&gt;\n  sys-bus-pci-drivers-nvidia.device                                                         loaded active     plugged         /sys/bus/pci/drivers/nvidia    &gt;\n  sys-devices-pci0000:00-0000:00:02.0-drm-card0-card0\\x2deDP\\x2d1-intel_backlight.device    loaded active     plugged         /sys/devices/pci0000:00/0000:00&gt;\n  sys-devices-pci0000:00-0000:00:14.0-usb1-1\\x2d14-1\\x2d14:1.0-bluetooth-hci0.device        loaded active     plugged         /sys/devices/pci0000:00/0000:00&gt;\n  sys-devices-pci0000:00-0000:00:14.3-net-wlp0s20f3.device\n</code></pre> Ejemplo, acciones de systemctl<pre><code>Parada y reinicio de unidades\n#\n systemctl\n stop cups.service\n#\n systemctl\n start cups.service\n#\n systemctl\n restart cups.service\n#\n systemctl\n reload cups.service\n</code></pre> <p>El siguiente comando indica cu\u00e1les son las unidades objetivo activas:</p> Ejemplo, unidades target<pre><code>systemctl list-units --type=target\n  UNIT                    LOAD   ACTIVE   SUB    JOB   DESCRIPTION\n  basic.target            loaded active   active       Basic System\n  bluetooth.target        loaded active   active       Bluetooth\n  cryptsetup.target       loaded active   active       Local Encrypted Volumes\n  getty-pre.target        loaded active   active       Login Prompts (Pre)\n  getty.target            loaded active   active       Login Prompts\n  graphical.target        loaded inactive dead   start Graphical Interface\n  local-fs-pre.target     loaded active   active       Local File Systems (Pre)\n  local-fs.target         loaded active   active       Local File Systems\n  multi-user.target       loaded inactive dead   start Multi-User System\n  network-online.target   loaded active   active       Network is Online\n  network.target          loaded active   active       Network\n  nss-lookup.target       loaded active   active       Host and Network Name Lookups\n  nss-user-lookup.target  loaded active   active       User and Group Name Lookups\n  paths.target            loaded active   active       Paths\n  remote-fs.target        loaded active   active       Remote File Systems\n  slices.target           loaded active   active       Slices\n  snapd.mounts-pre.target loaded active   active       Mounting snaps\n  snapd.mounts.target     loaded active   active       Mounted snaps\n  sockets.target          loaded active   active       Sockets\n  sound.target            loaded active   active       Sound Card\n  swap.target             loaded active   active       Swap\n  sysinit.target          loaded active   active       System Initialization\n  time-set.target         loaded active   active       System Time Set\n  time-sync.target        loaded active   active       System Time Synchronized\n  timers.target           loaded active   active       Timers\n\nLOAD   = Reflects whether the unit definition was properly loaded.\nACTIVE = The high-level unit activation state, i.e. generalization of SUB.\nSUB    = The low-level unit activation state, values depend on unit type.\nJOB    = Pending job for the unit.\n\n25 loaded units listed. Pass --all to see loaded but inactive units, too.\nTo show all installed unit files use 'systemctl list-unit-files'.\n</code></pre>"},{"location":"UD2/InstaLinux/","title":"InstaLinux","text":""},{"location":"UD2/InstaLinux/#instalaciondesinstalacion-de-software-en-gnulinux","title":"Instalaci\u00f3n/desinstalaci\u00f3n de software en GNU/Linux","text":"<p>Los sistemas basados en GNU/Linux tambi\u00e9n disponen de varias formas de administrar software; desde repositorios a trav\u00e9s de Internet, desde los gestores de aplicaciones de cada distribuci\u00f3n (muy parecidas a la Tienda de Microsoft) o directamente desde un paquete de instalaci\u00f3n.</p> <p>Al contrario que en Microsoft Windows, en las distribuciones basadas en GNU/Linux el software se distribuye en paquetes. Se debe tener en cuenta que los paquetes son dependientes de la distribuci\u00f3n en la que se est\u00e9n usando. Actualmente existen dos grandes conjuntos de paquetes, aunque tambi\u00e9n existen distribuciones que poseen su propio sistema de paquetes:</p> <ul> <li>deb (nombre proviene de Deborah Murdock, ex-esposa del fundador de la distribuci\u00f3n Debian Ian Murdock), contiene todos los ficheros de un paquete preparado para ejecutarse en las distribuciones basadas en Debian, como por ejemplo Ubuntu, Kubuntu, Linux Mint o ZorisOS entre otras. Este tipo de paquetes posee la particularidad de carecer de actualizaci\u00f3n. Si existe una revisi\u00f3n de una aplicaci\u00f3n, se instalar\u00e1n todos los paquetes que la componen, y no tan solo los modificados.</li> <li>rpm (Redhat Package Manager), son paquetes que se usan en las distribuciones Red Hat, Fedora y OpenSUSE entre otras. Este sistema de paqueter\u00eda no tiene el problema de actualizaci\u00f3n, y no es necesario la inclusi\u00f3n de los paquetes que no han sido modificados. Esto genera ficheros de menor tama\u00f1o.</li> <li>Ebuild, paquete usado exclusivamente por la distribuci\u00f3n Gentoo y contiene un script ejecutable.</li> </ul> <p>A pesar de la incompatibilidad entre ellos, existen herramientas para convertir entre los diferentes tipos de paquetes, como Alien Package Converter. En la mayor\u00eda de los casos los desarrolladores de software ofrecen sus programas contenidos en varios tipos de paquetes.</p> <p>En los sistemas basados en GNU/Linux, los programas se comportan como portables, lo que permite al sistema operativo no acarrear con carga extra que no sea la suya propia.</p> <p>Aunque esta t\u00e9cnica resulta m\u00e1s econ\u00f3mica en cuanto a recursos del sistema operativo y memoria principal, no lo es con la memoria secundaria ya que tiene que contener m\u00e1s informaci\u00f3n, a veces informaci\u00f3n duplicada en varios de estos programas.</p> <p>Algo que hay que tener en cuenta en el software que acompa\u00f1a a GNU/Linux son las dependencias. Hay aplicaciones que utilizan a otras como punto de partida para su desarrollo o parte de ellos. Esto provoca que la segunda dependa de la primera y para que pueda funcionar sea necesario instalar la primera. Eso se gestiona a trav\u00e9s de los paquetes de software, un concepto que no existe en sistemas operativos de Microsoft. Un programa est\u00e1 compuesto por uno o varios de estos paquetes, y para que la aplicaci\u00f3n sea funcional, todos los paquetes que componen una aplicaci\u00f3n deben estar instaladas. A esta circunstancia hace referencia las dependencias.</p> <p>Afortunadamente, se dispone de instaladores que resuelven estas dependencias de paquetes por s\u00ed solas, siendo el usuario un mero espectador en la instalaci\u00f3n.</p> <p></p> <p>Son los gestores de paquetes y cada distribuci\u00f3n posee una distinta. Los gestores obtienen los programas desde los repositorios instalados en el sistema operativo. Estos repositorios son conjuntos de aplicaciones a los que se puede acceder a trav\u00e9s de Internet. Tan s\u00f3lo tendremos que buscar el software necesario y proceder con su instalaci\u00f3n.</p> <p>Los repositorios que GNU/Linux utiliza se configuran a trav\u00e9s de PPA (Personal Package Archive) los cuales permiten a los desarrolladores distribuir software sin necesidad de esperar a que se actualicen los propios de cada distribuci\u00f3n. Existen dos formas de a\u00f1adir uno del que descargar software:</p> <ul> <li>en modo GUI (Guide User Interface) a trav\u00e9s del Gestor de Paquetes a\u00f1adiendo el nuevo repositorio en Origenes de software.</li> <li>en modo CLI (Command Line Interface) con la aplicaci\u00f3n apt-get.</li> </ul> <p>Se centrar\u00e1 la explicaci\u00f3n en la segunda forma ya que la primera es autoexplicativa.</p> <p><code>apt-get</code> es un sistema de gesti\u00f3n de software basado en CLI pero que utiliza repositorios de software en l\u00ednea para descargar e instalar programas. Resulta muy sencillo la gesti\u00f3n del software con esta aplicaci\u00f3n ya que no s\u00f3lo es posible su instalaci\u00f3n/desinstalaci\u00f3n, sino que tambi\u00e9n es posible mantener actualizado todos los programas con una sola orden en el terminal. Adem\u00e1s, permite actualizar el sistema operativo con la misma facilidad. Hay que recordar que apt-get modifica el sistema, por lo que ser\u00e1 necesario ejecutarlo con permisos de administrador a trav\u00e9s del comando sudo.</p> <p>Este programa se usa de una forma muy intuitiva</p> Sintaxis de apt-get<pre><code> apt-get &lt;opciones&gt; acci\u00f3n &lt;paquete1&gt; [&lt;paquete2&gt;... &lt;paquete N&gt;]\n</code></pre> <p>En donde algunas de las opciones m\u00e1s importantes son:</p> <ul> <li><code>-s</code> simula una acci\u00f3n</li> <li><code>-d</code> s\u00f3lo descarga</li> <li><code>-y</code> no pregunta al usuario y asume que s\u00ed a todas las preguntas</li> <li><code>-f</code> intenta continuar si las dependencias fallan</li> <li><code>-m</code> intenta continuar si los archivos no son localizables</li> <li><code>-b</code> construye el paquete fuente despu\u00e9s de obtenerlo</li> <li><code>-V</code> muestra n\u00fameros de versi\u00f3n detallados</li> <li><code>-q</code> realiza una instalaci\u00f3n sin mostrar ning\u00fan mensaje en pantalla</li> <li><code>-u</code> muestra los paquetes a actualizar</li> </ul> <p>Y las acciones que es posible realizar son:</p> <ul> <li><code>update</code> actualiza el \u00edndice de paquetes listados en los repositorios</li> <li><code>upgrade</code> actualiza el software m\u00e1s reciente en los repositorios</li> <li><code>install</code> instala la aplicaci\u00f3n o aplicaciones especificadas</li> <li><code>remove</code> desinstala los paquetes especificados</li> <li><code>purge</code> desinstala y elimina cualquier configuraci\u00f3n de usuario</li> <li><code>build</code>-dep satisface las dependencias del paquete al instalarlo</li> <li><code>download</code> descarga el paquete en el directorio actual</li> </ul> <p>El uso del comando es sencillo e intuitivo. Por ejemplo, para instalar un paquete</p> Ejemplo de apt-get<pre><code>apt-get install libreoffice-base\n</code></pre> <p>o para desinstalar un paquete determinado. Si queremos quitar tambi\u00e9n su configuraci\u00f3n se utiliza la accion <code>purge</code></p> Ejemplo de apt-get<pre><code>apt-get remove chrome\n</code></pre> <p>Los repositorios que usa esta aplicaci\u00f3n se encuentran en un fichero ubicado en /etc/apt/sources.list. El directorio /etc/apt/sources.list.d ofrece una manera de a\u00f1adir entradas de \u00absources.list\u00bb en ficheros separados.</p> <p>Cuando <code>apt-get</code> recibe una orden de instalaci\u00f3n, buscar el nombre del programa entre los repositorios y pregunta al usuario si lo desea instalar. Una de las problemas que posee esta aplicaci\u00f3n es que se debe conocer el nombre exacto de la aplicaci\u00f3n, esto depende del nombre que el desarrollador haya utilizado, y a veces suelen complicar estos nombres de forma innecesaria.</p> <p>Si se conoce parte del nombre, es posible buscar entre todos los repositorios los paquetes que lo contengan usando este comando</p> Ejemplo de apt-cache<pre><code>apt-cache search firefox\n</code></pre> <p>Cada distribuci\u00f3n de GNU/Linux posee un repositorio, pero existe la posibilidad de a\u00f1adir un repositorio personal de cualquier desarrollador. Para esta tarea se usar\u00e1 el siguiente comando</p> Ejemplo de  add-apt-repository<pre><code>add-apt-repository ppa:danielrichter2007/grub-customizer\n</code></pre> <p>Con esta instrucci\u00f3n se a\u00f1ade el repositorio a la lista. Cuando se necesite la instalaci\u00f3n de un software al programa de instalaci\u00f3n buscar\u00e1, adem\u00e1s, tambi\u00e9n en este repositorio. Si lo que se necesita es eliminar un repositorio, se usar\u00e1 la opci\u00f3n <code>\u2013-remove</code> de la siguiente manera</p> Ejemplo de  add-apt-repository<pre><code>add-apt-repository --remove ppa:danielrichter2007/grub-customizer\n</code></pre> <p>Al final de cualquiera de estas instrucciones es conveniente actualizar la informaci\u00f3n de los repositorios</p> Actualizaci\u00f3n de los paquetes disponibles<pre><code>sudo apt-get update\n</code></pre> <p><code>apt</code> no es s\u00f3lo un comando, sino un conjunto de aplicaciones que permiten la gesti\u00f3n del software de forma eficaz. As\u00ed <code>apt-file</code> permite buscar un determinado fichero entre los paquetes del repositorio, <code>apt-cache</code> que gestiona la informaci\u00f3n contenida en la base de datos interna de apt, o apt-show usado para mostrar toda la informaci\u00f3n de los paquetes instalados.</p> <p>Adem\u00e1s de estos dos modos, GNU/Linux dispone de una tercera forma de instalaci\u00f3n que se realiza a trav\u00e9s de un paquete de software descargado, por lo que no ser\u00e1 necesario la conexi\u00f3n a Internet. Esto se realiza con la aplicaci\u00f3n <code>dpkg</code>, y al igual que ocurre con apt no se trata s\u00f3lo de un comando, sino de una serie de aplicaciones que conviene conocer, aunque no sea el prop\u00f3sito de este manual. El uso de <code>dpkg</code> es realmente sencillo</p> Sintaxis de dpkg<pre><code>dpkg &lt;opciones&gt; &lt;acci\u00f3n&gt; &lt;fichero-paquete&gt;\n</code></pre> <p>Las acciones que son posibles a trav\u00e9s de este comando son:</p> <ul> <li><code>-i</code> instalar un paquete</li> <li><code>-r</code> elimina el paquete pero deja intacta la configuraci\u00f3n</li> <li><code>-P</code> elimina el paquete y la configuraci\u00f3n de usuario</li> <li><code>-l</code> muestra los paquetes instalados coincidentes con el patr\u00f3n</li> </ul> <p>De este modo, para instalar un programa usamos el comando <code>dpkg</code> de la siguiente manera:</p> Ejemplo de dpkg<pre><code>  dpkg -i nombre-paquete.deb\n</code></pre> <p>Para desinstalar un paquete</p> Ejemplo de dpkg<pre><code>dpkg -r nombre-paquete.deb\n</code></pre> <p>Pero tambi\u00e9n podremos consultar el software instalado en nuestro sistema de la siguiente forma</p> Ejemplo de dpkg<pre><code>dpkg -l\n</code></pre> <p>Este comando genera un listado debidamente formateado en columnas que indicar\u00e1n el estado del programa (si est\u00e1 instalado o requiere de alguna acci\u00f3n a\u00f1adida), el nombre, la versi\u00f3n, la arquitectura y una breve descripci\u00f3n del mismo.</p>"},{"location":"UD2/InstaWindow/","title":"InstaWindow","text":"<p>Instalaci\u00f3n/desinstalaci\u00f3n de aplicaciones en Microsoft Windows</p> <p>La instalaci\u00f3n y desinstalaci\u00f3n de programas en los sistemas operativos Microsoft Windows no presenta misterio alguno, debido a que la mayor\u00eda vienen acompa\u00f1adas de un asistente que dirige los pasos del usuario a trav\u00e9s del proceso. En numerosas ocasiones, los programas cuentan con un desinstalador que lanza otro asistente para la eliminaci\u00f3n del software. Si no es as\u00ed, Microsoft Windows cuenta con la utilidad Configuraci\u00f3n \u2192 Aplicaciones, la cual permite la desinstalaci\u00f3n de software.  Otro m\u00e9todo implementado en la versi\u00f3n de Microsoft Windows 10 es la instalaci\u00f3n de aplicaciones integradas en la Tienda de Microsoft. Esta nueva opci\u00f3n permite la descarga e instalaci\u00f3n autom\u00e1tica de aplicaciones en cualquier dispositivo conectado a trav\u00e9s de una cuenta de Microsoft.</p> <p>Hay que tener en cuenta el modo de instalaci\u00f3n de estas aplicaciones que, en general, cualquier sistema operativo de Microsoft lo realiza en tres pasos:</p> <ul> <li>copia los archivos del software a la carpeta indicada por el usuario.</li> <li>introduce en el registro informaci\u00f3n necesaria para el correcto funcionamiento de la aplicaci\u00f3n. Informaci\u00f3n como el origen del software, la versi\u00f3n, ubicaci\u00f3n de los accesos directos en los diferentes men\u00fas de Microsoft Windows 10 entre otra.</li> <li>registra los archivos DLL (Dinamic Library Link) que la aplicaci\u00f3n debe utilizar.</li> </ul> <p>Cuando se instala una aplicaci\u00f3n en Microsoft Windows 10 queda \u201cligada\u201d al sistema y no es posible copiar la carpeta de instalaci\u00f3n y llevarla a otro equipo, ya que necesitar\u00eda el resto informaci\u00f3n contenida en el registro o ficheros DLL espec\u00edficos.</p> <p>Desde hace alg\u00fan tiempo existe una tendencia a crear aplicaciones desvinculadas del sistema operativo, conteniendo toda la informaci\u00f3n necesaria en la carpeta en la que se ubica el programa. Son los denominados programas portables y muchos de ellos usan tecnolog\u00eda de virtualizaci\u00f3n para emular ciertas caracter\u00edsticas del sistema operativo, pero sin interferir en \u00e9l.</p>"},{"location":"UD2/actuSisOp/","title":"Actualizaci\u00f3n de sistemas operativos. Parches de seguridad","text":"<p>Mantener al d\u00eda el software del sistema inform\u00e1tico es fundamental para su buen funcionamiento y seguridad. Es evidente que no todo el software tiene la misma prioridad y son los sistemas operativos lo que deben ir por delante en cuestiones de actualizaci\u00f3n.</p> <p>Las tareas de actualizaci\u00f3n y seguridad son similares en ambos tipos de sistemas operativos, pero se prestar\u00e1 especial atenci\u00f3n a los SOR.</p> <p>En la familia de Windows todos los sistemas operativos poseen una herramienta que los mantiene actualizados y esa es Windows Update. Se accede a ella a trav\u00e9s de Configuraci\u00f3n \u2192 Sistema \u2192 Actualizaci\u00f3n y Seguridad \u2192 Windows Update y desde all\u00ed se pueden activar las actualizaciones autom\u00e1ticas, configurar qu\u00e9 actualizaciones se deben instalar, a qu\u00e9 hora y la opciones de reinicio si fuese necesario. </p> <p>Hay que tener en cuenta que un SOR no se puede reiniciar a la ligera, ya que de \u00e9l depende el buen funcionamiento del sistema inform\u00e1tico. Es conveniente que exista un servidor de backup que recoja el testigo en cuanto el principal se reinicie, o realizar esta parada en un horario poco sensible.</p> <p>Con m\u00e1s o menos diferencias, todas las versiones modernas de los sistemas operativos de Microsoft tienen habilitada esta caracter\u00edstica por defecto. Es conveniente revisar la configuraci\u00f3n de estas actualizaciones para dar prioridad a las que Microsoft cataloga como cr\u00edticas ante cualesquieras otras.</p> <p>En Ubuntu Server tambi\u00e9n se dispone de una herramienta similar a \u00e9sta pero que se gestiona a trav\u00e9s del terminal. Una vez m\u00e1s se deber\u00e1 acceder a un fichero de texto y modificarlo. Este fichero es <code>/etc/apt/apt.d.conf.d/10perodic</code> y tendr\u00e1 el siguiente contenido:</p> Contenido del fichero 10periodic<pre><code>APT::Periodic::Update-Package-Lists \u201c1\u201d;\nAPT::Periodic::Download-Upgradeable-Packages \u201c0\u201d;\nAPT::Periodic::AutocleanInterval \u201c7\u201d;\n</code></pre> <p>Para activar las actualizaciones autom\u00e1ticas ser\u00e1 necesario modificar la l\u00ednea <code>APT::Periodic::Download-Upgradeable-Packages</code> cambiando el 0 por un 1. Con esto se activar\u00e1n las actualizaciones autom\u00e1ticas en Ubuntu Server.</p> <p>Pero esta configuraci\u00f3n descargar\u00e1 todos los paquetes disponibles en el repositorio de Ubuntu, y tal vez no sea buena idea colapsar al servidor con actualizaciones de escaso inter\u00e9s. Existe una aplicaci\u00f3n que permite seleccionar las actualizaciones que son necesarias instalar y cuales no. Es necesario instalar la aplicaci\u00f3n unattended-upgrades</p> Instalaci\u00f3n de unattended-upgrades<pre><code>sudo apt-get install unattended-upgrades\n</code></pre> <p>Tras la instalaci\u00f3n se dispondr\u00e1 de un nuevo fichero de configuraci\u00f3n que permitir\u00e1 administrar los repositorios desde los cuales se van a recibir actualizaciones as\u00ed como los paquetes que es necesario instalar. A estos \u00faltimos se los denomina Blacklist (lista negra). Se dispondr\u00e1 por tanto de gran flexibilidad para determinar qu\u00e9 paquetes y de d\u00f3nde se deben instalar de forma desatendida. Aparece este fichero <code>/etc/apt/apt.conf.d/50unattended-upgrades</code>, el cual contiene, entre otro, el siguiente texto:</p> Contenido del fichero de configuraci\u00f3n<pre><code>// Automatically upgrade packages from these (origin:archive) pairs\nUnattended-Upgrade::Allowed-Origins {\n\u201c${distro_id}:${distro_codename}-security\u201d;\n// \u201c${distro_id}:${distro_codename}-updates\u201d;\n// \u201c${distro_id}:${distro_codename}-proposed\u201d;\n// \u201c${distro_id}:${distro_codename}-backports\u201d;\n};\n</code></pre> <p>Estas l\u00edneas hacen referencia a diferentes tipos de actualizaciones. Para descargar e instalar de forma desatendida alguno de estos tipos de actualizaciones, bastar\u00e1 con descomentar la l\u00ednea eliminando la doble barra al inicio de la misma.</p> <p>Tanto <code>${distro_id} como ${distro_codename}</code> son variables de entorno del sistema Ubuntu de esta forma se crea un \u00fanico fichero de configuraci\u00f3n para cualquier versi\u00f3n del kernel.</p> <p>Es buena pr\u00e1ctica instalar por defecto todas las actualizaciones que los desarrolladores del sistema operativo marquen como de seguridad o cr\u00edticas, dejando a la elecci\u00f3n del administrador del sistema inform\u00e1tico el resto de actualizaciones.</p>"},{"location":"UD2/documeConfigSistema/","title":"Documentaci\u00f3n de la configuraci\u00f3n del sistema inform\u00e1tico","text":"<p>Al igual que cuando se programa es habitual olvidar comentar el c\u00f3digo, uno de los aspectos que m\u00e1s se descuidan cuando se procede a implantar un sistema inform\u00e1tico es la documentaci\u00f3n del proceso y configuraci\u00f3n del mismo. No es ocioso encarecer que un SOR es algo vivo que ir\u00e1 creciendo y adapt\u00e1ndose a las necesidades del entorno en el que se encuentra. Cuanto m\u00e1s precisa sea la documentaci\u00f3n que se genere, menos problemas existir\u00e1n para retomar el trabajo de instalaci\u00f3n o configuraci\u00f3n un tiempo despu\u00e9s de haberlo dado por concluido.</p> <p>En este sentido, una de las primeras cuestiones que hay que resolver es la nomenclatura. Es buena idea asignar a cada equipo de nuestra red un identificativo \u00fanico que puede estar relacionado con la funci\u00f3n que realiza, su ubicaci\u00f3n dentro de la empresa, \u00e1rea en la que se emplea o ambas. El objetivo es poder referirnos a cada elemento de la red de una forma abreviada y c\u00f3moda.</p> <p>Una vez identificados los equipos y resto del hardware del sistema (impresoras, dispositivos de interconexi\u00f3n, esc\u00e1neres, c\u00e1maras, etc\u00e9tera), es buena idea disponer de un documento con el perfil de la instalaci\u00f3n para cada uno de los equipos incluidos en el sistema. En esta documentaci\u00f3n deber\u00eda constar, adem\u00e1s del identificador, los siguientes datos:</p> <ul> <li>datos de hardware, su ubicaci\u00f3n dentro del sistema, funci\u00f3n, el tipo de procesador que incorpora, el tipo y cantidad de memoria principal y secundaria, tarjeta de red, tarjeta gr\u00e1fica. Es buena pr\u00e1ctica reflejar los dispositivos conectados al equipo, como impresoras y esc\u00e1neres entre otros.</li> <li>descripci\u00f3n del sistema operativo, que incluir\u00e1 su nombre y versi\u00f3n, la fecha y la hora de instalaci\u00f3n, el usuario que act\u00faa como administrador y su contrase\u00f1a y las licencias instaladas en \u00e9l. Cuando el sistema inform\u00e1tico utiliza sistemas operativos privativos es de vital importancia, sobre todo para posteriores operaciones de actualizaci\u00f3n, la clave de producto. Se trata de la secuencia de n\u00fameros y letras, normalmente organizadas en grupos y separadas por guiones, que suele venir adherida al embalaje del medio de almacenamiento en el que se distribuye el producto.</li> <li>parches y actualizaciones de los sistemas operativos, especialmente en los de Microsoft Windows. Es buena praxis incluir la fecha de la instalaci\u00f3n y una descripci\u00f3n de su objetivo.</li> <li>configuraci\u00f3n de la red, aunque lo m\u00e1s probable es que se trabaje con un servicio DHCP, es buena idea registrar tambi\u00e9n los datos que conforman la red en la que est\u00e1 inmerso el equipo, especialmente si existen subredes: IP del equipo, m\u00e1scara de subred, puerta de enlace, el servidor DNS, el nombre del dominio y subdominio en el que se integra el equipo.</li> <li>software instalado, informaci\u00f3n \u00fatil para comprobar si las versiones que se usan en el sistema se encuentran actualizadas o si, por el contrario, es necesario desactualizarlas. En ciertos ambientes mantener el software a la \u00faltima versi\u00f3n no es conveniente.</li> </ul> <p>El modo de almacenar y obtener toda esta informaci\u00f3n debe permitir la actualizaci\u00f3n de los datos de una forma \u00f3ptima, eso, por supuesto, descarta la opci\u00f3n de disponer de este documento impreso en papel. Es conveniente toda la informaci\u00f3n de la implementaci\u00f3n est\u00e9 contenida en una base de datos de f\u00e1cil y r\u00e1pido acceso. Existen numerosas aplicaciones tanto para sistemas operativos de Microsoft como de GNU/Linux que permiten la recolecci\u00f3n y administraci\u00f3n de esta informaci\u00f3n como Network Inventory Advisor, Spiceworks Inventory, Open-Audit o GLPI. Todas ellas trabajan utilizando el modelo cliente-servidor implementado en la red. De este modo se instala una aplicaci\u00f3n servidor encargada de recolectar la informaci\u00f3n de forma centralizada, junto con una aplicaci\u00f3n cliente en cada ordenador del sistema.</p> <p>A pesar de contar con estas aplicaciones, los sistemas operativos poseen herramientas para la recolecci\u00f3n de datos, aunque no se comportan de forma tan eficiente. En Microsoft Windows se dispone de la herramienta de diagn\u00f3stico de DirectX denominada dxdialog, la cual muestra toda esta informaci\u00f3n por pantalla.</p> <p>En GNU/Linux se dispone de varias herramientas que, a trav\u00e9s del terminal ofrecen la informaci\u00f3n detallada del sistema. Comandos como <code>uname, who, ifconfig, df, top, fdisk, apt, hwinfo, mount o free</code> son s\u00f3lo algunos. Como administradores es buena pr\u00e1ctica realizar informes peri\u00f3dicos del estado del sistema con estos comandos. Lo ideal es que se programe un shellscript que genere un informe con esta documentaci\u00f3n del sistema, actividad que se tratar\u00e1 en lo sucesivo.</p> <p>Es necesario, por tanto, recopilar, guardar y actualizar la informaci\u00f3n de un sistema inform\u00e1tico para poder diagnosticar de manera precisa en estado del mismo y que acciones son necesarias para su mantenimiento. Hay que tener muy presente que un sistema operativo es un ente vivo que cambia con cada inicio.</p> <p></p>"},{"location":"UD2/procesosLinux/","title":"Los procesos","text":"<p>Un proceso representa un programa en curso de ejecuci\u00f3n y, al mismo tiempo, todo su entorno de ejecuci\u00f3n (memoria, estado, identificaci\u00f3n, propietario, padre...).</p> <p>El entorno viene marcado por:</p> <ul> <li>Un n\u00famero de proceso \u00fanico PID (Process ID)</li> <li>Un n\u00famero de proceso padre PID (Parent Process ID). Todos los procesos tienen un PPID salvo el proceso 0, que es un seudoproceso que representa el inicio del sistema (crea el 1 init).</li> <li>Un n\u00famero de usuario y uno de grupo: corresponde al UID y al GID de la cuenta de usuario que inicia el proceso.</li> <li>Duraci\u00f3n y prioridad del proceso. No todos los procesos tienen la misma prioridad para ser ejecutados por el procesador.</li> <li>Directorio de Trabajo. . desde que directorio se ha lanzado el proceso.</li> <li>Archivos abiertos por el proceso.</li> </ul> <p>Un proceso pasa por distintos estados durante la ejecuci\u00f3n del mismo:</p> <ul> <li>en espera E/S (waiting)</li> <li>dormido (sleeping)</li> <li>listo para la ejecuci\u00f3n (runnable)</li> <li>dormido en el swap (memoria virtual)</li> <li>nuevo proceso</li> <li>fin de proceso</li> <li>(zombie). Cuando un padre termina sus hijos terminan. Pero, cuando algunos de sus hijos queda ejecut\u00e1ndose y su padre termina se le denomina de esa manera.</li> </ul> <p>Adem\u00e1s se pueden ejecutar de dos formas:</p> <ul> <li>ejecuci\u00f3n en modo usuario (user mode)</li> <li>ejecuci\u00f3n en modo n\u00facleo (kernel mode)</li> </ul>"},{"location":"UD2/procesosLinux/#ejecucion-en-segundo-plano","title":"Ejecuci\u00f3n en segundo plano.","text":"<p>En entornos multitarea hay muchos procesos en ejecuci\u00f3n o un estado que hemos comentado anteriormente. El shell es un programa que provoca un proceso y cuando se ejecuta alg\u00fan comando se produce un proceso hijo. Hasta que no termine el este proceso no se puede ejecutar otro. Pero, este comportamiento lo podemos cambiar mediante el <code>&amp;</code>. En este caso, el shell y el comando iniciado funcionar\u00e1n en paralelo.</p> Ejemplo de ejecuci\u00f3n en segundo plano<pre><code>ls -R / &gt; ls.txt 2&gt;/dev/null &amp;\n[2] 55351\n# No da los siguiente trabajos  mediante el comando jobs\n jobs\n[1]-  Ejecutando              ls --color=auto -R / 2/dev/null &gt; ls.txt &amp;\n[2]+  Ejecutando              ls --color=auto -R / &gt; ls.txt 2&gt; /dev/null &amp;\n</code></pre> <p>Podemos parar un proceso de forma temporal con Ctrl + Z. Lo lleva a segundo plano y se para, como podemos ver en el siguiente ejemplo:</p> Parada y puesta en segundo plano<pre><code>sleep 100\n^Z\n\n[1]+  Detenido                sleep 100\n</code></pre> <p>Para reanudar el proceso lo tenemos que poner en primer plano con el comando <code>fg</code></p> A primer plano<pre><code>fg\nsleep100\n</code></pre> <p>Con el comando <code>bg</code> un job parado para iniciarlo de nuevo en segundo plano.</p> Ejemplo de bg<pre><code>jobs\n# listo los trabajos\n[1]+  Detenido                sleep 100\n# Ejecuto en segundo plano el trabajo con el n\u00famero 1\n bg 1\n[1]+ sleep 100 &amp;\n</code></pre>"},{"location":"UD2/procesosLinux/#lista-de-los-procesos","title":"Lista de los procesos","text":"<p>El comando <code>ps (process status)</code> permite obtener informaci\u00f3n sobre los procesos en curso.</p> Ejemplo de ps con las opciones ef<pre><code>ps -ef\nUID          PID    PPID  C STIME TTY          TIME CMD\nroot           1       0  0 19:12 ?        00:00:06 /sbin/init splash\nroot           2       0  0 19:12 ?        00:00:00 [kthreadd]\n</code></pre> <p>Nos muestra una salida de todos los procesos <code>(-e)</code> y con m\u00e1s informaci\u00f3n sobre ellos <code>(-f)</code>. Si queremos toda la informaci\u00f3n deberemos utilizar la opci\u00f3n <code>-l</code>.</p> Ejemplo de ps con la opci\u00f3n u<pre><code>ps -u root\n    PID TTY          TIME CMD\n      1 ?        00:00:06 systemd\n</code></pre> <p>Nos muestra informaci\u00f3n de los procesos pertenecientes a root. Como podemos ver, no nos muestra tantas columnas.</p>"},{"location":"UD2/procesosLinux/#parada-de-un-procesosenales","title":"Parada de un proceso/se\u00f1ales","text":"<p>El comando kill no es obligatoriamente destruir o terminar un proceso, sino mandar se\u00f1ales a los procesos.</p> Sintaxis de kill<pre><code>kill [-l] -Num_se\u00f1al PID [PID2...]\n</code></pre> <p>Cuando se manda una se\u00f1al a un proceso, \u00e9ste debe interceptarla y reaccionar en consecuencia.</p> Ejemplo de kill<pre><code>kill -l     (lista todas las posibles se\u00f1ales que pueden enviarse a un proceso)\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL\n 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE\n 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2\n13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT\n17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU\n25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH\n29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN\n35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4\n39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12\n47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14\n51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10\n55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6\n59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n</code></pre> <p>En el anterior ejemplo nos muestra todas las se\u00f1ales que podemos mandar, por defecto manda la 15 (SIGTERM). Pide al proceso terminar con normalidad.</p> Ejemplo de se\u00f1ales<pre><code>sleep 100&amp;\n[1] 62497\n kill 62497\n jobs\n[1]+  Terminado               sleep 100\n sleep 100&amp;\n[1] 62642\n kill -9 62642\n jobs\n[1]+  Terminado (killed)      sleep 100\n</code></pre>"},{"location":"UD2/programaTareas/","title":"Programaci\u00f3n de tareas","text":"<p>En un sistema operativo existen ciertas tareas que se realizan de forma peri\u00f3dica y que ser\u00e1 conveniente que se resuelvan de autom\u00e1ticamente para liberar al administrador de esas tareas. Se dispone de herramientas capaces de programar estas tareas y dejar al sistema operativo la ejecuci\u00f3n de ellas.</p> <p>En Microsoft Windows Server se dispone de la herramienta Programador de tareas, cuyo nombre es autodescriptivo. Se accede a ella a trav\u00e9s del Administrador de servidor \u2192 Herramientas \u2192 Programador de tareas. Accediendo al men\u00fa Acci\u00f3n es posible crear una tarea a trav\u00e9s de un asistente con la opci\u00f3n Crear tarea b\u00e1sica\u2026  o crear una en modo avanzado con la opci\u00f3n Crear tarea\u2026 , que ser\u00e1 el que se analice a continuaci\u00f3n. La ventana que se abre posee cinco pesta\u00f1as:</p> <ul> <li>General, que permite asignar un nombre a la tarea, una descripci\u00f3n y bajo qu\u00e9 credenciales se ejecutar\u00e1 la tareas, es decir, con permiso de que usuario se va a ejecutar esa tarea. Habitualmente ser\u00e1 el administrador el que programe las tareas. Una cosa que hay que tener en cuenta es marcar la opci\u00f3n Ejecutar tanto si el usuario inici\u00f3 sesi\u00f3n como si no ya que de no haber iniciado sesi\u00f3n, la tarea no se ejecutar\u00e1.</li> <li>Desencadenadores, configura las acciones que lanzar\u00e1n la tarea. Las opciones son m\u00faltiples; seg\u00fan una programaci\u00f3n, al inicio de sesi\u00f3n, al registrarse un evento o incluso al conectarse alg\u00fan usuario espec\u00edfico. Las opciones que muestra esta pesta\u00f1a variar\u00e1n en funci\u00f3n de la opci\u00f3n seleccionada.</li> <li>Acciones, establece que acci\u00f3n o acciones se realizar\u00e1n cuando el desencadenador se dispare. La opci\u00f3n m\u00e1s com\u00fan ser\u00e1 la de ejecutar un programa, habitualmente un script de terminal que realizar\u00e1 una tarea determinada. Pero tambi\u00e9n es posible ejecutar cualquier aplicaci\u00f3n del sistema. Hay que tener en cuenta que este programa lo ejecutar\u00e1 el usuario especificado en la pesta\u00f1a General, por lo que hay que ser sumamente cuidadosos con las tareas que se le encomienda.</li> <li>Condiciones, una vez especificada la acci\u00f3n o acciones a realizar, es posible indicar que esa tarea se ejecute en unas condiciones espec\u00edficas. Normalmente suelen referirse al consumo de energ\u00eda si la tarea se va a realizar de forma prolongada.</li> <li>por \u00faltimo, Configuraci\u00f3n en donde se establecen directrices adicionales a las condiciones de la pesta\u00f1a anterior, pero en esta ocasi\u00f3n referidas a la ejecuci\u00f3n de la tarea.</li> </ul> <p>Esta herramienta tambi\u00e9n sirve para comprobar que tareas se est\u00e1n ejecutando y desde cuando lo hacen, a trav\u00e9s del men\u00fa Acci\u00f3n \u2192 Mostrar todas las tareas en ejecuci\u00f3n.</p> <p>En sistemas operativos GNU/Linux la programaci\u00f3n de tareas se realiza a trav\u00e9s del demonio <code>cron</code> que permite ejecutar tareas de forma autom\u00e1tica. Cada minuto <code>cron</code> comprueba el listado de tareas y si debe o no ejecutar un programa de su listado. A diferencia de Microsoft Windows Server, <code>cron</code> solo lanza tareas seg\u00fan una programaci\u00f3n. \u00c9stas deben ser descritas con comandos o contenidas en shell scripts.</p> <p>Existen al menos dos formas distintas de usar cron. La primera es a trav\u00e9s de los directorios,</p> <ul> <li><code>/etc/cron.hourly</code></li> <li><code>/etc/cron.daily</code></li> <li><code>/etc/cron.weekly</code></li> <li><code>/etc/cron.monthly</code></li> </ul> <p>en donde si se coloca un archivo tipo shellscript se ejecutar\u00e1 cada hora, cada d\u00eda, cada semana o cada mes, dependiendo del directorio en donde se sit\u00fae.</p> <p>La segunda manera de programar tareas con cron es a trav\u00e9s de manipular directamente el archivo <code>/etc/crontab</code>. Por defecto, este archivo tendr\u00e1 este contenido:</p> Fichero de configuraci\u00f3n de cron<pre><code>SHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\n\n# run-parts\n\n01 \\* \\* \\* _ root run-parts /etc/cron.hourly\n02 4 _ \\* _ root run-parts /etc/cron.daily\n22 4 _ _ 0 root run-parts /etc/cron.weekly\n42 4 1 _ \\* root run-parts /etc/cron.monthly\n</code></pre> <p>En donde:</p> <ul> <li>SHELL es el shell bajo el cual se ejecuta. Si no se especifica, se tomar\u00e1 por defecto el indicado en la l\u00ednea /etc/passwd correspondiente al usuario que est\u00e9 ejecutando cron.</li> <li>PATH contiene la ruta a los directorios en los cuales buscar\u00e1 el comando a ejecutar. \u00c9ste es distinto al PATH global del sistema o del usuario.</li> </ul> <p>Despu\u00e9s de estas dos variables, se establecen las tareas que se van a ejecutar, cuando y quien las va a realizar. No hay l\u00edmites en cuanto al n\u00famero de tareas programadas, eso s\u00ed, una por l\u00ednea. Las siete columnas de los que cada tarea est\u00e1 compuesto son:</p> Campo Descripci\u00f3n Minuto Establece el minuto de la hora en que la tarea ser\u00e1 ejecutada, este valor debe oscilar entre 0 y 59. Hora Controla la hora en la que la tarea ser\u00e1 ejecutada, se especifica en un formato de 24 horas, los valores deben estar entre 0 y 23, 0 es medianoche. D\u00eda del Mes D\u00eda del mes en que se va a ejecutar la tarea. Por ejemplo se indicar\u00eda 20, para ejecutar el comando el d\u00eda 20 del mes. Mes Mes en que el comando se ejecutar\u00e1, puede ser indicado num\u00e9ricamente (1-12), o por el nombre del mes en ingl\u00e9s, solo las tres primeras letras. D\u00eda semana D\u00eda en la semana en que se ejecutar\u00e1 el comando, puede ser num\u00e9rico (0-7) o por el nombre del d\u00eda en ingl\u00e9s, solo las tres primeras letras. Los valores 0 y 7 hacen referencia al mismo d\u00eda de la semana, el domingo. Usuario Usuario que ejecuta el comando. Comando Comando, script o programa que se ejecuta. Este campo puede contener m\u00faltiples palabras y espacios. <p>El uso de las cinco primeras columnas puede ser un tanto lioso al principio. Para aclarar conceptos se usar\u00e1n algunos ejemplos.</p> Ejemplos de momentos de ejecuci\u00f3n<pre><code>1 \\* \\* \\* _ Se ejecuta al minuto 1 de cada hora de todos los d\u00edas\n15 8 _ \\* _ A las 8:15 de cada d\u00eda\n0 17 _ \\* 0 A las 17:00 todos los domingos\n5 \\* _ Sun Cada minuto de 5:00 a 5:59 todos los domingos\n45 19 1 _ _ A las 19:45 del primer d\u00eda de cada mes\n1 _ 20 7 _ Al minuto 1 de cada hora del 20 de julio\n10 1 _ 12 1 A las 1:10 todos los lunes de diciembre\n0 12 16 _ Wen Al mediod\u00eda de los d\u00edas 16 de cada mes y que sea Mi\u00e9rcoles\n30 9 20 7 4 A las 9:30 del d\u00eda 20 de julio y que sean jueves\n30 9 20 7 _ A las 9:30 del d\u00eda 20 de julio sin importar el d\u00eda de la semana\n20 \\* \\* _ 6 Al minuto 20 de cada hora de los s\u00e1bados\n20 _ _ 1 6 Al minuto 20 de cada hora de los s\u00e1bados de enero\n</code></pre> <p>Tambi\u00e9n es posible especificar listas en los campos. Las listas pueden estar expresadas en una comalista o a trav\u00e9s de guiones. cron, de igual manera soporta incrementos en las listas, que se indican de la siguiente manera:</p> Ejemplos de momentos de ejecuci\u00f3n<pre><code>59 11 _ 1-3 1,2,3,4,5   A las 11:59 de lunes a viernes, de enero a marzo\n45 _ 10-25 _ 6-7  Al minuto 45 de todas las horas de los d\u00edas 10 al 25 de todos los meses del d\u00eda los s\u00e1bados o domingos\n10,30,50 \\* \\* _ 1,3,5  En el minuto 10, 30 y 50 de todas las horas de los d\u00edas lunes, mi\u00e9rcoles y viernes\n_/15 10-14 \\* \\* _  Cada quince minutos de las 10:00 a las 14:00\n_ 12 1-10/2 2,8 _   Cada minuto de la hora 12 en los d\u00edas 1,3,5,7 y 9 de febrero y agosto. (el incremento en el tercer campo es de 2 y comienza a partir de 1)\n0 \\_/5 1-10,15,20-23 \\* 3 Cada 5 horas de los d\u00edas 1 al 10, el d\u00eda 15 y del d\u00eda 20 al 23 de cada mes y que el d\u00eda sea mi\u00e9rcoles\n3/3 2/4 2 2 2 Cada 3 minutos empezando por el minuto 3 (3,6,9...) de las horas 2, 6, 10, 14, 18 y 22 (cada 4 horas empezando en la hora 2) del d\u00eda 2 de febrero y que sea martes\n</code></pre> <p>Como se puede apreciar en el \u00faltimo ejemplo la tarea cron que estuviera asignada a esta l\u00ednea, s\u00f3lo se ejecutar\u00eda si cumple con los cinco criterios, es decir, siempre es un AND que s\u00f3lo resulta verdadero si todas las condiciones son ciertas.</p>"},{"location":"UD2/programaTareas/#ejecutando-cron-con-multiples-usuarios-comando-crontab","title":"Ejecutando cron con m\u00faltiples usuarios, comando crontab","text":"<p>GNU/Linux es un sistema multiusuario y cron es de las aplicaciones que soporta el trabajo con varios usuarios a la vez. Cada usuario puede tener su propio archivo crontab, de hecho el /etc/crontab se asume que es el archivo del usuario root. Cualquier usuario puede disponer de su propio archivo de programaci\u00f3n de tareas a trav\u00e9s del comando crontab. En el directorio <code>/var/spool/cron/crontabs</code>, que puede variar seg\u00fan la distribuci\u00f3n, se genera un archivo de tareas para cada usuario.</p> <p>El uso de crontab es <code>crontab -e</code> este comando abrir\u00e1 el editor de texto ( Editor Vi) por defecto con un archivo vac\u00edo y donde el usuario especificar\u00e1 las tareas que desea programar, y que se guardar\u00e1 autom\u00e1ticamente como <code>/var/spool/cron/crontabs/usuario.</code> Hay que tener en cuenta que si existe esta nueva lista de tareas programadas ser\u00e1n dos las que ser\u00e1n comprobadas en cada minuto por el demonio cron: la del usuario reci\u00e9n creada y la del sistema vista con anterioridad.</p>"},{"location":"UD2/programaTareas/#systemd-timers","title":"Systemd timers","text":"<p>Los temporizadores son una forma opcional de programar tareas en el sistema operativo. Las unidades systemd hacen posible la creaci\u00f3n de tareas complicadas. A continuaci\u00f3n se muestran dos ejemplos, uno con crontab anterior y otro con systemd. crear una tarea programada que guarde informaci\u00f3n de fecha en el archivo /tmp/date cada 10 minutos.</p> Ejemplo con crontab<pre><code>*/10 **** /usr/bin/date &gt;&gt; /tmp/date\n</code></pre> <p>Ahora con systemd</p> <ul> <li>Creemos un archivo /etc/systemd/system/date.service con el siguiente contenido:</li> </ul> Contenido del servicio<pre><code>[Unit]\nDescription=Guardamos la fecha en  /tmp/date\n[Service]\nType=oneshot\nExecStart=/usr/bin/sh -c '/usr/bin/date &gt;&gt; /tmp/date'\n</code></pre> <ul> <li>Luego creemos un archivo de temporizador /etc/systemd/system/date.timer con el siguiente contenido</li> </ul> Contenido del temporizador<pre><code> [Unit]\nDescription=date.service es ejecutado cada 10 minutos\n\n[Timer]\nOnCalendar=*:0/10\n</code></pre> <ul> <li>Inicia el temporizador con el siguiente comando:</li> </ul> Comando para iniciar el temporizador<pre><code>systemctl start date.timer\n\n#listado de los temporizadores\nsystemctl list-timers\nNEXT                         LEFT          LAST                         PASSED       UNIT                         ACTIVATES\nWed 2023-10-04 12:36:26 CEST 8min left     Tue 2023-10-03 11:48:10 CEST 24h ago      logrotate.timer              logrotate.service\nWed 2023-10-04 12:36:26 CEST 8min left     Tue 2023-10-03 11:48:10 CEST 24h ago      man-db.timer                 man-db.service\nWed 2023-10-04 12:36:26 CEST 8min left     Tue 2023-10-03 22:39:05 CEST 13h ago      phpsessionclean.timer        phpsessionclean.service\nWed 2023-10-04 12:36:28 CEST 8min left     Tue 2023-10-03 22:30:05 CEST 13h ago      anacron.timer                anacron.service\nWed 2023-10-04 13:32:32 CEST 1h 4min left  Tue 2023-10-03 12:16:38 CEST 24h ago      apt-daily-upgrade.timer      apt-daily-upgrade.service\nWed 2023-10-04 16:44:22 CEST 4h 16min left Tue 2023-10-03 12:31:34 CEST 23h ago      motd-news.timer              motd-news.service\n</code></pre>"},{"location":"UD2/registroWindow/","title":"Registro del sistema en Microsoft Windows","text":"<p>En la familia de Microsoft Windows, cobra especial importancia una base de datos jer\u00e1rquica gestionada por el propio sistema operativo y que almacena todos los datos de configuraci\u00f3n tanto del hardware, software como de los usuarios. Esta base de datos no es otra que el Registro de Windows y es una pieza fundamental en los sistemas operativos de Microsoft.</p> <p>Se introdujo por primera vez con Microsoft Windows 3.1 con el prop\u00f3sito de guardar informaci\u00f3n basados en COM (Component Object Mode de Microsoft). A partir de Microsoft Windows 95 se ampliaron las caracter\u00edsticas almacenadas en el registro, pauta que se sigui\u00f3 versi\u00f3n tras versi\u00f3n hasta la actualidad. Antes de su existencia, la configuraci\u00f3n del software se almacenaba en ficheros de configuraci\u00f3n INI (Windows Initialization File) contenidos en la carpeta de usuario. En un ambiente multiusuario toda la informaci\u00f3n de la configuraci\u00f3n del software estaba repartida en demasiados archivos de este tipo. La b\u00fasqueda de un dato se realiza de forma m\u00e1s r\u00e1pida en un ambiente estructurado y no recorriendo el disco en busca de los ficheros INI.</p> <p>Esta base de datos jer\u00e1rquica est\u00e1 compuesta por dos elementos b\u00e1sicos:</p> <ul> <li>claves, contenedores de valores que tienen un comportamiento similar a las carpetas, que a su vez pueden contener subclaves. Los nombres de esta claves no pueden contener barras, caracteres especiales y no distinguen entre may\u00fasculas y min\u00fasculas.</li> <li> <p>valores, el contenido de cada una de las claves. Este contenido es fuertemente tipado y debe pertenecer a alguno de estos tipos de datos:</p> <ul> <li>REG_BINARY, contiene datos binarios</li> <li>REG_DWORD, n\u00famero entero positivo de 32 bits</li> <li>REG_LINK, enlace simb\u00f3lico a otra clave de registro</li> <li>REG_MULTI_SZ, valor de cadena m\u00faltiple (lista ordenada de cadenas)</li> <li>REG_SZ, cadena de texto en formato UTF-16</li> <li>REG_NONE, datos sin ning\u00fan tipado</li> </ul> </li> </ul> <p>El registro se divide en varias secciones l\u00f3gicas o \u00e1rboles cada una destinada a contener la informaci\u00f3n espec\u00edfica de un \u00e1rea del equipo. De esta forma, si es necesario la obtenci\u00f3n de un dato de configuraci\u00f3n del software, no buscar\u00e1 en la rama de usuario, ni en la de hardware. Esta distinci\u00f3n en ramas limita el espectro de b\u00fasqueda y lo hace m\u00e1s \u00f3ptimo. Actualmente son seis las claves del registro:</p> <ul> <li>HKEY_LOCAL_MACHINE (HKLM), almacena configuraciones espec\u00edficas del equipo local. Este \u00e1rbol se almacena en memoria principal al arrancar el sistema y es all\u00ed donde se modifica la informaci\u00f3n. Durante el proceso de apagado, esta informaci\u00f3n se escribe en memoria no vol\u00e1til.</li> <li>HKEY_CLASSES_ROOT (HKCR), contiene la informaci\u00f3n sobre aplicaciones, asociaciones de archivos e identificadores de clases de objetos OLE (Object Linking and Embedding).</li> <li>HKEY_USERS (HKU), alberga la informaci\u00f3n de todos los perfiles de usuario locales presentes en el sistema.</li> <li>HKEY_CURRENT_USER (HKCU), posee la informaci\u00f3n referida al usuario con la sesi\u00f3n iniciada en estos momentos. En los sistemas NT (New Technology) de Microsoft, esta informaci\u00f3n se copia en los ficheros NTUSER.DAT y USRCLASS.DAT, y se ubica en la carpeta personal de cada usuario. Si los perfiles se han configurado como m\u00f3viles, esta informaci\u00f3n viaja al equipo en el que se inicie sesi\u00f3n.</li> <li>HKEY_PERFONMANCE_DATA, este \u00e1rbol no aparece en el registro, aunque puede ser accedida a trav\u00e9s de la API (Application Programming Interface) de Windows. Esta clave proporciona informaci\u00f3n en tiempo de ejecuci\u00f3n del rendimiento del sistema. Los datos son proporcionados por el kernel, controladores, programas y servicios en funcionamiento.</li> <li>HKEY_DYN_DATA, clave que tan s\u00f3lo est\u00e1 presente en los sistemas de Microsoft Windows 95, Microsoft Windows 98 y Microsoft Windows ME. Contiene informaci\u00f3n sobre los dispositivos de hardware y de red. Esta rama no se guarda en el registro ya que es creada en tiempo real y destruida cuando se apaga el ordenador. Durante su existencia se almacena en la memoria principal.</li> </ul> <p>Pr\u00e1cticamente cualquier configuraci\u00f3n se guarda en este registro y es modificable a trav\u00e9s del programa RegEdit.exe, una herramienta que permite explorar, importar y modificar los valores del registro. Es necesario prestar especial atenci\u00f3n a esta herramienta, ya que los cambios se producen sin solicitar confirmaci\u00f3n y de forma persistente, lo que puede conducir a errores irreversibles. Es altamente recomendable realizar una copia del registro antes de proceder a su modificaci\u00f3n.</p> <p>Existen dos formas de edici\u00f3n del registro:</p> <p>\u2022 manual, a trav\u00e9s de la aplicaci\u00f3n RegEdit.exe, que mostrar\u00e1 la base de datos jerarquizada a trav\u00e9s de la cual se podr\u00e1 navegar hasta la clave necesaria para modificar all\u00ed su valor. \u2022 autom\u00e1tica, a trav\u00e9s de ficheros de configuraci\u00f3n con extensi\u00f3n reg. Estos archivos contienen texto con una estructura espec\u00edfica que permite a\u00f1adir o eliminar datos en el registro:</p> <pre><code>versi\u00f3nEditorRegistro\nl\u00ednea en blanco\n[rutaRegistro1]\n\"nombreDato1\"=\"tipoDatos1:valorDatos1\"\n\"nombreDato2\"=\"tipoDatos2:valorDatos2\"\nl\u00ednea en blanco\n[rutaRegistro2]\n\"nombreDato3\"=\"tipoDatos3:valorDatos3\"\n</code></pre> <p>En donde:</p> <ul> <li>versi\u00f3nEditorRegistro, indica la versi\u00f3n del editor a utilizar. A partir de Microsoft Windows Server 2003 y Microsoft Windows XP se utiliza la versi\u00f3n 5.0, por lo que ser\u00e1 conveniente especificar siempre esta versi\u00f3n.</li> <li>rutaRegistro, es la ruta de la clave que se va a importar al registro. Se escribe entre corchetes y utilizando la barra inversa para separar los niveles de jerarqu\u00eda.</li> <li>nombreDato, nombre del dato que se necesita modificar. Si esta entrada existe en el registro se modifica su valor, en caso contrario se crea una nueva entrada con los datos proporcionados.</li> <li>tipoDatos, el tipo de dato del valor que se introducir\u00e1 en la entrada. Es necesario recordar que el registro es una base de datos fuertemente tipada, por lo que es necesario indicar siempre el tipo de dato.</li> <li>valorDato, el valor que se introduce en el registro. Huelga decir que sebe ser un valor compatible con el tipo de dato especificado en tipoDato.</li> </ul> <p>Para ilustrar el funcionamiento de estos ficheros, se crear\u00e1 un registro que a\u00f1ada los datos de una aplicaci\u00f3n en todos los ordenadores del sistema inform\u00e1tico. Para realizar esta tarea la opci\u00f3n m\u00e1s pr\u00e1ctica es crear un fichero REG que se ejecutar\u00e1 en cada uno de los ordenadores. Con posterioridad descubriremos que un SOR permite realizar esta tarea de una forma infinitamente m\u00e1s pr\u00e1ctica.</p> <p>El fichero REG ser\u00e1 el siguiente:</p> El fichero REG<pre><code>Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\software\\MiAplicacion]\n\"Titulo\"=\"Mi Aplicaci\u00f3n v 1.0\"\n\"VersionInicial\"=dword:00001024\n</code></pre> <p>Si se ejecuta este fichero, se a\u00f1adir\u00e1 una nueva clave denominada MiAplicacion que contendr\u00e1 dos registros (Titulo y VersionInicial) con los valores de cada uno de ellos. N\u00f3tese que los valores del tipo REG-SZ se introducen sin tipo de datos, pero siempre entre comillas dobles. Adem\u00e1s, el fichero de registro debe terminar siempre con una l\u00ednea en blanco.</p> <p>A trav\u00e9s de los archivos REG tambi\u00e9n existe la posibilidad de eliminar claves o valores. Si se elimina una clave del registro, \u00e9sta desaparecer\u00e1 del \u00e1rbol al que pertenece. Sin embargo, si se elimina un valor, la clave a la que pertenece ese valor continuar\u00e1 existiendo. Para eliminar elementos del registro es necesario colocar un guion en lugar del valor que se requiere suprimir y si se trata de una clave, anteponer este guion a la ruta de la clave.</p> El fichero REG<pre><code>\"Titulo\"=-\n\"VersionInicial\"=-\n</code></pre> <p>Si se ejecuta este fichero REG, eliminar\u00e1 los valores de Titulo y VersionInicial, pero mantendr\u00e1 las claves en el registro.</p> El fichero REG<pre><code>[-HKEY_CURRENT_USER\\software\\MiAplicaci\u00f3n]\n</code></pre> <p>En esta ocasi\u00f3n se quita la clave entera MiAplicacion, por lo que desaparecer\u00e1n tanto las claves que la contienen como sus valores.</p> <p>Esta alteraci\u00f3n del registro tambi\u00e9n se puede realizar desde el terminal de comandos facilitando la automatizaci\u00f3n de estas modificaciones. Para ello se utiliza el comando REG, que permite la adici\u00f3n, eliminaci\u00f3n, consulta, copia, restauraci\u00f3n y exportaci\u00f3n de contenido del registro. Se puede obtener toda la informaci\u00f3n de este comando a trav\u00e9s de su ayuda en el terminal:</p> Ejemplo del comando reg<pre><code>reg /?\n</code></pre> <p>Si lo que se pretende es a\u00f1adir informaci\u00f3n al registro se usar\u00e1 la opci\u00f3n reg add del comando de la siguiente manera:</p> Ejemplo del comando reg<pre><code>reg add Clave /v NombreValor /t TipoDato /d Dato\n</code></pre> <p>As\u00ed, se podr\u00eda introducir la informaci\u00f3n del ejemplo anterior del siguiente modo:</p> Ejemplo del comando reg<pre><code>reg add hkcu\\software\\MiAplicacion /v Titulo /t REG_SZ /d \u201cMi aplicaci\u00f3n v 1.0\u201d\n</code></pre> <p>Y la segunda clave:</p> Ejemplo del comando reg<pre><code>reg add hkcu\\software\\MiAplicacion /v VersionInicial /t REG_DWORD /d 1024\n</code></pre> <p>Para acortar la ruta de acceso a la clase, es posible utilizar las abreviaturas de los \u00e1rboles para simplificar los comandos. As\u00ed <code>hkcu</code> corresponder\u00eda con el \u00e1rbol HKEY_CURRENT_USER.</p> <p>Si se requiere borrar una entrada, se utilizar\u00e1 la opci\u00f3n reg delete de la siguiente manera: reg delete hkcu\\software\\MiAplicacion /v</p> <p>Para conocer lo que es capaz de realizar este comando, as\u00ed como todas sus opciones, es buena idea consultar su ayuda en el terminal. Aunque parezca una forma un tanto inc\u00f3moda de editar el registro, en los sucesivo se trabajar\u00e1 con scripts Powershell que se pueden programar para realizar este tipo de configuraciones de forma aromatizada, la cual ahorrar\u00e1 mucho tiempo y trabajo.</p>"},{"location":"UD3/actividades/","title":"\ud83d\udd27 Actividades \u2013 Bloque 1: Conceptos Fundamentales de LDAP","text":"<p>Todas las actividades se pueden resolver con los conceptos y ejemplos de la Teor\u00eda.</p>"},{"location":"UD3/actividades/#nivel-1-fundamentos","title":"Nivel 1 \u2013 Fundamentos","text":""},{"location":"UD3/actividades/#1-comparativa-ldap-vs-sql","title":"1. Comparativa LDAP vs SQL","text":"<p>Completa una tabla t\u00e9cnica con 6 criterios: estructura, rendimiento (lectura/escritura), seguridad, transacciones, esquema, casos de uso.</p>"},{"location":"UD3/actividades/#2-vocabulario-dit","title":"2. Vocabulario DIT","text":"<p>Dado un \u00e1rbol, identifica DN, RDN, OU, CN y DC de 5 entradas diferentes.</p> <pre><code>graph TD\n    A[dc=instituto,dc=edu]\n    A--&gt;B[ou=alumnos]\n    A--&gt;C[ou=profesores]\n    B--&gt;D[cn=Maria Lopez]\n    C--&gt;E[cn=Juan Perez]</code></pre>"},{"location":"UD3/actividades/#nivel-2-aplicacion","title":"Nivel 2 \u2013 Aplicaci\u00f3n","text":""},{"location":"UD3/actividades/#3-disena-tu-dit-empresa","title":"3. Dise\u00f1a tu DIT (empresa)","text":"<p>Crea un DIT para <code>dc=empresa,dc=com</code> con:</p> <ul> <li><code>ou=Usuarios</code>, <code>ou=Departamentos</code> (Ventas/Soporte), <code>ou=Grupos</code>.</li> <li>4 usuarios <code>inetOrgPerson</code> y 2 grupos (<code>groupOfNames</code> con <code>member:</code> DN).</li> <li>Diagrama del DIT.</li> </ul>"},{"location":"UD3/actividades/#4-ldif-de-altas-y-cambios","title":"4. LDIF de altas y cambios","text":"<p>Crea <code>altas.ldif</code> con OU+2 usuarios. Crea <code>cambios.ldif</code> con add de un atributo y replace de otro. Ejecuta: <pre><code>ldapadd   -x -H ldap://127.0.0.1 -D \"cn=admin,dc=empresa,dc=com\" -W -f altas.ldif\nldapmodify -x -H ldap://127.0.0.1 -D \"cn=admin,dc=empresa,dc=com\" -W -f cambios.ldif\n</code></pre></p>"},{"location":"UD3/actividades/#5-busquedas-con-base-alcance-y-filtros","title":"5. B\u00fasquedas con base, alcance y filtros","text":"<p>1) Devuelve solo la entrada base (alcance <code>base</code>). 2) Lista hijos directos de <code>ou=Usuarios</code> (alcance <code>one</code>). 3) Encuentra en todo el sub\u00e1rbol a usuarios con <code>sn=Lopez</code> (alcance <code>sub</code>). 4) Filtro combinado: <code>inetOrgPerson</code> de Ventas o Soporte cuyo <code>cn</code> empiece por <code>M</code>.</p>"},{"location":"UD3/actividades/#6-phpmyadmin","title":"6. PHPmyAdmin","text":"<p>Ahora realiza los ejercicios anteriores con la aplicaci\u00f3n web phpmyadmin. Claro esta, crea otros usuarios, modificalos, borrarlos. etc..</p>"},{"location":"UD3/actividades/#nivel-3-analisiscreacion","title":"Nivel 3 \u2013 An\u00e1lisis/Creaci\u00f3n","text":""},{"location":"UD3/actividades/#7-secuencia-funcional-ldap","title":"7. Secuencia funcional LDAP","text":"<p>Crea un **sequenceDiagram ** con: <code>bind \u2192 search \u2192 result \u2192 modify \u2192 result \u2192 unbind</code>.</p>"},{"location":"UD3/actividades/#8-dsml-y-exportacion","title":"8. DSML y exportaci\u00f3n","text":"<p>Explica cu\u00e1ndo usar\u00edas DSML en lugar de LDIF en un entorno real y dibuja un flujo simple  que lo muestre.</p>"},{"location":"UD3/actividades/#nivel-4-escenario-profesional","title":"Nivel 4 \u2013 Escenario profesional","text":""},{"location":"UD3/actividades/#9-endurece-el-laboratorio-docker-con-tls","title":"9. Endurece el laboratorio Docker con TLS","text":"<p>En la carpeta del laboratorio: - Genera una CA interna y firma un certificado para <code>asir.local</code> (incluye SAN con el host/IP que uses). - Monta los certificados en <code>openldap</code> mediante <code>docker-compose.yml</code>, habilita <code>LDAP_TLS</code>, fuerza conexiones cifradas y ajusta <code>phpLDAPadmin</code> para servir por HTTPS. - Demuestra la configuraci\u00f3n con dos capturas de comandos: <code>ldapsearch</code> contra <code>ldaps://</code> y <code>openssl s_client</code> mostrando el certificado emitido por tu CA.</p>"},{"location":"UD3/docker-openldap/","title":"\ud83d\udc33 OpenLDAP en Docker","text":"<p>Objetivo: montar un laboratorio de OpenLDAP en una m\u00e1quina virtual Ubuntu usando Docker y Docker Compose, entendiendo los conceptos b\u00e1sicos para poder adaptarlo en clase.</p>"},{"location":"UD3/docker-openldap/#1-fundamentos-de-docker","title":"1. Fundamentos de Docker","text":"<ul> <li>Contenedor: proceso aislado que incluye todo lo necesario para ejecutar una aplicaci\u00f3n (bibliotecas, configuraci\u00f3n). Comparte el kernel del sistema anfitri\u00f3n.</li> <li>Imagen: plantilla inmutable a partir de la cual se crean contenedores (por ejemplo, <code>osixia/openldap:1.5.0</code>).</li> <li>Dockerfile: receta que describe c\u00f3mo construir una imagen.</li> <li>Volumen: carpeta persistente para guardar datos aunque el contenedor se destruya.</li> <li>Registro: repositorio donde se almacenan im\u00e1genes (<code>Docker Hub</code>, <code>ghcr.io</code>, etc.).</li> </ul> <p>Ventajas para el aula: - Montaje r\u00e1pido, reproducible y sin \u00abensuciar\u00bb la m\u00e1quina. - Posibilidad de que cada alumno tenga un entorno id\u00e9ntico.</p>"},{"location":"UD3/docker-openldap/#2-instalar-docker-engine-en-ubuntu","title":"2. Instalar Docker Engine en Ubuntu","text":"<ol> <li>Actualizar la VM: <pre><code>sudo apt update &amp;&amp; sudo apt upgrade\n</code></pre></li> <li>Instalar requisitos previos: <pre><code>sudo apt install ca-certificates curl gnupg lsb-release\n</code></pre></li> <li>A\u00f1adir la clave y el repositorio oficial: <pre><code>sudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt update\n</code></pre></li> <li>Instalar Docker y plugins: <pre><code>sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre></li> <li>A\u00f1adir al grupo <code>docker</code> (opcional, para no usar <code>sudo</code>): <pre><code>sudo usermod -aG docker $USER\nnewgrp docker\n</code></pre></li> <li>Probar con un contenedor de ejemplo: <pre><code>docker run --rm hello-world\n</code></pre></li> </ol>"},{"location":"UD3/docker-openldap/#3-comandos-basicos-imprescindibles","title":"3. Comandos b\u00e1sicos imprescindibles","text":"Acci\u00f3n Comando Comentario Listar contenedores activos <code>docker ps</code> Con <code>-a</code> muestra tambi\u00e9n los detenidos Descargar imagen <code>docker pull imagen:tag</code> Ej: <code>docker pull osixia/openldap:1.5.0</code> Crear/ejecutar contenedor <code>docker run --name nombre imagen</code> A\u00f1ade <code>-d</code> para modo daemon Parar/arrancar contenedor <code>docker stop nombre</code> / <code>docker start nombre</code> Ver logs en vivo <code>docker logs -f nombre</code> \u00datil para diagnosticar arranques Entrar en un contenedor <code>docker exec -it nombre bash</code> Depuraci\u00f3n o mantenimiento Eliminar contenedor <code>docker rm nombre</code> Elimina solo el contenedor Eliminar imagen <code>docker rmi imagen:tag</code> Necesario detener y borrar contenedores primero"},{"location":"UD3/docker-openldap/#4-docker-compose","title":"4. Docker Compose","text":"<p>Docker Compose permite definir m\u00faltiples contenedores y sus relaciones en un archivo <code>docker-compose.yml</code>.</p> <p>Elementos clave del YAML:</p> <ul> <li><code>services</code>: cada servicio es un contenedor.</li> <li><code>image</code> o <code>build</code>: usar imagen existente o construirla.</li> <li><code>ports</code>: mapeo <code>host:contenedor</code>.</li> <li><code>environment</code>: variables de entorno.</li> <li><code>volumes</code>: datos persistentes o archivos que se comparten.</li> <li><code>depends_on</code>: orden de arranque entre servicios.</li> </ul> <p>Comandos b\u00e1sicos:   - <code>docker compose up -d</code> \u2192 crea/arranca los servicios.   - <code>docker compose ps</code> \u2192 estado.   - <code>docker compose logs -f servicio</code> \u2192 logs.   - <code>docker compose down</code> \u2192 detiene y elimina contenedores, pero respeta vol\u00famenes.</p> <p>Desde Docker 20.10 el plugin oficial se invoca como <code>docker compose</code> (con espacio). Aseg\u00farate de no usar la sintaxis antigua <code>docker-compose</code>.</p>"},{"location":"UD3/docker-openldap/#5-laboratorio-openldap-phpldapadmin","title":"5. Laboratorio: OpenLDAP + phpLDAPadmin","text":""},{"location":"UD3/docker-openldap/#51-estructura-recomendada","title":"5.1 Estructura recomendada","text":"<pre><code>~/openldap-lab/\n\u251c\u2500\u2500 docker-compose.yml\n</code></pre>"},{"location":"UD3/docker-openldap/#52-fichero-docker-composeyml","title":"5.2 Fichero <code>docker-compose.yml</code>","text":"<pre><code>version: \"3.9\"\n\nservices:\n  openldap:\n    image: osixia/openldap:1.5.0\n    container_name: openldap\n    environment:\n      LDAP_ORGANISATION: \"ASIR2X\"\n      LDAP_DOMAIN: \"asir.local\"\n      LDAP_ADMIN_PASSWORD: \"admin123\"\n      LDAP_TLS: \"false\" (Desactiva la validaci\u00f3n por certificado)\n    ports:\n      - \"389:389\"\n    restart: unless-stopped\n\n  phpldapadmin:\n    image: osixia/phpldapadmin:0.9.0\n    container_name: phpldapadmin\n    environment:\n      PHPLDAPADMIN_LDAP_HOSTS: openldap\n      PHPLDAPADMIN_HTTPS: \"false\"\n    ports:\n      - \"8080:80\"\n    depends_on:\n      - openldap\n    restart: unless-stopped\n</code></pre> <p>Warning: cuando experimentes con TLS, replicaci\u00f3n u otras opciones avanzadas ese estado queda persistido en <code>./datos/slapd.d</code>. Si desactivas la caracter\u00edstica, elimina o renombra la carpeta <code>datos/</code> antes de levantar de nuevo el stack (<code>docker compose down &amp;&amp; rm -rf datos</code> o <code>mv datos datos_backup</code>) para regenerar una configuraci\u00f3n limpia.</p>"},{"location":"UD3/docker-openldap/#6-pasos-para-arrancar-el-laboratorio","title":"6. Pasos para arrancar el laboratorio","text":"<ol> <li>Crear directorio y copiar los archivos anteriores.</li> <li>Ajustar variables: dominio (<code>LDAP_DOMAIN</code>), contrase\u00f1a admin, entradas en el LDIF.</li> <li>Lanzar los servicios:    <pre><code>docker compose up -d\n</code></pre></li> <li>Comprobar estado:    <pre><code>docker compose ps\ndocker compose logs -f openldap\n</code></pre></li> <li>Acceder a phpLDAPadmin desde el navegador en <code>http://IP_VM:8080</code>.  </li> <li>Login DN: <code>cn=admin,dc=asir,dc=local</code> </li> <li>Password: la que definiste como <code>LDAP_ADMIN_PASSWORD</code>.</li> <li>Probar desde la l\u00ednea de comandos del host:    <pre><code>ldapsearch -x -H ldap://localhost:389 -b \"dc=asir,dc=local\" \"(objectClass=*)\"\n</code></pre></li> </ol> <p>Para detener el laboratorio sin perder datos: <pre><code>docker compose down\n</code></pre> Los contenedores se recrear\u00e1n en el pr\u00f3ximo <code>up</code>, reutilizando los vol\u00famenes.</p>"},{"location":"UD3/docker-openldap/#gestion-del-servidor","title":"Gesti\u00f3n del Servidor","text":"<p>Aprender a gestionar un servicio LDAP ejecut\u00e1ndose en Docker, comprendiendo las operaciones b\u00e1sicas (alta, baja, modificaci\u00f3n y consulta) y las opciones de cada comando.</p>"},{"location":"UD3/docker-openldap/#comandos-basicos-de-openldap","title":"\ud83e\udde9 Comandos b\u00e1sicos de OpenLDAP","text":"<p>En esta secci\u00f3n aprender\u00e1s a usar los comandos <code>ldapadd</code>, <code>ldapsearch</code>, <code>ldapmodify</code> y <code>ldapdelete</code> con sus opciones explicadas, ejemplos pr\u00e1cticos y salidas esperadas.</p>"},{"location":"UD3/docker-openldap/#ldapadd-crear-entradas","title":"\ud83e\uddf1 ldapadd \u2014 Crear entradas","text":"<p>Sintaxis general</p> <pre><code>ldapadd -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=asir,dc=local\" -w admin123 -f base.ldif\n</code></pre> <p>Opciones m\u00e1s comunes</p> Opci\u00f3n Descripci\u00f3n <code>-x</code> Usa autenticaci\u00f3n simple (simple bind) <code>-H</code> URI del servidor LDAP <code>-D</code> DN del usuario admin <code>-w</code> Contrase\u00f1a <code>-f</code> Fichero LDIF con las entradas a crear <code>-c</code> Contin\u00faa en caso de errores (\u201cAlready exists\u201d) <p>Ejemplo (creaci\u00f3n base y OU): base.ldif<pre><code>dn: dc=asir,dc=local\nobjectClass: top\nobjectClass: dcObject\nobjectClass: organization\no: ASIR2X\ndc: asir\n\ndn: ou=Usuarios,dc=asir,dc=local\nobjectClass: organizationalUnit\nou: Usuarios\n</code></pre></p> <p>Salida esperada: <pre><code>adding new entry \"dc=asir,dc=local\"\nadding new entry \"ou=Usuarios,dc=asir,dc=local\"\n</code></pre></p>"},{"location":"UD3/docker-openldap/#ldapsearch-buscar-entradas","title":"\ud83d\udd0d ldapsearch \u2014 Buscar entradas","text":"<pre><code>ldapsearch -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=asir,dc=local\" -w admin123 -b \"dc=asir,dc=local\" -s sub \"(objectClass=*)\" dn\n</code></pre> Opci\u00f3n Descripci\u00f3n <code>-b</code> Base DN <code>-s</code> Alcance: <code>base</code> (solo DN), <code>one</code> (hijos directos), <code>sub</code> (sub\u00e1rbol) <code>\"(filtro)\"</code> Ej.: <code>(uid=profesor)</code>, <code>(&amp;(objectClass=inetOrgPerson)(sn=Demo))</code> <code>atributos</code> Lista opcional (ej.: <code>cn mail</code>) <p>Ejemplo (buscar usuario): <pre><code>ldapsearch -x -H ldap://127.0.0.1:389   -D \"cn=admin,dc=asir,dc=local\" -w admin123   -b \"ou=Usuarios,dc=asir,dc=local\" -s sub \"(uid=profesor)\" cn sn mail\n</code></pre> Salida esperada: <pre><code>dn: cn=profesor,ou=Usuarios,dc=asir,dc=local\ncn: profesor\nsn: Demo\nmail: profesor@asir.local\n</code></pre></p>"},{"location":"UD3/docker-openldap/#ldapmodify-modificar-entradas","title":"\ud83e\uddf0 ldapmodify \u2014 Modificar entradas","text":"<p><pre><code>ldapmodify -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=asir,dc=local\" -w admin123 -f modificar.ldif\n</code></pre> Ejemplo LDIF con replace y add: modificar-profesor.ldif<pre><code>dn: cn=profesor,ou=Usuarios,dc=asir,dc=local\nchangetype: modify\nreplace: mail\nmail: profesor@asir2x.local\n-\nadd: telephoneNumber\ntelephoneNumber: +34 600 000 111\n</code></pre> Salida esperada: <pre><code>modifying entry \"cn=profesor,ou=Usuarios,dc=asir,dc=local\"\n</code></pre></p>"},{"location":"UD3/docker-openldap/#ldapdelete-eliminar-entradas","title":"\ud83d\uddd1\ufe0f ldapdelete \u2014 Eliminar entradas","text":"<p><pre><code>ldapdelete -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=asir,dc=local\" -w admin123 \"cn=profesor,ou=Usuarios,dc=asir,dc=local\"\n</code></pre> Salida esperada: <pre><code>deleting entry \"cn=profesor,ou=Usuarios,dc=asir,dc=local\"\n</code></pre></p>"},{"location":"UD3/docker-openldap/#7recursos-recomendados","title":"7.Recursos recomendados","text":"<ul> <li>Documentaci\u00f3n oficial de Docker</li> <li>Cheatsheet Docker</li> <li>Repositorio Docker OpenLDAP (osixia)</li> <li>phpLDAPadmin dockerizado</li> <li>Gu\u00eda ldapsearch de OpenLDAP</li> </ul>"},{"location":"UD3/pam/","title":"PAM en Linux","text":"<p>\"Pluggable Authentication Modules\" (PAM) es la capa que traduce las peticiones de autenticaci\u00f3n de las aplicaciones en llamadas a los mecanismos que realmente validan a los usuarios.</p>"},{"location":"UD3/pam/#por-que-deberia-importarte-co","title":"\u00bfPor qu\u00e9 deber\u00eda importarte co?","text":"<ul> <li>Separaci\u00f3n de responsabilidades: las aplicaciones delegan la autenticaci\u00f3n y t\u00fa solo tocas las pilas PAM.  </li> <li>Flexibilidad: puedes a\u00f1adir LDAP, Kerberos o un segundo factor sin reprogramar ning\u00fan servicio.  </li> <li>Control fino: decides qui\u00e9n entra, cu\u00e1ndo y bajo qu\u00e9 condiciones.  </li> <li>Estabilidad: si entiendes la pila, evitas dejar fuera a toda la empresa tras un cambio.</li> </ul> <p>PIENSA EN PAM como una centralita: las llamadas (peticiones de login) llegan al operador (libpam) y este las redirige al departamento adecuado (m\u00f3dulos) seg\u00fan un guion (fichero en <code>/etc/pam.d/servicio</code>).</p> <pre><code>flowchart LR\n    Usuario --&gt;|credenciales| Servicio[Servicio PAM-aware&lt;br&gt;(sshd, sudo, gdm...)]\n    Servicio --&gt; libpam[libpam]\n    libpam --&gt;|lee pila| Config[/etc/pam.d/servicio]\n    libpam --&gt; Modulos{Pila de m\u00f3dulos}\n    Modulos --&gt; Backend[Backends: /etc/shadow, LDAP, Kerberos, MFA...]\n    Backend --&gt; Resultado{\u00c9xito / Fallo}\n    Resultado --&gt; Servicio\n    Servicio --&gt; Usuario</code></pre>"},{"location":"UD3/pam/#componentes-y-flujo-de-trabajo","title":"Componentes y flujo de trabajo","text":"<ol> <li>Aplicaci\u00f3n PAM-aware: servicios como <code>sshd</code>, <code>sudo</code>, <code>login</code> o <code>gdm</code> que llaman a la biblioteca PAM.</li> <li>Biblioteca PAM (<code>libpam</code>): interpreta la configuraci\u00f3n en <code>/etc/pam.d/</code> y carga la pila de m\u00f3dulos que corresponda.</li> <li>M\u00f3dulos PAM: ejecutan las comprobaciones necesarias (consultar <code>/etc/shadow</code>, hacer bind contra LDAP, invocar SSSD, validar un OTP, etc.).</li> </ol> <pre><code>sequenceDiagram\n    autonumber\n    actor U as Usuario\n    participant S as Servicio (ej. sshd)\n    participant P as libpam\n    participant M as M\u00f3dulos PAM\n    participant B as Backend identidad\n    U-&gt;&gt;S: Usuario introduce credenciales\n    S-&gt;&gt;P: Llama a pam_authenticate()\n    P-&gt;&gt;M: Carga primer m\u00f3dulo de la pila\n    M-&gt;&gt;B: Valida (contrase\u00f1a, OTP, ticket...)\n    B--&gt;&gt;M: OK / KO\n    loop Siguiente m\u00f3dulo\n        M--&gt;&gt;P: Devuelve c\u00f3digo\n        P-&gt;&gt;M: Ejecuta m\u00f3dulo siguiente seg\u00fan control\n    end\n    P--&gt;&gt;S: Resultado global (PAM_SUCCESS / PAM_DENIED)\n    S--&gt;&gt;U: Acceso permitido o denegado</code></pre> <p>Si todos los m\u00f3dulos cr\u00edticos devuelven \u00e9xito, la autenticaci\u00f3n contin\u00faa. Un fallo en un m\u00f3dulo marcado como imprescindible provoca el rechazo del acceso, incluso si otros m\u00f3dulos han tenido \u00e9xito.</p>"},{"location":"UD3/pam/#como-se-lee-una-linea-de-pam","title":"C\u00f3mo se lee una l\u00ednea de PAM","text":"<p>Cada l\u00ednea de configuraci\u00f3n en <code>/etc/pam.d/&lt;servicio&gt;</code> define:</p> <pre><code>&lt;tipo&gt;  &lt;control&gt;  &lt;m\u00f3dulo&gt;  &lt;argumentos&gt;\n</code></pre> <ul> <li>Tipos:</li> <li><code>auth</code>: valida credenciales (contrase\u00f1a, token, llave p\u00fablica).</li> <li><code>account</code>: comprueba pol\u00edticas de acceso (vigencia de la cuenta, horarios, grupos).</li> <li><code>password</code>: gestiona el cambio o sincronizaci\u00f3n de contrase\u00f1as.</li> <li><code>session</code>: tareas que ocurren al abrir o cerrar sesi\u00f3n (montar directorios, registrar eventos).</li> <li>Controles (deciden qu\u00e9 hacer con el resultado):</li> <li><code>required</code>: debe pasar; aunque falle, se siguen evaluando m\u00f3dulos para no dar pistas al usuario.</li> <li><code>requisite</code>: si falla, detiene la pila inmediatamente y corta el acceso.</li> <li><code>sufficient</code>: si pasa y no hubo fallos previos, finaliza la pila con \u00e9xito.</li> <li><code>optional</code>: se ejecuta, pero su resultado solo cuenta si es el \u00fanico m\u00f3dulo del tipo.</li> <li><code>include</code>: inserta otra pila (frecuente en <code>common-auth</code> de Debian o <code>system-auth</code> de Red Hat).</li> </ul> <p>Truco mental: lee de arriba abajo y preg\u00fantate \u201c\u00bfqu\u00e9 pasa si el m\u00f3dulo falla?\u201d; la palabra clave del control te lo dice.</p>"},{"location":"UD3/pam/#donde-se-configura-pam","title":"D\u00f3nde se configura PAM","text":"<ul> <li><code>/etc/pam.d/</code>: un archivo por servicio define su pila (por ejemplo <code>sshd</code>, <code>sudo</code>, <code>login</code>).</li> <li><code>/etc/pam.d/common-*</code>: usados en Debian/Ubuntu para reutilizar pilas.</li> <li><code>/etc/pam.d/system-auth</code> y <code>/etc/pam.d/password-auth</code>: equivalentes en Red Hat, AlmaLinux o CentOS.</li> <li><code>/usr/lib/pam/</code>: ubicaci\u00f3n t\u00edpica de los m\u00f3dulos <code>.so</code>.</li> </ul>"},{"location":"UD3/pam/#ejemplo-comentado-debianubuntu-etcpamdsshd","title":"Ejemplo comentado (Debian/Ubuntu, <code>/etc/pam.d/sshd</code>)","text":"<pre><code>auth    required        pam_env.so                 # Carga variables de entorno definidas en /etc/security/pam_env.conf\nauth    requisite       pam_nologin.so             # Bloquea logins si existe /etc/nologin (mantener durante mantenimientos)\nauth    include         common-auth                # Llama a la pila compartida donde suele estar pam_unix, pam_sss...\naccount required        pam_nologin.so             # Segunda barrera: evita que cuentas sin shell sigan\naccount include         common-account             # Aplica pol\u00edticas de caducidad, grupos, etc.\nsession required        pam_limits.so              # Aplica l\u00edmites de recursos desde /etc/security/limits.conf\nsession include         common-session             # Resto de tareas (mkhomedir, systemd, logs...)\n</code></pre> <p>Los archivos <code>common-*</code> suelen contener la integraci\u00f3n con SSSD o LDAP, de forma que cualquier servicio que los <code>include</code> hereda la configuraci\u00f3n centralizada.</p>"},{"location":"UD3/pam/#escenarios-tipicos","title":"Escenarios t\u00edpicos","text":"<ul> <li>Solo cuentas locales: <code>pam_unix.so</code> consulta <code>/etc/shadow</code> y mantiene la autenticaci\u00f3n tradicional.</li> <li>LDAP/AD con cach\u00e9: <code>pam_sss.so</code> (SSSD) habla con el directorio, guarda credenciales en cach\u00e9 y permite logins sin conexi\u00f3n temporalmente.</li> <li>Doble factor (MFA): <code>pam_google_authenticator.so</code> o <code>pam_oath.so</code> a\u00f1ade un OTP tras la contrase\u00f1a.</li> <li>Control de horarios: <code>pam_time.so</code> permite o deniega accesos seg\u00fan d\u00eda y hora.</li> <li>Restricci\u00f3n por origen: <code>pam_access.so</code> bloquea logins desde determinados hosts o redes.</li> </ul> <pre><code>flowchart TD\n    subgraph Pila auth\n        A[pam_unix.so&lt;br&gt;required]\n        B[pam_sss.so&lt;br&gt;sufficient]\n        C[pam_google_authenticator.so&lt;br&gt;required]\n    end\n    subgraph Pila account\n        D[pam_time.so&lt;br&gt;required]\n        E[pam_access.so&lt;br&gt;required]\n    end\n    A --&gt; B --&gt; C --&gt; D --&gt; E\n    E --&gt;|Solo si todos OK| Resultado[(Acceso permitido)]</code></pre>"},{"location":"UD3/pam/#mini-caso-practico-exigir-otp-en-sudo","title":"Mini caso pr\u00e1ctico: exigir OTP en <code>sudo</code>","text":"<ol> <li>Preparaci\u00f3n </li> <li>Instala el paquete: <code>sudo apt install libpam-google-authenticator</code>.  </li> <li>Para el usuario administrador, ejecuta <code>google-authenticator</code> y guarda el c\u00f3digo QR/clave secreta.</li> <li>Configura PAM    Edita <code>/etc/pam.d/sudo</code> y a\u00f1ade arriba:    <pre><code>auth    required    pam_google_authenticator.so   nullok\n</code></pre></li> <li><code>required</code>: si falla, <code>sudo</code> niega el acceso.  </li> <li><code>nullok</code>: permite a usuarios que a\u00fan no inicializaron OTP seguir con contrase\u00f1a normal (activa solo durante migraci\u00f3n).</li> <li>Prueba controlada </li> <li>Abre una consola como root, por si algo va mal.  </li> <li>Ejecuta <code>sudo -k</code> para forzar un nuevo reto y comprueba que pide contrase\u00f1a + OTP.</li> <li>Revisi\u00f3n de logs </li> <li><code>sudo journalctl -t sudo</code> o <code>grep sudo /var/log/auth.log</code> para ver los c\u00f3digos de retorno.</li> </ol>"},{"location":"UD3/pam/#integracion-con-ldap-sssd-y-otros-backends","title":"Integraci\u00f3n con LDAP, SSSD y otros backends","text":"<ul> <li>LDAP directo (<code>pam_ldap.so</code>): el m\u00f3dulo dialoga con el servidor LDAP, verifica credenciales y obtiene atributos. Necesita definir servidores, DN de bind y pol\u00edtica de contrase\u00f1as. Es sensible a ca\u00eddas de red si no se acompa\u00f1a de cach\u00e9.</li> <li>SSSD (<code>pam_sss.so</code>): act\u00faa como intermediario que combina m\u00faltiples fuentes (LDAP, AD, Kerberos, local) y a\u00f1ade cach\u00e9 de credenciales. PAM delega la validaci\u00f3n en SSSD, mientras que <code>nsswitch.conf</code> usa <code>sss</code> para la resoluci\u00f3n de cuentas.</li> <li>Kerberos (<code>pam_krb5.so</code>): obtiene tickets TGT y gestiona renovaci\u00f3n. Puede convivir con LDAP/SSSD para resoluci\u00f3n de cuentas y autorizaciones.</li> <li>MFA/OTP (<code>pam_google_authenticator.so</code>, <code>pam_oath.so</code>, etc.): a\u00f1aden capas adicionales de verificaci\u00f3n.</li> </ul> <p>Cuando configuramos autenticaci\u00f3n centralizada, la secuencia t\u00edpica es:</p> <ol> <li><code>pam_sss.so</code> (o <code>pam_ldap.so</code>) valida la contrase\u00f1a contra el directorio.</li> <li><code>pam_unix.so</code> puede mantenerse como respaldo para cuentas locales.</li> <li>M\u00f3dulos de pol\u00edtica (<code>pam_access.so</code>, <code>pam_time.so</code>) deciden si se permite el acceso.</li> <li>En la fase <code>session</code>, m\u00f3dulos como <code>pam_mkhomedir.so</code> crean el directorio personal para usuarios remotos.</li> </ol>"},{"location":"UD3/pam/#checklist-antes-de-tocar-un-servicio","title":"Checklist antes de tocar un servicio","text":"<ul> <li>Ten una sesi\u00f3n root abierta en consola o TTY (si rompes PAM, ese ser\u00e1 tu salvavidas).</li> <li>Documenta el estado original (<code>cp /etc/pam.d/sshd{,.bak}</code>) para volver atr\u00e1s r\u00e1pido.</li> <li>Tras cada cambio, ejecuta <code>pamtester &lt;servicio&gt; &lt;usuario&gt; authenticate</code> si lo tienes instalado.</li> <li>Revisa logs en <code>/var/log/auth.log</code>, <code>/var/log/secure</code> o <code>journalctl -u servicio</code>.</li> <li>Planifica el rollback: \u00bfqu\u00e9 pasa si LDAP cae?, \u00bfhay cuentas locales de emergencia?</li> </ul> <p>Comprender PAM permite dise\u00f1ar pilas coherentes, a\u00f1adir autenticaci\u00f3n centralizada y aplicar pol\u00edticas sin perder control sobre la experiencia de inicio de sesi\u00f3n.</p>"},{"location":"UD3/pam2/","title":"Bloque 2 \u00b7 PAM y SSSD (Teor\u00eda y Laboratorio LDAP)","text":"<p>\ud83d\udd10 PAM (Pluggable Authentication Modules) \ud83e\udde9 \u00bfQu\u00e9 es PAM?</p> <p>PAM (Pluggable Authentication Modules) es el sistema modular que usa GNU/Linux para gestionar la autenticaci\u00f3n, autorizaci\u00f3n y sesi\u00f3n de usuarios.</p> <p>Funciona como una interfaz intermedia entre las aplicaciones (como login, ssh, sudo, su, lightdm, sddm, etc.) y los diferentes mecanismos de autenticaci\u00f3n (como /etc/passwd, LDAP, Kerberos o tokens).</p> <p>\ud83d\udca1 En pocas palabras:</p> <pre><code>    PAM decide qui\u00e9n puede acceder, c\u00f3mo se valida y qu\u00e9 se hace al iniciar/cerrar sesi\u00f3n.\n</code></pre>"},{"location":"UD3/teoria/","title":"\ud83e\uddf1 Bloque 1 \u2013 Conceptos Fundamentales de LDAP","text":"<p>\"Comprender un servicio de directorio es entender el coraz\u00f3n de la gesti\u00f3n de identidades.\"</p>"},{"location":"UD3/teoria/#1-introduccion-a-ldap-y-a-los-servicios-de-directorio","title":"1. Introducci\u00f3n a LDAP y a los servicios de directorio","text":"<p>Un servicio de directorio es una base de datos jer\u00e1rquica y optimizada para lectura que almacena informaci\u00f3n sobre recursos de red (usuarios, equipos, grupos) y facilita su b\u00fasqueda y autenticaci\u00f3n. LDAP es el protocolo est\u00e1ndar cliente-servidor para acceder y modificar esa informaci\u00f3n (sobre TCP/IP).</p> <p>Puntos clave del documento base: - LDAP ofrece b\u00fasqueda y recuperaci\u00f3n de informaci\u00f3n, y define operaciones para a\u00f1adir/actualizar/borrar entradas. - Origen X.500: LDAP simplifica X.500 para hacerlo pr\u00e1ctico en TCP/IP. Muchos servidores X.500 incorporaron pasarelas LDAP. - LDAP no es una BBDD relacional, ni un sistema de ficheros para objetos grandes, ni \u00f3ptimo para datos muy din\u00e1micos.</p>"},{"location":"UD3/teoria/#ldap-hoy","title":"LDAP HOY","text":"<pre><code>flowchart TB\n    subgraph LDAP_HOY[LDAP HOY]\n        direction TB\n        A[\"\u2705 Acceso est\u00e1ndar a directorios (TCP/IP)\"]\n        B[\"\u2705 Base de OpenLDAP/AD\"]\n        C[\"\u2705 Lecturas r\u00e1pidas, estructura jer\u00e1rquica\"]\n        D[\"\u2705 Seguridad: SASL, TLS/LDAPS\"]\n        E[\"\u26a0\ufe0f No es SQL ni sistema de ficheros\"]\n    end</code></pre>"},{"location":"UD3/teoria/#2-modelos-de-ldap","title":"2. Modelos de LDAP","text":"<p>LDAP se entiende mejor con cuatro modelos: informaci\u00f3n, nombrado, funcional y seguridad.</p>"},{"location":"UD3/teoria/#21-modelo-de-informacion","title":"2.1 Modelo de informaci\u00f3n","text":"<p>Este modelo provee de las estructuras y tipos de datos necesarios para construir un \u00e1rbol de directorios LDAP. La unidad b\u00e1sica en un directorio LDAP es la entrada. Una entrada se puede ver como un nodo en el \u00e1rbol de informaci\u00f3n de directorio (DIT). Una entrada contiene informaci\u00f3n sobre una instancia de uno o m\u00e1s objectClass. Estos objectClass son unos objetos que tienen ciertos atributos, algunos opcionales y otros obligatorios. Los atributos pueden ser de distintos tipos y cada tipo lleva asociado reglas de codificaci\u00f3n y de coincidencia que tienen en cuenta cosas como qu\u00e9 tipo de dato puede tomar este atributo o como compararlo en una b\u00fasqueda. Veamos como ser\u00eda una entrada simple.</p> <p>Ejemplo de entrada (LDIF):</p> <pre><code>dn: cn=Jose Martin,ou=People,dc=universidad,dc=edu\nobjectClass: inetOrgPerson\ncn: Jose Martin\nsn: Martin\nuid: jmartin\nmail: jmartin@universidad.edu\n</code></pre>"},{"location":"UD3/teoria/#22-modelo-de-nombrado","title":"2.2 Modelo de nombrado","text":"<p>Las entradas se organizan en \u00e1rbol. El DN se construye concatenando RDNs desde la ra\u00edz (sufijos <code>dc=...</code>). Case-insensitive en nombres de atributos; espacios en torno a <code>,</code> y <code>=</code> se ignoran.</p> <ul> <li>DN (Distinguished Name): la \u201cdirecci\u00f3n completa\u201d de una entrada. Es la suma de todos los RDN desde el nodo hasta la ra\u00edz, por ejemplo <code>cn=Ana Lopez,ou=Usuarios,dc=empresa,dc=com</code>.</li> <li>RDN (Relative Distinguished Name): el fragmento que identifica a la entrada dentro de su rama. En el ejemplo anterior, <code>cn=Ana Lopez</code> es el RDN dentro de <code>ou=Usuarios</code>.</li> <li>OU (Organizational Unit): contenedor l\u00f3gico para agrupar entradas relacionadas (departamentos, equipos, aulas). Aparece como <code>ou=...</code>.</li> <li>CN (Common Name): nombre com\u00fan de una entrada, usado para personas o grupos (<code>cn=Ana Lopez</code>, <code>cn=admins</code>).</li> <li>DC (Domain Component): fragmento del dominio DNS usado en la ra\u00edz del directorio (<code>dc=empresa</code>, <code>dc=com</code>), ayuda a que la jerarqu\u00eda refleje el dominio de la organizaci\u00f3n.</li> </ul> <pre><code>graph TD\n    DC[dc=empresa,dc=com]\n    DC --&gt; OU1[ou=Usuarios]\n    DC --&gt; OU2[ou=Departamentos]\n    DC --&gt; OU3[ou=Grupos]\n    OU2 --&gt; OU21[ou=Ventas]\n    OU2 --&gt; OU22[ou=Soporte]\n    OU1 --&gt; CN1[cn=Ana Lopez]\n    OU3 --&gt; G1[cn=admins]</code></pre>"},{"location":"UD3/teoria/#23-modelo-funcional","title":"2.3 Modelo funcional","text":"<p>Operaciones del protocolo: <code>bind</code> (autenticaci\u00f3n), <code>search</code> (b\u00fasqueda), actualizaciones (<code>add/modify/delete</code>), <code>unbind</code>.</p> <pre><code>sequenceDiagram\n    participant C as Cliente LDAP\n    participant S as Servidor OpenLDAP (slapd)\n    participant DB as Backend (mdb/hdb)\n    C-&gt;&gt;S: Bind (autenticaci\u00f3n)\n    C-&gt;&gt;S: Search (base, scope, filter, attrs)\n    S-&gt;&gt;DB: Eval\u00faa y aplica filtros\n    DB--&gt;&gt;S: Entradas coincidentes\n    S--&gt;&gt;C: Resultado (atributos solicitados)\n    C-&gt;&gt;S: Add/Modify/Delete (opcional)\n    S--&gt;&gt;C: \u00c9xito/Error\n    C--&gt;&gt;S: Unbind (cierre)</code></pre>"},{"location":"UD3/teoria/#24-modelo-de-seguridad","title":"2.4 Modelo de seguridad","text":"<ul> <li>Autenticaci\u00f3n (simple o SASL), cifrado (TLS/LDAPS), y ACL para autorizaci\u00f3n. LDAPv3 integra m\u00e9todos, TLS es operaci\u00f3n extendida est\u00e1ndar; LDAPS usa puerto 636.</li> </ul> <pre><code>graph TD\n    U[Cliente] --&gt;|bind| A[Autenticaci\u00f3n]\n    A --&gt;|SASL/Password| T[TLS/LDAPS]\n    A --&gt; S[Servidor OpenLDAP]\n    S --&gt; ACL[ACL: autorizaci\u00f3n por DN/atributos]\n    ACL --&gt; S</code></pre>"},{"location":"UD3/teoria/#3-busquedas-ldap-base-alcance-y-filtros","title":"3. B\u00fasquedas LDAP: base, alcance y filtros","text":"<p>Cuando ejecutamos un <code>search</code> estamos diciendo al servidor qu\u00e9 parte del \u00e1rbol queremos examinar y qu\u00e9 condiciones deben cumplir las entradas que devuelva. Piensa en tres preguntas:</p> <ol> <li> <p>\u00bfD\u00f3nde empiezo? \u2192 Base DN    Es el punto del \u00e1rbol a partir del cual se busca (<code>dc=empresa,dc=com</code>, <code>ou=Usuarios,dc=empresa,dc=com</code>, etc.).</p> </li> <li> <p>\u00bfHasta d\u00f3nde bajo? \u2192 Scope (alcance)  </p> </li> <li><code>base</code>: solo consulta la entrada indicada como base.  </li> <li><code>oneLevel</code>: revisa sus hijos directos (un \u00fanico nivel).  </li> <li> <p><code>subtree</code>: baja por todo el sub\u00e1rbol.</p> </li> <li> <p>\u00bfQu\u00e9 estoy buscando? \u2192 Filtro    Es el conjunto de condiciones sobre atributos, parecido a un <code>WHERE</code>.</p> </li> </ol> <pre><code>graph TD\n    Cliente[Cliente LDAP] --&gt;|search| Servidor\n    Servidor --&gt; Base[Base DN]\n    Servidor --&gt; Alcance[Scope: base / oneLevel / subtree]\n    Servidor --&gt; Filtro[condiciones]\n    Filtro --&gt; Resultado[Entradas devueltas]\n    Resultado --&gt; Cliente</code></pre>"},{"location":"UD3/teoria/#31-scope-y-filtros-en-accion","title":"3.1 Scope y filtros en acci\u00f3n","text":"Scope \u00bfQu\u00e9 abarca? Ejemplo de uso <code>base</code> Solo la entrada del base DN Leer atributos de <code>cn=admin,dc=empresa,dc=com</code> <code>oneLevel</code> Los hijos directos (1 nivel) Listar usuarios dentro de <code>ou=Usuarios,dc=empresa,dc=com</code> <code>subtree</code> Toda la rama descendiente Inventariar todas las entradas bajo <code>dc=empresa,dc=com</code> Tipo de filtro Sintaxis \u00bfQu\u00e9 hace? Presencia <code>(atributo=*)</code> Devuelve entradas que tengan ese atributo Igualdad <code>(atributo=valor)</code> Coincidencia exacta Subcadenas <code>(atributo=valor*)</code> Compara prefijos o sufijos (<code>*valor*</code>) OR <code>(|(cond1)(cond2))</code> Entradas que cumplan al menos una condici\u00f3n AND <code>(&amp;(cond1)(cond2))</code> Entradas que cumplan todas las condiciones NOT <code>(!(cond))</code> Entradas que NO cumplan la condici\u00f3n <p>Los filtros se pueden anidar: <code>(&amp;(objectClass=person)(|(sn=Lopez)(sn=Perez)))</code> devuelve personas con apellido L\u00f3pez o P\u00e9rez.</p>"},{"location":"UD3/teoria/#4-ldif-y-dsml","title":"4. LDIF y DSML","text":"<p>LDIF: formato de texto para representar/alterar entradas y esquemas; soporta cambios (<code>changetype: modify</code>) y Base64 para binarios. DSML: representaci\u00f3n XML \u00fatil para integraci\u00f3n con aplicaciones/servicios web.</p> <pre><code>  graph LR\n      L[Servidor LDAP] &lt;--&gt;|import/export| F[LDIF .ldif]\n      L --&gt; X[DSML/XML]\n      X --&gt; Apps[Integraci\u00f3n con apps/servicios]</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/","title":"\ud83d\udd27 Actividades \u2013 Bloque 1: Conceptos Fundamentales de LDAP","text":"<p>Todas las actividades se pueden resolver con los conceptos y ejemplos de la Teor\u00eda.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#nivel-1-fundamentos","title":"Nivel 1 \u2013 Fundamentos","text":""},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#1-comparativa-ldap-vs-sql","title":"1. Comparativa LDAP vs SQL","text":"<p>Completa una tabla t\u00e9cnica con 6 criterios: estructura, rendimiento (lectura/escritura), seguridad, transacciones, esquema, casos de uso.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#2-vocabulario-dit","title":"2. Vocabulario DIT","text":"<p>Dado un \u00e1rbol, identifica DN, RDN, OU, CN y DC de 5 entradas diferentes.</p> <pre><code>graph TD\n    A[dc=instituto,dc=edu]\n    A--&gt;B[ou=alumnos]\n    A--&gt;C[ou=profesores]\n    B--&gt;D[cn=Maria Lopez]\n    C--&gt;E[cn=Juan Perez]</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#nivel-2-aplicacion","title":"Nivel 2 \u2013 Aplicaci\u00f3n","text":""},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#3-disena-tu-dit-empresa","title":"3. Dise\u00f1a tu DIT (empresa)","text":"<p>Crea un DIT para <code>dc=empresa,dc=com</code> con: - <code>ou=Usuarios</code>, <code>ou=Departamentos</code> (Ventas/Soporte), <code>ou=Grupos</code>. - 4 usuarios <code>inetOrgPerson</code> y 2 grupos (<code>groupOfNames</code> con <code>member:</code> DN). - Diagrama Mermaid del DIT.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#4-ldif-de-altas-y-cambios","title":"4. LDIF de altas y cambios","text":"<p>Crea <code>altas.ldif</code> con OU+2 usuarios. Crea <code>cambios.ldif</code> con add de un atributo y replace de otro. Ejecuta: <pre><code>ldapadd   -x -H ldap://127.0.0.1 -D \"cn=admin,dc=empresa,dc=com\" -W -f altas.ldif\nldapmodify -x -H ldap://127.0.0.1 -D \"cn=admin,dc=empresa,dc=com\" -W -f cambios.ldif\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#5-busquedas-con-base-alcance-y-filtros","title":"5. B\u00fasquedas con base, alcance y filtros","text":"<p>1) Devuelve solo la entrada base (alcance <code>base</code>). 2) Lista hijos directos de <code>ou=Usuarios</code> (alcance <code>one</code>). 3) Encuentra en todo el sub\u00e1rbol a usuarios con <code>sn=Lopez</code> (alcance <code>sub</code>). 4) Filtro combinado: <code>inetOrgPerson</code> de Ventas o Soporte cuyo <code>cn</code> empiece por <code>M</code>.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#nivel-3-analisiscreacion","title":"Nivel 3 \u2013 An\u00e1lisis/Creaci\u00f3n","text":""},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#6-esquema-personalizado","title":"6. Esquema personalizado","text":"<p>Define en LDIF el atributo <code>cicloFormativo</code> (Directory String) y la clase <code>alumnoFP</code> (SUP <code>inetOrgPerson</code>, MUST <code>cn/sn/uid</code>, MAY <code>mail/cicloFormativo/tutor</code>).</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#7-secuencia-funcional-ldap","title":"7. Secuencia funcional LDAP","text":"<p>Crea un sequenceDiagram (Mermaid) con: <code>bind \u2192 search \u2192 result \u2192 modify \u2192 result \u2192 unbind</code>.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#8-dsml-y-exportacion","title":"8. DSML y exportaci\u00f3n","text":"<p>Explica cu\u00e1ndo usar\u00edas DSML en lugar de LDIF en un entorno real y dibuja un flujo simple (Mermaid) que lo muestre.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#nivel-4-escenario-profesional","title":"Nivel 4 \u2013 Escenario profesional","text":""},{"location":"UD3/unidad-didactica-ldap/docs/ldap/actividades/#9-arquitectura-con-replica","title":"9. Arquitectura con r\u00e9plica","text":"<p>Dise\u00f1a (Mermaid) una arquitectura con slapd maestro y r\u00e9plica, 3 aplicaciones cliente (una de solo lectura), y se\u00f1ala qu\u00e9 peticiones van al maestro y cu\u00e1les a la r\u00e9plica. A\u00f1ade una nota sobre TLS y ACL.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/","title":"\u2705 Soluciones \u2013 Bloque 1","text":""},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#1-comparativa-ldap-vs-sql-posible-solucion","title":"1. Comparativa LDAP vs SQL (posible soluci\u00f3n)","text":"Criterio LDAP (DIT) SQL (Relacional) Estructura \u00c1rbol (DN/RDN/OU/CN/DC) Tablas/filas/columnas Rendimiento Lecturas/b\u00fasquedas muy r\u00e1pidas Transacciones/joins complejos Seguridad ACL, SASL, TLS/LDAPS Roles/privilegios Transacciones No ACID completo ACID Esquema ObjectClass (MUST/MAY), atributos con sintaxis DDL (tipos, constraints) Casos de uso Identidades, autenticaci\u00f3n, correo, PKI Datos de negocio, inventarios, facturas"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#2-vocabulario-dit-arbol-del-enunciado","title":"2. Vocabulario DIT (\u00e1rbol del enunciado)","text":"<ul> <li>DN de Mar\u00eda: <code>cn=Maria Lopez,ou=alumnos,dc=instituto,dc=edu</code> </li> <li>RDN de Mar\u00eda: <code>cn=Maria Lopez</code> </li> <li>OU: <code>ou=alumnos</code>, <code>ou=profesores</code> </li> <li>CN: <code>cn=Maria Lopez</code>, <code>cn=Juan Perez</code> </li> <li>DC: <code>dc=instituto</code>, <code>dc=edu</code> </li> </ul>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#3-dit-empresa-ejemplo-de-solucion","title":"3. DIT (empresa) \u2013 ejemplo de soluci\u00f3n","text":"<pre><code>graph TD\n    E[dc=empresa,dc=com]\n    E--&gt;U[ou=Usuarios]\n    E--&gt;D[ou=Departamentos]\n    E--&gt;G[ou=Grupos]\n    D--&gt;V[ou=Ventas]\n    D--&gt;S[ou=Soporte]\n    U--&gt;A[cn=Ana Torres]\n    U--&gt;L[cn=Luis Gomez]\n    U--&gt;M[cn=Maria Perez]\n    U--&gt;R[cn=Raul Diaz]\n    G--&gt;GA[cn=admins]\n    G--&gt;GU[cn=usuarios]</code></pre> <p>Grupos <code>groupOfNames</code>: <pre><code>dn: cn=admins,ou=Grupos,dc=empresa,dc=com\nobjectClass: groupOfNames\ncn: admins\nmember: cn=Ana Torres,ou=Usuarios,dc=empresa,dc=com\n\ndn: cn=usuarios,ou=Grupos,dc=empresa,dc=com\nobjectClass: groupOfNames\ncn: usuarios\nmember: cn=Luis Gomez,ou=Usuarios,dc=empresa,dc=com\nmember: cn=Maria Perez,ou=Usuarios,dc=empresa,dc=com\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#4-ldif-de-altascambios-ejemplo-valido","title":"4. LDIF de altas/cambios (ejemplo v\u00e1lido)","text":"<p><code>altas.ldif</code> <pre><code>dn: ou=Usuarios,dc=empresa,dc=com\nobjectClass: organizationalUnit\nou: Usuarios\n\ndn: cn=Ana Torres,ou=Usuarios,dc=empresa,dc=com\nobjectClass: inetOrgPerson\ncn: Ana Torres\nsn: Torres\nuid: atorre\nmail: atorre@empresa.com\nuserPassword: {SSHA}abc123\n\ndn: cn=Luis Gomez,ou=Usuarios,dc=empresa,dc=com\nobjectClass: inetOrgPerson\ncn: Luis Gomez\nsn: Gomez\nuid: lgomez\nmail: lgomez@empresa.com\nuserPassword: {SSHA}xyz987\n</code></pre></p> <p><code>cambios.ldif</code> <pre><code>dn: cn=Ana Torres,ou=Usuarios,dc=empresa,dc=com\nchangetype: modify\nadd: telephoneNumber\ntelephoneNumber: +34 600 111 222\n-\nreplace: mail\nmail: ana.torres@empresa.com\n</code></pre></p> <p>Comandos: <pre><code>ldapadd   -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=empresa,dc=com\" -W -f altas.ldif\nldapmodify -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=empresa,dc=com\" -W -f cambios.ldif\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#5-busquedas-base-alcance-y-filtros","title":"5. B\u00fasquedas: base, alcance y filtros","text":"<p>1) Solo la base (alcance <code>base</code>): <pre><code>ldapsearch -x -b \"dc=empresa,dc=com\" -s base \"(objectClass=*)\" dn\n</code></pre></p> <p>2) Hijos directos de <code>ou=Usuarios</code> (onelevel): <pre><code>ldapsearch -x -b \"ou=Usuarios,dc=empresa,dc=com\" -s one \"(objectClass=inetOrgPerson)\" cn\n</code></pre></p> <p>3) Sub\u00e1rbol completo (subtree) con <code>sn=Lopez</code>: <pre><code>ldapsearch -x -b \"dc=empresa,dc=com\" -s sub \"(sn=Lopez)\" cn mail\n</code></pre></p> <p>4) Filtro combinado (Ventas o Soporte cuyo <code>cn</code> empiece por M): <pre><code>ldapsearch -x -b \"dc=empresa,dc=com\" -s sub \\\n  \"(&amp; (objectClass=inetOrgPerson) (|(ou=Ventas)(ou=Soporte)) (cn=M*))\" cn ou\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#6-esquema-personalizado-solucion","title":"6. Esquema personalizado (soluci\u00f3n)","text":"<pre><code>dn: cn=schema,cn=config\nchangetype: modify\nadd: attributetypes\nattributetypes: (1.3.6.1.4.1.9999.1 NAME 'cicloFormativo'\n  DESC 'Ciclo formativo del alumno'\n  EQUALITY caseIgnoreMatch\n  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\n\nadd: objectclasses\nobjectclasses: (1.3.6.1.4.1.9999.2 NAME 'alumnoFP'\n  SUP inetOrgPerson\n  STRUCTURAL\n  MUST (cn $ sn $ uid)\n  MAY (mail $ cicloFormativo $ tutor) )\n</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#7-secuencia-funcional-ldap-solucion","title":"7. Secuencia funcional LDAP (soluci\u00f3n)","text":"<pre><code>sequenceDiagram\n    participant C as Cliente\n    participant S as Servidor LDAP\n    C-&gt;&gt;S: Bind\n    C-&gt;&gt;S: Search (base/scope/filter)\n    S--&gt;&gt;C: Resultados\n    C-&gt;&gt;S: Modify\n    S--&gt;&gt;C: OK\n    C--&gt;&gt;S: Unbind</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/soluciones/#8-dsml-y-exportacion-solucion","title":"8. DSML y exportaci\u00f3n (soluci\u00f3n)","text":"<p>Cu\u00e1ndo DSML: cuando se necesita intercambio XML con aplicaciones/servicios web (heterog\u00e9neos) que no consumen LDIF. Flujo: <pre><code>flowchart LR\n    L[Servidor LDAP] --&gt;|export XML| D[DSML]\n    D --&gt; S[Servicio externo / App]</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/","title":"\ud83e\uddf1 Bloque 1 \u2013 Conceptos Fundamentales de LDAP","text":"<p>\"Comprender un servicio de directorio es entender el coraz\u00f3n de la gesti\u00f3n de identidades.\"</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#1-introduccion-a-ldap-y-a-los-servicios-de-directorio","title":"1. Introducci\u00f3n a LDAP y a los servicios de directorio","text":"<p>Un servicio de directorio es una base de datos jer\u00e1rquica y optimizada para lectura que almacena informaci\u00f3n sobre recursos de red (usuarios, equipos, grupos) y facilita su b\u00fasqueda y autenticaci\u00f3n. LDAP es el protocolo est\u00e1ndar cliente-servidor para acceder y modificar esa informaci\u00f3n (sobre TCP/IP).</p> <p>Puntos clave del documento base: - LDAP ofrece b\u00fasqueda y recuperaci\u00f3n de informaci\u00f3n, y define operaciones para a\u00f1adir/actualizar/borrar entradas. - Origen X.500: LDAP simplifica X.500 para hacerlo pr\u00e1ctico en TCP/IP. Muchos servidores X.500 incorporaron pasarelas LDAP. - LDAP no es una BBDD relacional, ni un sistema de ficheros para objetos grandes, ni \u00f3ptimo para datos muy din\u00e1micos.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#infografia-ascii-ldap-hoy","title":"Infograf\u00eda (ASCII): LDAP HOY","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    LDAP HOY                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u2705 Acceso est\u00e1ndar a directorios (TCP/IP)     \u2502\n\u2502 \u2705 Base de OpenLDAP/AD                        \u2502\n\u2502 \u2705 Lecturas r\u00e1pidas, estructura jer\u00e1rquica     \u2502\n\u2502 \u2705 Seguridad: SASL, TLS/LDAPS                  \u2502\n\u2502 \u26a0\ufe0f No es SQL ni sistema de ficheros            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#2-modelos-de-ldap-vision-completa","title":"2. Modelos de LDAP (visi\u00f3n completa)","text":"<p>LDAP se entiende mejor con cuatro modelos: informaci\u00f3n, nombrado, funcional y seguridad.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#21-modelo-de-informacion","title":"2.1 Modelo de informaci\u00f3n","text":"<ul> <li>Entrada (entry) = nodo del DIT, con DN y atributos que cumplen uno o m\u00e1s objectClass; cada clase define atributos MUST/MAY y sus reglas de coincidencia.</li> </ul> <pre><code>classDiagram\n    class Entry {\n      +dn: DistinguishedName\n      +atributos: {tipo: valor}\n    }\n    class ObjectClass {\n      +name\n      +must[]\n      +may[]\n    }\n    class Atributo {\n      +tipo\n      +valor\n    }\n    Entry --&gt; ObjectClass : \"usa\"\n    Entry --&gt; Atributo : \"contiene\"</code></pre> <p>Ejemplo de entrada (LDIF): <pre><code>dn: cn=Jose Martin,ou=People,dc=universidad,dc=edu\nobjectClass: inetOrgPerson\ncn: Jose Martin\nsn: Martin\nuid: jmartin\nmail: jmartin@universidad.edu\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#22-modelo-de-nombrado","title":"2.2 Modelo de nombrado","text":"<p>Las entradas se organizan en \u00e1rbol. El DN se construye concatenando RDNs desde la ra\u00edz (sufijos <code>dc=...</code>). Case-insensitive en nombres de atributos; espacios en torno a <code>,</code> y <code>=</code> se ignoran.</p> <pre><code>graph TD\n    DC[dc=empresa,dc=com]\n    DC --&gt; OU1[ou=Usuarios]\n    DC --&gt; OU2[ou=Departamentos]\n    DC --&gt; OU3[ou=Grupos]\n    OU2 --&gt; OU21[ou=Ventas]\n    OU2 --&gt; OU22[ou=Soporte]\n    OU1 --&gt; CN1[cn=Ana Lopez]\n    OU3 --&gt; G1[cn=admins]</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#23-modelo-funcional","title":"2.3 Modelo funcional","text":"<p>Operaciones del protocolo: <code>bind</code> (autenticaci\u00f3n), <code>search</code> (b\u00fasqueda), actualizaciones (<code>add/modify/delete</code>), <code>unbind</code>.</p> <pre><code>sequenceDiagram\n    participant C as Cliente LDAP\n    participant S as Servidor OpenLDAP (slapd)\n    participant DB as Backend (mdb/hdb)\n    C-&gt;&gt;S: Bind (autenticaci\u00f3n)\n    C-&gt;&gt;S: Search (base, scope, filter, attrs)\n    S-&gt;&gt;DB: Eval\u00faa y aplica filtros\n    DB--&gt;&gt;S: Entradas coincidentes\n    S--&gt;&gt;C: Resultado (atributos solicitados)\n    C-&gt;&gt;S: Add/Modify/Delete (opcional)\n    S--&gt;&gt;C: \u00c9xito/Error\n    C--&gt;&gt;S: Unbind (cierre)</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#24-modelo-de-seguridad","title":"2.4 Modelo de seguridad","text":"<ul> <li>Autenticaci\u00f3n (simple o SASL), cifrado (TLS/LDAPS), y ACL para autorizaci\u00f3n. LDAPv3 integra m\u00e9todos, TLS es operaci\u00f3n extendida est\u00e1ndar; LDAPS usa puerto 636.</li> </ul> <pre><code>graph TD\n    U[Cliente] --&gt;|bind| A[Autenticaci\u00f3n]\n    A --&gt;|SASL/Password| T[TLS/LDAPS]\n    A --&gt; S[Servidor OpenLDAP]\n    S --&gt; ACL[ACL: autorizaci\u00f3n por DN/atributos]\n    ACL --&gt; S</code></pre>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#3-busquedas-ldap-base-alcance-y-filtros","title":"3. B\u00fasquedas LDAP: base, alcance y filtros","text":"<p>Un search define: base DN, alcance (base / un nivel / sub\u00e1rbol) y un filtro.</p> <pre><code>flowchart TD\n    A[Cliente LDAP] --&gt;|search| B[Servidor]\n    B --&gt; C[(DIT)]\n    B --&gt; D1[Base DN]\n    B --&gt; D2[Scope: base / onelevel / subtree]\n    B --&gt; D3[Filtro (ej. (&amp;(objectClass=person)(sn=Lopez)))]\n    C --&gt; B --&gt; A</code></pre> <p>Alcance: - base \u2192 solo la entrada base. - onelevel \u2192 hijos directos (no incluye la base). - subtree \u2192 desde la base hacia abajo.</p> <p>Tipos de filtro: presencia, igualdad, subcadenas, rangos, AND/OR/NOT.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#4-ldif-y-dsml","title":"4. LDIF y DSML","text":"<p>LDIF: formato de texto para representar/alterar entradas y esquemas; soporta cambios (<code>changetype: modify</code>) y Base64 para binarios. DSML: representaci\u00f3n XML \u00fatil para integraci\u00f3n con aplicaciones/servicios web.</p> <pre><code>flowchart LR\n    L[Servidor LDAP] &lt;--&gt;|import/export| F[LDIF .ldif]\n    L --&gt; X[DSML (XML)]\n    X --&gt; Apps[Integraci\u00f3n con apps/servicios]</code></pre> <p>Ejemplo LDIF \u2013 a\u00f1adir OU y usuario: <pre><code>dn: ou=People,dc=plainjoe,dc=org\nobjectClass: organizationalUnit\nou: People\n\ndn: cn=Sam Smith,ou=People,dc=plainjoe,dc=org\nobjectClass: person\nobjectClass: organizationalPerson\ncn: Sam Smith\nsn: Smith\n</code></pre></p> <p>Ejemplo LDIF \u2013 modify y schema (ilustrativo): <pre><code>dn: cn=jose martin,dc=ldap,dc=com\nchangetype: modify\nadd: description\ndescription: aqui va la descripcion\n-\nreplace: cn\ncn: pepe martin\n</code></pre> <pre><code>objectclasses: (2.5.6.6 NAME 'person' SUP top MUST (sn $ cn) MAY (password $ telephoneNumber $ description))\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#5-openldap-slapd-y-caracteristicas-relevantes","title":"5. OpenLDAP (slapd) y caracter\u00edsticas relevantes","text":"<p>slapd implementa LDAPv3, soporta SASL, TLS/SSL, ACL, m\u00faltiples backends, i18n, control por topolog\u00eda, etc.</p> <p>A\u00f1adir entradas con <code>slapadd</code> vs herramientas en red (<code>ldapadd/ldapmodify</code>): <code>slap*</code> operan directo sobre BD; <code>ldap*</code> usan protocolo.</p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#6-ejemplos-de-comandos-para-laboratorio","title":"6. Ejemplos de comandos (para laboratorio)","text":"<p>Base supuesta: <code>dc=empresa,dc=com</code> en <code>localhost</code>.</p> <p>B\u00fasqueda \u201clistarlo todo\u201d desde la base: <pre><code>ldapsearch -x -H ldap://127.0.0.1:389 \\\n  -b \"dc=empresa,dc=com\" \"(objectClass=*)\" dn\n</code></pre></p> <p>Alta de OU y usuario (por red): <pre><code>ldapadd -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=empresa,dc=com\" -W -f alta.ldif\n</code></pre> <code>alta.ldif</code>: <pre><code>dn: ou=Usuarios,dc=empresa,dc=com\nobjectClass: organizationalUnit\nou: Usuarios\n\ndn: cn=Ana Torres,ou=Usuarios,dc=empresa,dc=com\nobjectClass: inetOrgPerson\ncn: Ana Torres\nsn: Torres\nuid: atorre\nmail: atorre@empresa.com\nuserPassword: {SSHA}abc123\n</code></pre></p> <p>Modificar atributo (replace): <pre><code>ldapmodify -x -H ldap://127.0.0.1:389 -D \"cn=admin,dc=empresa,dc=com\" -W -f cambio.ldif\n</code></pre> <code>cambio.ldif</code>: <pre><code>dn: cn=Ana Torres,ou=Usuarios,dc=empresa,dc=com\nchangetype: modify\nreplace: mail\nmail: ana.torres@empresa.com\n</code></pre></p>"},{"location":"UD3/unidad-didactica-ldap/docs/ldap/teoria/#7-aplicaciones-que-usan-ldap","title":"7. Aplicaciones que usan LDAP","text":"<p>P\u00e1ginas blancas, Autenticaci\u00f3n/Autorizaci\u00f3n, Correo, Perfiles, PKI.</p> <pre><code>graph LR\n    LDAP[(Directorio LDAP)]\n    LDAP --&gt; PB[P\u00e1ginas Blancas]\n    LDAP --&gt; AA[Autenticaci\u00f3n / Autorizaci\u00f3n]\n    LDAP --&gt; EM[Correo]\n    LDAP --&gt; PF[Perfiles/Preferencias]\n    LDAP --&gt; PKI[PKI / Certificados]</code></pre>"},{"location":"recordatorios/commandosLinux/","title":"Comandos Linux","text":""},{"location":"recordatorios/commandosLinux/#objetivo","title":"Objetivo","text":"<p>Realizar una serie de ejercicios pr\u00e1cticos para reforzar el uso de comandos b\u00e1sicos y avanzados en Linux, siguiendo una progresi\u00f3n de lo m\u00e1s simple a lo m\u00e1s complejo. Aqu\u00ed se incluir\u00e1n los comandos b\u00e1sicos y avanzados para trabajar en sistemas Linux.</p>"},{"location":"recordatorios/commandosLinux/#introduccion","title":"Introducci\u00f3n","text":""},{"location":"recordatorios/commandosLinux/#ejercicio-1-exploracion-basica","title":"Ejercicio 1: Exploraci\u00f3n b\u00e1sica","text":"<ol> <li>Introduce el comando para mostrar tu ubicaci\u00f3n actual en el sistema.</li> <li>Introduce el comando para listar los archivos y directorios en tu ubicaci\u00f3n actual.</li> <li>Introduce el comando para crear un archivo vac\u00edo llamado <code>prueba.txt</code> en tu ubicaci\u00f3n actual.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-2-navegacion-y-directorios","title":"Ejercicio 2: Navegaci\u00f3n y directorios","text":"<ol> <li>Introduce el comando para cambiar al directorio ra\u00edz del sistema.</li> <li>Introduce el comando para crear un directorio llamado <code>nuevo_directorio</code> en tu ubicaci\u00f3n actual.</li> <li>Introduce el comando para eliminar el directorio <code>nuevo_directorio</code> que creaste anteriormente.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-3-visualizacion-de-contenido","title":"Ejercicio 3: Visualizaci\u00f3n de contenido","text":"<ol> <li>Introduce el comando para mostrar el contenido del archivo <code>/etc/passwd</code>.</li> <li>Introduce el comando para contar las l\u00edneas de un archivo llamado <code>prueba.txt</code>.</li> <li>Introduce el comando para buscar la palabra \"root\" en el archivo <code>/etc/passwd</code>.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicios-avanzados","title":"Ejercicios avanzados","text":""},{"location":"recordatorios/commandosLinux/#ejercicio-1-listado-de-archivos-y-directorios","title":"Ejercicio 1: Listado de archivos y directorios","text":"<ol> <li>Introduce el comando para listar todos los archivos y directorios, incluidos los ocultos, en el directorio ra\u00edz.</li> <li>Introduce el comando para obtener una lista detallada de todos los archivos y directorios, incluidos los contenidos de los subdirectorios, en <code>/home</code>.</li> <li>Introduce el comando para listar los nombres de los archivos en tu directorio actual que comiencen con la letra <code>a</code>.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-2-variables-de-entorno","title":"Ejercicio 2: Variables de entorno","text":"<ol> <li>Introduce el comando para mostrar el valor de la variable de entorno que indica el directorio de inicio del usuario actual.</li> <li>Introduce el comando para mostrar el valor de la variable de entorno que contiene las rutas de b\u00fasqueda de comandos.</li> <li>Introduce el comando para a\u00f1adir un nuevo directorio a la variable de entorno PATH.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-3-gestion-de-directorios","title":"Ejercicio 3: Gesti\u00f3n de directorios","text":"<ol> <li>Introduce un comando para crear un directorio llamado <code>D1</code> en tu directorio de trabajo.</li> <li>Introduce un comando para copiar todos los archivos de tu directorio de trabajo al directorio <code>D1</code>.</li> <li>Introduce un comando para mover un archivo llamado <code>archivo.txt</code> desde tu directorio de trabajo al directorio <code>D1</code>.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-4-permisos-y-propietarios","title":"Ejercicio 4: Permisos y propietarios","text":"<ol> <li>Introduce un comando para cambiar los permisos de un archivo para que solo el propietario pueda modificarlo.</li> <li>Introduce un comando para cambiar el propietario de un archivo al usuario <code>root</code>.</li> <li>Introduce un comando para a\u00f1adir permisos de ejecuci\u00f3n a todos los archivos con extensi\u00f3n <code>.sh</code> en tu directorio actual.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-5-busqueda-y-manipulacion-de-archivos","title":"Ejercicio 5: B\u00fasqueda y manipulaci\u00f3n de archivos","text":"<ol> <li>Introduce un comando para buscar en tu directorio personal todos los archivos que comiencen con la letra <code>t</code> y modificar su fecha de actualizaci\u00f3n a la actual.</li> <li>Introduce un comando para buscar todos los archivos en el sistema que sean menores de 1 MB y pertenezcan al usuario <code>root</code>, y guarda sus nombres en un archivo llamado <code>ficheros_peque\u00f1os</code>.</li> <li>Introduce un comando para buscar todos los archivos del usuario <code>guest</code> que ocupen m\u00e1s de 5000 MB y tengan permisos de escritura, y elim\u00ednalos.</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-6-procesamiento-de-contenido","title":"Ejercicio 6: Procesamiento de contenido","text":"<ol> <li>Introduce un comando para mostrar el contenido del archivo <code>/etc/passwd</code> y reemplazar los dos puntos (<code>:</code>) por guiones bajos (<code>_</code>).</li> <li>Introduce un comando para mostrar solo las l\u00edneas del archivo <code>/etc/passwd</code> que correspondan al usuario <code>root</code>.</li> <li>Introduce un comando para contar el n\u00famero de l\u00edneas en el archivo <code>/etc/passwd</code> que contengan la palabra \"bash\".</li> </ol>"},{"location":"recordatorios/commandosLinux/#ejercicio-7-redirecciones","title":"Ejercicio 7: Redirecciones","text":"<ol> <li>Introduce un comando para redirigir la salida est\u00e1ndar del contenido del archivo <code>/etc/shadow</code> al final de un archivo llamado <code>salida.txt</code> y los errores a un archivo llamado <code>errores.txt</code>.</li> <li>Introduce un comando para obtener las tres \u00faltimas l\u00edneas de un archivo llamado <code>t1</code> y guardar el resultado en un archivo llamado <code>resultado.txt</code>.</li> <li>Introduce un comando para redirigir la salida de un comando que liste los archivos en el directorio actual a un archivo llamado <code>listado.txt</code>, y los errores a un archivo llamado <code>errores_listado.txt</code>.</li> </ol>"},{"location":"recordatorios/commandosLinux/#resumen-de-comandos-que-se-utilizan-en-los-ejercicios","title":"Resumen de comandos que se utilizan en los ejercicios.","text":"Comando Descripci\u00f3n Ejemplo <code>pwd</code> Muestra el directorio actual de trabajo. <code>pwd</code> devuelve <code>/home/usuario</code> si est\u00e1s en tu directorio personal. <code>ls</code> Lista los archivos y directorios en la ubicaci\u00f3n actual. <code>ls</code> muestra <code>archivo1 archivo2 directorio1</code>. <code>touch</code> Crea un archivo vac\u00edo. <code>touch prueba.txt</code> crea un archivo llamado <code>prueba.txt</code>. <code>cd</code> Cambia de directorio. <code>cd /</code> te lleva al directorio ra\u00edz. <code>mkdir</code> Crea un nuevo directorio. <code>mkdir nuevo_directorio</code> crea un directorio llamado <code>nuevo_directorio</code>. <code>rmdir</code> Elimina un directorio vac\u00edo. <code>rmdir nuevo_directorio</code> elimina el directorio si est\u00e1 vac\u00edo. <code>cat</code> Muestra el contenido de un archivo. <code>cat archivo.txt</code> muestra el contenido de <code>archivo.txt</code>. <code>wc</code> Cuenta l\u00edneas, palabras y caracteres en un archivo. <code>wc -l archivo.txt</code> cuenta las l\u00edneas en <code>archivo.txt</code>. <code>grep</code> Busca patrones en un archivo. <code>grep \"root\" /etc/passwd</code> busca la palabra \"root\" en el archivo. <code>find</code> Busca archivos y directorios. <code>find . -name \"*.txt\"</code> busca todos los archivos <code>.txt</code> en el directorio actual. <code>chmod</code> Cambia los permisos de un archivo. <code>chmod +x script.sh</code> hace ejecutable el archivo <code>script.sh</code>. <code>chown</code> Cambia el propietario de un archivo. <code>sudo chown root archivo</code> asigna el archivo al usuario <code>root</code>. <code>export</code> Establece variables de entorno. <code>export PATH=$PATH:/nuevo/directorio</code> a\u00f1ade un directorio al PATH. <code>tail</code> Muestra las \u00faltimas l\u00edneas de un archivo. <code>tail -n 3 archivo.txt</code> muestra las \u00faltimas 3 l\u00edneas de <code>archivo.txt</code>. <code>head</code> Muestra las primeras l\u00edneas de un archivo. <code>head -n 5 archivo.txt</code> muestra las primeras 5 l\u00edneas de <code>archivo.txt</code>. <code>echo</code> Muestra un mensaje o el valor de una variable. <code>echo $HOME</code> muestra el directorio personal del usuario. <code>cp</code> Copia archivos o directorios. <code>cp archivo1 archivo2</code> copia <code>archivo1</code> a <code>archivo2</code>. <code>mv</code> Mueve o renombra archivos o directorios. <code>mv archivo1 archivo2</code> renombra <code>archivo1</code> a <code>archivo2</code>. <code>rm</code> Elimina archivos o directorios. <code>rm archivo.txt</code> elimina el archivo <code>archivo.txt</code>."},{"location":"recordatorios/commandosLinux/#entrega","title":"Entrega","text":"<ul> <li>Realiza cada uno de los pasos y toma capturas de pantalla de los resultados.</li> <li>Entrega un archivo comprimido con las capturas y los archivos generados durante la pr\u00e1ctica.</li> </ul>"},{"location":"recordatorios/commandosWindows/","title":"Comandos Windows","text":"<p>Aqu\u00ed se incluir\u00e1n los comandos b\u00e1sicos y avanzados para trabajar en sistemas Windows.</p>"},{"location":"recordatorios/commandosWindows/#introduccion","title":"Introducci\u00f3n","text":""},{"location":"recordatorios/commandosWindows/#ejercicio-1-exploracion-basica","title":"Ejercicio 1: Exploraci\u00f3n b\u00e1sica","text":"<ol> <li>Introduce el comando para mostrar tu ubicaci\u00f3n actual en el sistema.</li> <li>Introduce el comando para listar los archivos y directorios en tu ubicaci\u00f3n actual.</li> <li>Introduce el comando para crear un archivo vac\u00edo llamado <code>prueba.txt</code> en tu ubicaci\u00f3n actual.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-2-navegacion-y-directorios","title":"Ejercicio 2: Navegaci\u00f3n y directorios","text":"<ol> <li>Introduce el comando para cambiar al directorio ra\u00edz del sistema.</li> <li>Introduce el comando para crear un directorio llamado <code>nuevo_directorio</code> en tu ubicaci\u00f3n actual.</li> <li>Introduce el comando para eliminar el directorio <code>nuevo_directorio</code> que creaste anteriormente.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-3-visualizacion-de-contenido","title":"Ejercicio 3: Visualizaci\u00f3n de contenido","text":"<ol> <li>Introduce el comando para mostrar el contenido de un archivo llamado <code>prueba.txt</code>.</li> <li>Introduce el comando para contar las l\u00edneas de un archivo llamado <code>prueba.txt</code>.</li> <li>Introduce el comando para buscar la palabra \"administrador\" en un archivo llamado <code>usuarios.txt</code>.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicios-avanzados","title":"Ejercicios avanzados","text":""},{"location":"recordatorios/commandosWindows/#ejercicio-1-listado-de-archivos-y-directorios","title":"Ejercicio 1: Listado de archivos y directorios","text":"<ol> <li>Introduce el comando para listar todos los archivos y directorios, incluidos los ocultos, en el directorio ra\u00edz.</li> <li>Introduce el comando para obtener una lista detallada de todos los archivos y directorios, incluidos los contenidos de los subdirectorios, en <code>C:\\Usuarios</code>.</li> <li>Introduce el comando para listar los nombres de los archivos en tu directorio actual que comiencen con la letra <code>a</code>.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-2-variables-de-entorno","title":"Ejercicio 2: Variables de entorno","text":"<ol> <li>Introduce el comando para mostrar el valor de la variable de entorno que indica el directorio de inicio del usuario actual.</li> <li>Introduce el comando para mostrar el valor de la variable de entorno que contiene las rutas de b\u00fasqueda de comandos.</li> <li>Introduce el comando para a\u00f1adir un nuevo directorio a la variable de entorno PATH.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-3-gestion-de-directorios","title":"Ejercicio 3: Gesti\u00f3n de directorios","text":"<ol> <li>Introduce un comando para crear un directorio llamado <code>D1</code> en tu directorio de trabajo.</li> <li>Introduce un comando para copiar todos los archivos de tu directorio de trabajo al directorio <code>D1</code>.</li> <li>Introduce un comando para mover un archivo llamado <code>archivo.txt</code> desde tu directorio de trabajo al directorio <code>D1</code>.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-4-permisos-y-propietarios","title":"Ejercicio 4: Permisos y propietarios","text":"<ol> <li>Introduce un comando para cambiar los permisos de un archivo para que solo el propietario pueda modificarlo.</li> <li>Introduce un comando para cambiar el propietario de un archivo al usuario <code>Administrador</code>.</li> <li>Introduce un comando para a\u00f1adir permisos de ejecuci\u00f3n a todos los archivos con extensi\u00f3n <code>.ps1</code> en tu directorio actual.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-5-busqueda-y-manipulacion-de-archivos","title":"Ejercicio 5: B\u00fasqueda y manipulaci\u00f3n de archivos","text":"<ol> <li>Introduce un comando para buscar en tu directorio personal todos los archivos que comiencen con la letra <code>t</code> y modificar su fecha de actualizaci\u00f3n a la actual.</li> <li>Introduce un comando para buscar todos los archivos en el sistema que sean menores de 1 MB y pertenezcan al usuario <code>Administrador</code>, y guarda sus nombres en un archivo llamado <code>ficheros_peque\u00f1os</code>.</li> <li>Introduce un comando para buscar todos los archivos del usuario <code>Invitado</code> que ocupen m\u00e1s de 5000 MB y tengan permisos de escritura, y elim\u00ednalos.</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-6-procesamiento-de-contenido","title":"Ejercicio 6: Procesamiento de contenido","text":"<ol> <li>Introduce un comando para mostrar el contenido de un archivo llamado <code>usuarios.txt</code> y reemplazar los dos puntos (<code>:</code>) por guiones bajos (<code>_</code>).</li> <li>Introduce un comando para mostrar solo las l\u00edneas del archivo <code>usuarios.txt</code> que correspondan al usuario <code>Administrador</code>.</li> <li>Introduce un comando para contar el n\u00famero de l\u00edneas en el archivo <code>usuarios.txt</code> que contengan la palabra \"PowerShell\".</li> </ol>"},{"location":"recordatorios/commandosWindows/#ejercicio-7-redirecciones","title":"Ejercicio 7: Redirecciones","text":"<ol> <li>Introduce un comando para redirigir la salida est\u00e1ndar del contenido de un archivo llamado <code>registro.log</code> al final de un archivo llamado <code>salida.txt</code> y los errores a un archivo llamado <code>errores.txt</code>.</li> <li>Introduce un comando para obtener las tres \u00faltimas l\u00edneas de un archivo llamado <code>t1</code> y guardar el resultado en un archivo llamado <code>resultado.txt</code>.</li> <li>Introduce un comando para redirigir la salida de un comando que liste los archivos en el directorio actual a un archivo llamado <code>listado.txt</code>, y los errores a un archivo llamado <code>errores_listado.txt</code>.</li> </ol>"},{"location":"recordatorios/commandosWindows/#resumen-de-comandos-que-se-utilizan-en-los-ejercicios","title":"Resumen de comandos que se utilizan en los ejercicios.","text":"Comando Descripci\u00f3n Ejemplo <code>Get-Location</code> Muestra el directorio actual de trabajo. <code>Get-Location</code> devuelve <code>C:\\Usuarios\\Admin</code> si est\u00e1s en ese directorio. <code>Get-ChildItem</code> Lista los archivos y directorios en la ubicaci\u00f3n actual. <code>Get-ChildItem</code> muestra <code>archivo1 archivo2 directorio1</code>. <code>New-Item</code> Crea un nuevo archivo o directorio. <code>New-Item -Name prueba.txt -ItemType File</code> crea un archivo llamado <code>prueba.txt</code>. <code>Set-Location</code> Cambia de directorio. <code>Set-Location C:\\</code> te lleva al directorio ra\u00edz. <code>Remove-Item</code> Elimina archivos o directorios. <code>Remove-Item -Recurse -Force nuevo_directorio</code> elimina el directorio y su contenido. <code>Get-Content</code> Muestra el contenido de un archivo. <code>Get-Content prueba.txt</code> muestra el contenido de <code>prueba.txt</code>. <code>Select-String</code> Busca patrones en un archivo. <code>Select-String -Path usuarios.txt -Pattern \"admin\"</code> busca \"admin\" en el archivo. <code>$Env:</code> Accede a variables de entorno. <code>$Env:USERPROFILE</code> muestra el directorio personal del usuario. <code>Copy-Item</code> Copia archivos o directorios. <code>Copy-Item * -Destination D1</code> copia todos los archivos al directorio <code>D1</code>. <code>Move-Item</code> Mueve o renombra archivos o directorios. <code>Move-Item archivo.txt -Destination D1</code> mueve <code>archivo.txt</code> al directorio <code>D1</code>. <code>icacls</code> Cambia permisos de archivos o directorios. <code>icacls archivo /grant:r Everyone:R</code> da permisos de solo lectura a todos. <code>ForEach-Object</code> Itera sobre objetos en un pipeline. <code>Get-ChildItem | ForEach-Object { $_.Name }</code> muestra los nombres de los archivos. <code>Set-Content</code> Escribe contenido en un archivo. <code>\"Texto\" | Set-Content archivo.txt</code> escribe \"Texto\" en <code>archivo.txt</code>. <code>Out-File</code> Redirige la salida a un archivo. <code>Get-ChildItem | Out-File listado.txt</code> guarda la lista de archivos en <code>listado.txt</code>. <code>Where-Object</code> Filtra objetos en un pipeline. <code>Get-ChildItem | Where-Object { $_.Length -gt 1MB }</code> filtra archivos mayores de 1 MB. <code>Get-Date</code> Obtiene la fecha y hora actuales. <code>Get-Date</code> devuelve la fecha y hora actuales. <code>Set-ItemProperty</code> Cambia propiedades de un archivo o directorio. <code>Set-ItemProperty -Path archivo.txt -Name IsReadOnly -Value $true</code> hace que el archivo sea de solo lectura."}]}